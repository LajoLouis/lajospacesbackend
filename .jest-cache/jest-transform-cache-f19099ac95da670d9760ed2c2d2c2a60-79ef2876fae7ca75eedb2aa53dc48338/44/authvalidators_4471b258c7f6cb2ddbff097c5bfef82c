e913545cab8c4eac98eef4913925d536
"use strict";

/* istanbul ignore next */
function cov_6lpkz6xfi() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\auth.validators.ts";
  var hash = "c9573d521f2d9c52e5ed6400627d78d808658189";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\auth.validators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 268
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 45
        }
      },
      "6": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "7": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "8": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "9": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "10": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 71,
          column: 2
        }
      },
      "11": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "12": {
        start: {
          line: 55,
          column: 22
        },
        end: {
          line: 55,
          column: 62
        }
      },
      "13": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 58
        }
      },
      "14": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "15": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "16": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 20
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "18": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "19": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "20": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "21": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "22": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 125,
          column: 3
        }
      },
      "23": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 143,
          column: 3
        }
      },
      "24": {
        start: {
          line: 147,
          column: 0
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "25": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 171,
          column: 3
        }
      },
      "26": {
        start: {
          line: 175,
          column: 0
        },
        end: {
          line: 177,
          column: 3
        }
      },
      "27": {
        start: {
          line: 181,
          column: 0
        },
        end: {
          line: 187,
          column: 3
        }
      },
      "28": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "29": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 238,
          column: 6
        }
      },
      "30": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "31": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "32": {
        start: {
          line: 218,
          column: 34
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "33": {
        start: {
          line: 218,
          column: 63
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "34": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 233,
          column: 15
        }
      },
      "35": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 25
        }
      },
      "36": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "37": {
        start: {
          line: 240,
          column: 0
        },
        end: {
          line: 251,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 53
      },
      "2": {
        name: "validateRequest",
        decl: {
          start: {
            line: 210,
            column: 9
          },
          end: {
            line: 210,
            column: 24
          }
        },
        loc: {
          start: {
            line: 210,
            column: 33
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 210
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 211,
            column: 11
          },
          end: {
            line: 211,
            column: 12
          }
        },
        loc: {
          start: {
            line: 211,
            column: 31
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 211
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 218,
            column: 52
          },
          end: {
            line: 218,
            column: 53
          }
        },
        loc: {
          start: {
            line: 218,
            column: 63
          },
          end: {
            line: 221,
            column: 13
          }
        },
        line: 218
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 21
          }
        }, {
          start: {
            line: 58,
            column: 26
          },
          end: {
            line: 58,
            column: 41
          }
        }, {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 58,
            column: 56
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\auth.validators.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\auth.validators.ts"],
      sourcesContent: ["import Joi from 'joi';\r\n\r\n// Password validation schema\r\nconst passwordSchema = Joi.string()\r\n  .min(8)\r\n  .max(128)\r\n  .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/)\r\n  .required()\r\n  .messages({\r\n    'string.min': 'Password must be at least 8 characters long',\r\n    'string.max': 'Password cannot exceed 128 characters',\r\n    'string.pattern.base': 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character',\r\n    'any.required': 'Password is required'\r\n  });\r\n\r\n// Email validation schema\r\nconst emailSchema = Joi.string()\r\n  .email({ tlds: { allow: false } })\r\n  .lowercase()\r\n  .required()\r\n  .messages({\r\n    'string.email': 'Please provide a valid email address',\r\n    'any.required': 'Email is required'\r\n  });\r\n\r\n// Nigerian phone number validation\r\nconst phoneSchema = Joi.string()\r\n  .pattern(/^(\\+234|234|0)?[789][01]\\d{8}$/)\r\n  .messages({\r\n    'string.pattern.base': 'Please provide a valid Nigerian phone number (e.g., +2348012345678, 08012345678)'\r\n  });\r\n\r\n// Name validation schema\r\nconst nameSchema = Joi.string()\r\n  .min(2)\r\n  .max(50)\r\n  .pattern(/^[a-zA-Z\\s'-]+$/)\r\n  .trim()\r\n  .required()\r\n  .messages({\r\n    'string.min': 'Name must be at least 2 characters long',\r\n    'string.max': 'Name cannot exceed 50 characters',\r\n    'string.pattern.base': 'Name can only contain letters, spaces, hyphens, and apostrophes',\r\n    'any.required': 'Name is required'\r\n  });\r\n\r\n// Date of birth validation (18-100 years old)\r\nconst dateOfBirthSchema = Joi.date()\r\n  .max('now')\r\n  .min(new Date(new Date().getFullYear() - 100, 0, 1))\r\n  .custom((value, helpers) => {\r\n    const age = new Date().getFullYear() - value.getFullYear();\r\n    const monthDiff = new Date().getMonth() - value.getMonth();\r\n    const dayDiff = new Date().getDate() - value.getDate();\r\n    \r\n    let actualAge = age;\r\n    if (monthDiff < 0 || (monthDiff === 0 && dayDiff < 0)) {\r\n      actualAge--;\r\n    }\r\n    \r\n    if (actualAge < 18) {\r\n      return helpers.error('date.min');\r\n    }\r\n    \r\n    return value;\r\n  })\r\n  .required()\r\n  .messages({\r\n    'date.max': 'Date of birth cannot be in the future',\r\n    'date.min': 'You must be at least 18 years old',\r\n    'any.required': 'Date of birth is required'\r\n  });\r\n\r\n/**\r\n * User registration validation schema\r\n */\r\nexport const registerSchema = Joi.object({\r\n  email: emailSchema,\r\n  password: passwordSchema,\r\n  firstName: nameSchema,\r\n  lastName: nameSchema,\r\n  dateOfBirth: dateOfBirthSchema,\r\n  gender: Joi.string()\r\n    .valid('male', 'female', 'non-binary', 'prefer-not-to-say')\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Gender must be one of: male, female, non-binary, prefer-not-to-say',\r\n      'any.required': 'Gender is required'\r\n    }),\r\n  phoneNumber: phoneSchema.optional(),\r\n  accountType: Joi.string()\r\n    .valid('seeker', 'owner', 'both')\r\n    .default('seeker')\r\n    .messages({\r\n      'any.only': 'Account type must be one of: seeker, owner, both'\r\n    }),\r\n  location: Joi.object({\r\n    city: Joi.string().trim().max(100).optional(),\r\n    state: Joi.string().trim().max(100).optional(),\r\n    country: Joi.string().trim().max(100).default('Nigeria')\r\n  }).optional(),\r\n  agreeToTerms: Joi.boolean()\r\n    .valid(true)\r\n    .required()\r\n    .messages({\r\n      'any.only': 'You must agree to the terms and conditions',\r\n      'any.required': 'Agreement to terms is required'\r\n    })\r\n});\r\n\r\n/**\r\n * User login validation schema\r\n */\r\nexport const loginSchema = Joi.object({\r\n  email: emailSchema,\r\n  password: Joi.string()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Password is required'\r\n    }),\r\n  rememberMe: Joi.boolean().default(false)\r\n});\r\n\r\n/**\r\n * Forgot password validation schema\r\n */\r\nexport const forgotPasswordSchema = Joi.object({\r\n  email: emailSchema\r\n});\r\n\r\n/**\r\n * Reset password validation schema\r\n */\r\nexport const resetPasswordSchema = Joi.object({\r\n  token: Joi.string()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Reset token is required'\r\n    }),\r\n  password: passwordSchema,\r\n  confirmPassword: Joi.string()\r\n    .valid(Joi.ref('password'))\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Passwords do not match',\r\n      'any.required': 'Password confirmation is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Change password validation schema\r\n */\r\nexport const changePasswordSchema = Joi.object({\r\n  currentPassword: Joi.string()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Current password is required'\r\n    }),\r\n  newPassword: passwordSchema,\r\n  confirmPassword: Joi.string()\r\n    .valid(Joi.ref('newPassword'))\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Passwords do not match',\r\n      'any.required': 'Password confirmation is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Email verification validation schema\r\n */\r\nexport const verifyEmailSchema = Joi.object({\r\n  token: Joi.string()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Verification token is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Resend verification email schema\r\n */\r\nexport const resendVerificationSchema = Joi.object({\r\n  email: emailSchema\r\n});\r\n\r\n/**\r\n * Refresh token validation schema\r\n */\r\nexport const refreshTokenSchema = Joi.object({\r\n  refreshToken: Joi.string()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Refresh token is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Update profile validation schema\r\n */\r\nexport const updateProfileSchema = Joi.object({\r\n  firstName: nameSchema.optional(),\r\n  lastName: nameSchema.optional(),\r\n  phoneNumber: phoneSchema.optional().allow(''),\r\n  location: Joi.object({\r\n    city: Joi.string().trim().max(100).optional(),\r\n    state: Joi.string().trim().max(100).optional(),\r\n    country: Joi.string().trim().max(100).optional()\r\n  }).optional(),\r\n  preferences: Joi.object({\r\n    emailNotifications: Joi.boolean().optional(),\r\n    pushNotifications: Joi.boolean().optional(),\r\n    smsNotifications: Joi.boolean().optional(),\r\n    marketingEmails: Joi.boolean().optional()\r\n  }).optional()\r\n});\r\n\r\n/**\r\n * Validation middleware factory\r\n */\r\nexport function validateRequest(schema: Joi.ObjectSchema) {\r\n  return (req: any, res: any, next: any) => {\r\n    const { error, value } = schema.validate(req.body, {\r\n      abortEarly: false,\r\n      stripUnknown: true,\r\n      convert: true\r\n    });\r\n\r\n    if (error) {\r\n      const errorMessages = error.details.map(detail => ({\r\n        field: detail.path.join('.'),\r\n        message: detail.message\r\n      }));\r\n\r\n      return res.status(400).json({\r\n        success: false,\r\n        error: {\r\n          message: 'Validation failed',\r\n          code: 'VALIDATION_ERROR',\r\n          statusCode: 400,\r\n          timestamp: new Date().toISOString(),\r\n          path: req.path,\r\n          method: req.method,\r\n          details: errorMessages\r\n        }\r\n      });\r\n    }\r\n\r\n    // Replace req.body with validated and sanitized data\r\n    req.body = value;\r\n    next();\r\n  };\r\n}\r\n\r\nexport default {\r\n  registerSchema,\r\n  loginSchema,\r\n  forgotPasswordSchema,\r\n  resetPasswordSchema,\r\n  changePasswordSchema,\r\n  verifyEmailSchema,\r\n  resendVerificationSchema,\r\n  refreshTokenSchema,\r\n  updateProfileSchema,\r\n  validateRequest\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9573d521f2d9c52e5ed6400627d78d808658189"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6lpkz6xfi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6lpkz6xfi();
var __importDefault =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[0]++,
/* istanbul ignore next */
(cov_6lpkz6xfi().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_6lpkz6xfi().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_6lpkz6xfi().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_6lpkz6xfi().f[0]++;
  cov_6lpkz6xfi().s[1]++;
  return /* istanbul ignore next */(cov_6lpkz6xfi().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_6lpkz6xfi().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6lpkz6xfi().s[3]++;
exports.updateProfileSchema = exports.refreshTokenSchema = exports.resendVerificationSchema = exports.verifyEmailSchema = exports.changePasswordSchema = exports.resetPasswordSchema = exports.forgotPasswordSchema = exports.loginSchema = exports.registerSchema = void 0;
/* istanbul ignore next */
cov_6lpkz6xfi().s[4]++;
exports.validateRequest = validateRequest;
const joi_1 =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[5]++, __importDefault(require("joi")));
// Password validation schema
const passwordSchema =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[6]++, joi_1.default.string().min(8).max(128).pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).required().messages({
  'string.min': 'Password must be at least 8 characters long',
  'string.max': 'Password cannot exceed 128 characters',
  'string.pattern.base': 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character',
  'any.required': 'Password is required'
}));
// Email validation schema
const emailSchema =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[7]++, joi_1.default.string().email({
  tlds: {
    allow: false
  }
}).lowercase().required().messages({
  'string.email': 'Please provide a valid email address',
  'any.required': 'Email is required'
}));
// Nigerian phone number validation
const phoneSchema =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[8]++, joi_1.default.string().pattern(/^(\+234|234|0)?[789][01]\d{8}$/).messages({
  'string.pattern.base': 'Please provide a valid Nigerian phone number (e.g., +2348012345678, 08012345678)'
}));
// Name validation schema
const nameSchema =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[9]++, joi_1.default.string().min(2).max(50).pattern(/^[a-zA-Z\s'-]+$/).trim().required().messages({
  'string.min': 'Name must be at least 2 characters long',
  'string.max': 'Name cannot exceed 50 characters',
  'string.pattern.base': 'Name can only contain letters, spaces, hyphens, and apostrophes',
  'any.required': 'Name is required'
}));
// Date of birth validation (18-100 years old)
const dateOfBirthSchema =
/* istanbul ignore next */
(cov_6lpkz6xfi().s[10]++, joi_1.default.date().max('now').min(new Date(new Date().getFullYear() - 100, 0, 1)).custom((value, helpers) => {
  /* istanbul ignore next */
  cov_6lpkz6xfi().f[1]++;
  const age =
  /* istanbul ignore next */
  (cov_6lpkz6xfi().s[11]++, new Date().getFullYear() - value.getFullYear());
  const monthDiff =
  /* istanbul ignore next */
  (cov_6lpkz6xfi().s[12]++, new Date().getMonth() - value.getMonth());
  const dayDiff =
  /* istanbul ignore next */
  (cov_6lpkz6xfi().s[13]++, new Date().getDate() - value.getDate());
  let actualAge =
  /* istanbul ignore next */
  (cov_6lpkz6xfi().s[14]++, age);
  /* istanbul ignore next */
  cov_6lpkz6xfi().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[4][0]++, monthDiff < 0) ||
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[4][1]++, monthDiff === 0) &&
  /* istanbul ignore next */
  (cov_6lpkz6xfi().b[4][2]++, dayDiff < 0)) {
    /* istanbul ignore next */
    cov_6lpkz6xfi().b[3][0]++;
    cov_6lpkz6xfi().s[16]++;
    actualAge--;
  } else
  /* istanbul ignore next */
  {
    cov_6lpkz6xfi().b[3][1]++;
  }
  cov_6lpkz6xfi().s[17]++;
  if (actualAge < 18) {
    /* istanbul ignore next */
    cov_6lpkz6xfi().b[5][0]++;
    cov_6lpkz6xfi().s[18]++;
    return helpers.error('date.min');
  } else
  /* istanbul ignore next */
  {
    cov_6lpkz6xfi().b[5][1]++;
  }
  cov_6lpkz6xfi().s[19]++;
  return value;
}).required().messages({
  'date.max': 'Date of birth cannot be in the future',
  'date.min': 'You must be at least 18 years old',
  'any.required': 'Date of birth is required'
}));
/**
 * User registration validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[20]++;
exports.registerSchema = joi_1.default.object({
  email: emailSchema,
  password: passwordSchema,
  firstName: nameSchema,
  lastName: nameSchema,
  dateOfBirth: dateOfBirthSchema,
  gender: joi_1.default.string().valid('male', 'female', 'non-binary', 'prefer-not-to-say').required().messages({
    'any.only': 'Gender must be one of: male, female, non-binary, prefer-not-to-say',
    'any.required': 'Gender is required'
  }),
  phoneNumber: phoneSchema.optional(),
  accountType: joi_1.default.string().valid('seeker', 'owner', 'both').default('seeker').messages({
    'any.only': 'Account type must be one of: seeker, owner, both'
  }),
  location: joi_1.default.object({
    city: joi_1.default.string().trim().max(100).optional(),
    state: joi_1.default.string().trim().max(100).optional(),
    country: joi_1.default.string().trim().max(100).default('Nigeria')
  }).optional(),
  agreeToTerms: joi_1.default.boolean().valid(true).required().messages({
    'any.only': 'You must agree to the terms and conditions',
    'any.required': 'Agreement to terms is required'
  })
});
/**
 * User login validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[21]++;
exports.loginSchema = joi_1.default.object({
  email: emailSchema,
  password: joi_1.default.string().required().messages({
    'any.required': 'Password is required'
  }),
  rememberMe: joi_1.default.boolean().default(false)
});
/**
 * Forgot password validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[22]++;
exports.forgotPasswordSchema = joi_1.default.object({
  email: emailSchema
});
/**
 * Reset password validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[23]++;
exports.resetPasswordSchema = joi_1.default.object({
  token: joi_1.default.string().required().messages({
    'any.required': 'Reset token is required'
  }),
  password: passwordSchema,
  confirmPassword: joi_1.default.string().valid(joi_1.default.ref('password')).required().messages({
    'any.only': 'Passwords do not match',
    'any.required': 'Password confirmation is required'
  })
});
/**
 * Change password validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[24]++;
exports.changePasswordSchema = joi_1.default.object({
  currentPassword: joi_1.default.string().required().messages({
    'any.required': 'Current password is required'
  }),
  newPassword: passwordSchema,
  confirmPassword: joi_1.default.string().valid(joi_1.default.ref('newPassword')).required().messages({
    'any.only': 'Passwords do not match',
    'any.required': 'Password confirmation is required'
  })
});
/**
 * Email verification validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[25]++;
exports.verifyEmailSchema = joi_1.default.object({
  token: joi_1.default.string().required().messages({
    'any.required': 'Verification token is required'
  })
});
/**
 * Resend verification email schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[26]++;
exports.resendVerificationSchema = joi_1.default.object({
  email: emailSchema
});
/**
 * Refresh token validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[27]++;
exports.refreshTokenSchema = joi_1.default.object({
  refreshToken: joi_1.default.string().required().messages({
    'any.required': 'Refresh token is required'
  })
});
/**
 * Update profile validation schema
 */
/* istanbul ignore next */
cov_6lpkz6xfi().s[28]++;
exports.updateProfileSchema = joi_1.default.object({
  firstName: nameSchema.optional(),
  lastName: nameSchema.optional(),
  phoneNumber: phoneSchema.optional().allow(''),
  location: joi_1.default.object({
    city: joi_1.default.string().trim().max(100).optional(),
    state: joi_1.default.string().trim().max(100).optional(),
    country: joi_1.default.string().trim().max(100).optional()
  }).optional(),
  preferences: joi_1.default.object({
    emailNotifications: joi_1.default.boolean().optional(),
    pushNotifications: joi_1.default.boolean().optional(),
    smsNotifications: joi_1.default.boolean().optional(),
    marketingEmails: joi_1.default.boolean().optional()
  }).optional()
});
/**
 * Validation middleware factory
 */
function validateRequest(schema) {
  /* istanbul ignore next */
  cov_6lpkz6xfi().f[2]++;
  cov_6lpkz6xfi().s[29]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_6lpkz6xfi().f[3]++;
    const {
      error,
      value
    } =
    /* istanbul ignore next */
    (cov_6lpkz6xfi().s[30]++, schema.validate(req.body, {
      abortEarly: false,
      stripUnknown: true,
      convert: true
    }));
    /* istanbul ignore next */
    cov_6lpkz6xfi().s[31]++;
    if (error) {
      /* istanbul ignore next */
      cov_6lpkz6xfi().b[6][0]++;
      const errorMessages =
      /* istanbul ignore next */
      (cov_6lpkz6xfi().s[32]++, error.details.map(detail => {
        /* istanbul ignore next */
        cov_6lpkz6xfi().f[4]++;
        cov_6lpkz6xfi().s[33]++;
        return {
          field: detail.path.join('.'),
          message: detail.message
        };
      }));
      /* istanbul ignore next */
      cov_6lpkz6xfi().s[34]++;
      return res.status(400).json({
        success: false,
        error: {
          message: 'Validation failed',
          code: 'VALIDATION_ERROR',
          statusCode: 400,
          timestamp: new Date().toISOString(),
          path: req.path,
          method: req.method,
          details: errorMessages
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_6lpkz6xfi().b[6][1]++;
    }
    // Replace req.body with validated and sanitized data
    cov_6lpkz6xfi().s[35]++;
    req.body = value;
    /* istanbul ignore next */
    cov_6lpkz6xfi().s[36]++;
    next();
  };
}
/* istanbul ignore next */
cov_6lpkz6xfi().s[37]++;
exports.default = {
  registerSchema: exports.registerSchema,
  loginSchema: exports.loginSchema,
  forgotPasswordSchema: exports.forgotPasswordSchema,
  resetPasswordSchema: exports.resetPasswordSchema,
  changePasswordSchema: exports.changePasswordSchema,
  verifyEmailSchema: exports.verifyEmailSchema,
  resendVerificationSchema: exports.resendVerificationSchema,
  refreshTokenSchema: exports.refreshTokenSchema,
  updateProfileSchema: exports.updateProfileSchema,
  validateRequest
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,