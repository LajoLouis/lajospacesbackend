8816b379b5afe627026cd03a987fbbbe
"use strict";

/* istanbul ignore next */
function cov_k8hqpift3() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\search.controller.ts";
  var hash = "b108881f33682866788c3bfd58f610c06d545095";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\search.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 88
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "7": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 226,
          column: 3
        }
      },
      "9": {
        start: {
          line: 26,
          column: 82
        },
        end: {
          line: 26,
          column: 91
        }
      },
      "10": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 98
        }
      },
      "13": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "15": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "16": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "17": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "19": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 92
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "21": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 90
        }
      },
      "22": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "23": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "25": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "27": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "28": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 32
        }
      },
      "29": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "30": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 72,
          column: 27
        }
      },
      "31": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "32": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 64
        }
      },
      "33": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "34": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 66
        }
      },
      "35": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "36": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 56
        }
      },
      "37": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "39": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "40": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "41": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "42": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 95
        }
      },
      "43": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 95
        }
      },
      "45": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "46": {
        start: {
          line: 98,
          column: 22
        },
        end: {
          line: 98,
          column: 84
        }
      },
      "47": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 74
        }
      },
      "48": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "49": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 63
        }
      },
      "50": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "51": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 107,
          column: 79
        }
      },
      "52": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 55
        }
      },
      "53": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "54": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 72
        }
      },
      "55": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "56": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 116,
          column: 36
        }
      },
      "57": {
        start: {
          line: 117,
          column: 17
        },
        end: {
          line: 117,
          column: 41
        }
      },
      "58": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "59": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "60": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "61": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 126,
          column: 19
        }
      },
      "62": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "63": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "64": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 141,
          column: 51
        }
      },
      "65": {
        start: {
          line: 141,
          column: 42
        },
        end: {
          line: 141,
          column: 50
        }
      },
      "66": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "67": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "68": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "69": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "70": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 39
        }
      },
      "71": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "72": {
        start: {
          line: 177,
          column: 58
        },
        end: {
          line: 177,
          column: 69
        }
      },
      "73": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "74": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "75": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "76": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 59
        }
      },
      "77": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 87
        }
      },
      "78": {
        start: {
          line: 230,
          column: 0
        },
        end: {
          line: 314,
          column: 3
        }
      },
      "79": {
        start: {
          line: 231,
          column: 36
        },
        end: {
          line: 231,
          column: 45
        }
      },
      "80": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "81": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "82": {
        start: {
          line: 238,
          column: 22
        },
        end: {
          line: 238,
          column: 27
        }
      },
      "83": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 26
        }
      },
      "84": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "85": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "86": {
        start: {
          line: 243,
          column: 30
        },
        end: {
          line: 260,
          column: 14
        }
      },
      "87": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 264,
          column: 14
        }
      },
      "88": {
        start: {
          line: 262,
          column: 63
        },
        end: {
          line: 262,
          column: 123
        }
      },
      "89": {
        start: {
          line: 263,
          column: 64
        },
        end: {
          line: 263,
          column: 126
        }
      },
      "90": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "91": {
        start: {
          line: 268,
          column: 30
        },
        end: {
          line: 283,
          column: 14
        }
      },
      "92": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 68
        }
      },
      "93": {
        start: {
          line: 284,
          column: 58
        },
        end: {
          line: 284,
          column: 66
        }
      },
      "94": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "95": {
        start: {
          line: 288,
          column: 32
        },
        end: {
          line: 302,
          column: 14
        }
      },
      "96": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 72
        }
      },
      "97": {
        start: {
          line: 303,
          column: 62
        },
        end: {
          line: 303,
          column: 70
        }
      },
      "98": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "99": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 66
        }
      },
      "100": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 104
        }
      },
      "101": {
        start: {
          line: 318,
          column: 0
        },
        end: {
          line: 387,
          column: 3
        }
      },
      "102": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "103": {
        start: {
          line: 321,
          column: 33
        },
        end: {
          line: 331,
          column: 10
        }
      },
      "104": {
        start: {
          line: 333,
          column: 33
        },
        end: {
          line: 343,
          column: 10
        }
      },
      "105": {
        start: {
          line: 345,
          column: 29
        },
        end: {
          line: 361,
          column: 10
        }
      },
      "106": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "107": {
        start: {
          line: 365,
          column: 64
        },
        end: {
          line: 369,
          column: 17
        }
      },
      "108": {
        start: {
          line: 370,
          column: 64
        },
        end: {
          line: 373,
          column: 17
        }
      },
      "109": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 63
        }
      },
      "110": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 112
        }
      },
      "111": {
        start: {
          line: 388,
          column: 0
        },
        end: {
          line: 392,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 53
          },
          end: {
            line: 15,
            column: 54
          }
        },
        loc: {
          start: {
            line: 15,
            column: 80
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 141,
            column: 35
          }
        },
        loc: {
          start: {
            line: 141,
            column: 42
          },
          end: {
            line: 141,
            column: 50
          }
        },
        line: 141
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 160,
            column: 38
          }
        },
        loc: {
          start: {
            line: 160,
            column: 48
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 160
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 177,
            column: 51
          },
          end: {
            line: 177,
            column: 52
          }
        },
        loc: {
          start: {
            line: 177,
            column: 58
          },
          end: {
            line: 177,
            column: 69
          }
        },
        line: 177
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 230,
            column: 62
          },
          end: {
            line: 230,
            column: 63
          }
        },
        loc: {
          start: {
            line: 230,
            column: 89
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 230
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 262,
            column: 53
          },
          end: {
            line: 262,
            column: 54
          }
        },
        loc: {
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 123
          }
        },
        line: 262
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 263,
            column: 53
          },
          end: {
            line: 263,
            column: 54
          }
        },
        loc: {
          start: {
            line: 263,
            column: 64
          },
          end: {
            line: 263,
            column: 126
          }
        },
        line: 263
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 284,
            column: 50
          },
          end: {
            line: 284,
            column: 51
          }
        },
        loc: {
          start: {
            line: 284,
            column: 58
          },
          end: {
            line: 284,
            column: 66
          }
        },
        line: 284
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 303,
            column: 54
          },
          end: {
            line: 303,
            column: 55
          }
        },
        loc: {
          start: {
            line: 303,
            column: 62
          },
          end: {
            line: 303,
            column: 70
          }
        },
        line: 303
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 318,
            column: 59
          },
          end: {
            line: 318,
            column: 60
          }
        },
        loc: {
          start: {
            line: 318,
            column: 87
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 318
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 365,
            column: 55
          },
          end: {
            line: 365,
            column: 56
          }
        },
        loc: {
          start: {
            line: 365,
            column: 64
          },
          end: {
            line: 369,
            column: 17
          }
        },
        line: 365
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 370,
            column: 55
          },
          end: {
            line: 370,
            column: 56
          }
        },
        loc: {
          start: {
            line: 370,
            column: 64
          },
          end: {
            line: 373,
            column: 17
          }
        },
        line: 370
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 20
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 26,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 26,
            column: 57
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 26,
            column: 59
          },
          end: {
            line: 26,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 71
          },
          end: {
            line: 26,
            column: 77
          }
        }],
        line: 26
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 68
          },
          end: {
            line: 33,
            column: 79
          }
        }, {
          start: {
            line: 33,
            column: 82
          },
          end: {
            line: 33,
            column: 95
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 14
          }
        }, {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 36,
            column: 34
          }
        }],
        line: 36
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 14
          }
        }, {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 40,
            column: 24
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "15": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "16": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "17": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "18": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "19": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "20": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "21": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "22": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "23": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: 87,
            column: 21
          },
          end: {
            line: 87,
            column: 30
          }
        }],
        line: 87
      },
      "24": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "25": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "26": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "27": {
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 53
          },
          end: {
            line: 98,
            column: 66
          }
        }, {
          start: {
            line: 98,
            column: 69
          },
          end: {
            line: 98,
            column: 84
          }
        }],
        line: 98
      },
      "28": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "29": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "30": {
        loc: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 107,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 65
          }
        }, {
          start: {
            line: 107,
            column: 68
          },
          end: {
            line: 107,
            column: 79
          }
        }],
        line: 107
      },
      "31": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "32": {
        loc: {
          start: {
            line: 120,
            column: 26
          },
          end: {
            line: 120,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 120,
            column: 51
          }
        }, {
          start: {
            line: 120,
            column: 54
          },
          end: {
            line: 120,
            column: 55
          }
        }],
        line: 120
      },
      "33": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "34": {
        loc: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 69
          },
          end: {
            line: 164,
            column: 83
          }
        }, {
          start: {
            line: 164,
            column: 86
          },
          end: {
            line: 164,
            column: 116
          }
        }],
        line: 164
      },
      "35": {
        loc: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 68
          },
          end: {
            line: 165,
            column: 81
          }
        }, {
          start: {
            line: 165,
            column: 84
          },
          end: {
            line: 165,
            column: 113
          }
        }],
        line: 165
      },
      "36": {
        loc: {
          start: {
            line: 166,
            column: 21
          },
          end: {
            line: 166,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 58
          },
          end: {
            line: 166,
            column: 125
          }
        }, {
          start: {
            line: 166,
            column: 128
          },
          end: {
            line: 166,
            column: 132
          }
        }],
        line: 166
      },
      "37": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 68
          },
          end: {
            line: 168,
            column: 81
          }
        }, {
          start: {
            line: 168,
            column: 84
          },
          end: {
            line: 168,
            column: 88
          }
        }],
        line: 168
      },
      "38": {
        loc: {
          start: {
            line: 173,
            column: 28
          },
          end: {
            line: 173,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 72
          },
          end: {
            line: 173,
            column: 90
          }
        }, {
          start: {
            line: 173,
            column: 93
          },
          end: {
            line: 173,
            column: 97
          }
        }],
        line: 173
      },
      "39": {
        loc: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 57
          }
        }, {
          start: {
            line: 175,
            column: 61
          },
          end: {
            line: 175,
            column: 63
          }
        }],
        line: 175
      },
      "40": {
        loc: {
          start: {
            line: 176,
            column: 25
          },
          end: {
            line: 176,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 25
          },
          end: {
            line: 176,
            column: 53
          }
        }, {
          start: {
            line: 176,
            column: 57
          },
          end: {
            line: 176,
            column: 59
          }
        }],
        line: 176
      },
      "41": {
        loc: {
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 70
          }
        }, {
          start: {
            line: 177,
            column: 74
          },
          end: {
            line: 177,
            column: 93
          }
        }, {
          start: {
            line: 177,
            column: 97
          },
          end: {
            line: 177,
            column: 101
          }
        }],
        line: 177
      },
      "42": {
        loc: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 50
          }
        }, {
          start: {
            line: 178,
            column: 54
          },
          end: {
            line: 178,
            column: 55
          }
        }],
        line: 178
      },
      "43": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "44": {
        loc: {
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 231,
            column: 26
          },
          end: {
            line: 231,
            column: 31
          }
        }],
        line: 231
      },
      "45": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "46": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 14
          }
        }, {
          start: {
            line: 232,
            column: 18
          },
          end: {
            line: 232,
            column: 34
          }
        }],
        line: 232
      },
      "47": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "48": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 241,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 241,
            column: 26
          }
        }, {
          start: {
            line: 241,
            column: 30
          },
          end: {
            line: 241,
            column: 50
          }
        }],
        line: 241
      },
      "49": {
        loc: {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 136
          }
        }, {
          start: {
            line: 262,
            column: 140
          },
          end: {
            line: 262,
            column: 142
          }
        }],
        line: 262
      },
      "50": {
        loc: {
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 67
          }
        }, {
          start: {
            line: 262,
            column: 71
          },
          end: {
            line: 262,
            column: 123
          }
        }],
        line: 262
      },
      "51": {
        loc: {
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 139
          }
        }, {
          start: {
            line: 263,
            column: 143
          },
          end: {
            line: 263,
            column: 145
          }
        }],
        line: 263
      },
      "52": {
        loc: {
          start: {
            line: 263,
            column: 64
          },
          end: {
            line: 263,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 64
          },
          end: {
            line: 263,
            column: 69
          }
        }, {
          start: {
            line: 263,
            column: 73
          },
          end: {
            line: 263,
            column: 126
          }
        }],
        line: 263
      },
      "53": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "54": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 26
          }
        }, {
          start: {
            line: 266,
            column: 30
          },
          end: {
            line: 266,
            column: 50
          }
        }],
        line: 266
      },
      "55": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "56": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 26
          }
        }, {
          start: {
            line: 286,
            column: 30
          },
          end: {
            line: 286,
            column: 52
          }
        }],
        line: 286
      },
      "57": {
        loc: {
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 379,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 32
          },
          end: {
            line: 374,
            column: 47
          }
        }, {
          start: {
            line: 374,
            column: 51
          },
          end: {
            line: 379,
            column: 17
          }
        }],
        line: 374
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\search.controller.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\search.controller.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\r\nimport { AppError, catchAsync } from '../middleware/errorHandler';\r\nimport { logger, logHelpers } from '../utils/logger';\r\nimport User from '../models/User.model';\r\nimport Profile from '../models/Profile.model';\r\n// import { Types } from 'mongoose'; // Commented out as not used\r\n\r\n/**\r\n * Search users with filters\r\n */\r\nexport const searchUsers = catchAsync(async (req: Request, res: Response, _next: NextFunction) => {\r\n  const {\r\n    // Basic filters\r\n    accountType,\r\n    gender,\r\n    ageMin,\r\n    ageMax,\r\n    location,\r\n    \r\n    // Lifestyle filters\r\n    smokingPolicy,\r\n    drinkingPolicy,\r\n    petPolicy,\r\n    cleanlinessLevel,\r\n    \r\n    // Housing filters\r\n    budgetMin,\r\n    budgetMax,\r\n    propertyTypes,\r\n    roomType,\r\n    \r\n    // Other filters\r\n    interests,\r\n    occupation,\r\n    isEmailVerified,\r\n    \r\n    // Search and pagination\r\n    search,\r\n    page = 1,\r\n    limit = 20,\r\n    sortBy = 'lastActiveAt',\r\n    sortOrder = 'desc'\r\n  } = req.query;\r\n\r\n  // Build user query\r\n  const userQuery: any = {\r\n    isActive: true\r\n  };\r\n\r\n  // Account type filter\r\n  if (accountType) {\r\n    userQuery.accountType = { $in: Array.isArray(accountType) ? accountType : [accountType] };\r\n  }\r\n\r\n  // Gender filter\r\n  if (gender && gender !== 'any') {\r\n    userQuery.gender = gender;\r\n  }\r\n\r\n  // Age filter\r\n  if (ageMin || ageMax) {\r\n    const currentYear = new Date().getFullYear();\r\n    userQuery.dateOfBirth = {};\r\n    \r\n    if (ageMax) {\r\n      userQuery.dateOfBirth.$gte = new Date(currentYear - parseInt(ageMax as string) - 1, 0, 1);\r\n    }\r\n    if (ageMin) {\r\n      userQuery.dateOfBirth.$lte = new Date(currentYear - parseInt(ageMin as string), 11, 31);\r\n    }\r\n  }\r\n\r\n  // Location filter\r\n  if (location) {\r\n    const locationStr = location as string;\r\n    userQuery.$or = [\r\n      { 'location.city': { $regex: locationStr, $options: 'i' } },\r\n      { 'location.state': { $regex: locationStr, $options: 'i' } }\r\n    ];\r\n  }\r\n\r\n  // Email verification filter\r\n  if (isEmailVerified === 'true') {\r\n    userQuery.isEmailVerified = true;\r\n  }\r\n\r\n  // Text search in name\r\n  if (search) {\r\n    const searchStr = search as string;\r\n    userQuery.$or = [\r\n      { firstName: { $regex: searchStr, $options: 'i' } },\r\n      { lastName: { $regex: searchStr, $options: 'i' } },\r\n      { email: { $regex: searchStr, $options: 'i' } }\r\n    ];\r\n  }\r\n\r\n  // Build profile query\r\n  const profileQuery: any = {};\r\n\r\n  // Lifestyle filters\r\n  if (smokingPolicy) {\r\n    profileQuery['lifestyle.smokingPolicy'] = smokingPolicy;\r\n  }\r\n  if (drinkingPolicy) {\r\n    profileQuery['lifestyle.drinkingPolicy'] = drinkingPolicy;\r\n  }\r\n  if (petPolicy) {\r\n    profileQuery['lifestyle.petPolicy'] = petPolicy;\r\n  }\r\n  if (cleanlinessLevel) {\r\n    profileQuery['lifestyle.cleanlinessLevel'] = cleanlinessLevel;\r\n  }\r\n\r\n  // Housing budget filter\r\n  if (budgetMin || budgetMax) {\r\n    profileQuery['housingPreferences.budgetRange'] = {};\r\n    if (budgetMin) {\r\n      profileQuery['housingPreferences.budgetRange.min'] = { $gte: parseInt(budgetMin as string) };\r\n    }\r\n    if (budgetMax) {\r\n      profileQuery['housingPreferences.budgetRange.max'] = { $lte: parseInt(budgetMax as string) };\r\n    }\r\n  }\r\n\r\n  // Property types filter\r\n  if (propertyTypes) {\r\n    const types = Array.isArray(propertyTypes) ? propertyTypes : [propertyTypes];\r\n    profileQuery['housingPreferences.propertyTypes'] = { $in: types };\r\n  }\r\n\r\n  // Room type filter\r\n  if (roomType) {\r\n    profileQuery['housingPreferences.roomType'] = roomType;\r\n  }\r\n\r\n  // Interests filter\r\n  if (interests) {\r\n    const interestList = Array.isArray(interests) ? interests : [interests];\r\n    profileQuery.interests = { $in: interestList };\r\n  }\r\n\r\n  // Occupation filter\r\n  if (occupation) {\r\n    profileQuery.occupation = { $regex: occupation as string, $options: 'i' };\r\n  }\r\n\r\n  // Pagination\r\n  const pageNum = parseInt(page as string);\r\n  const limitNum = parseInt(limit as string);\r\n  const skip = (pageNum - 1) * limitNum;\r\n\r\n  // Sort options\r\n  const sortOptions: any = {};\r\n  sortOptions[sortBy as string] = sortOrder === 'desc' ? -1 : 1;\r\n\r\n  try {\r\n    // First find users matching user criteria\r\n    const users = await User.find(userQuery)\r\n      .select('_id firstName lastName dateOfBirth gender location accountType isEmailVerified lastActiveAt createdAt')\r\n      .sort(sortOptions)\r\n      .lean();\r\n\r\n    if (users.length === 0) {\r\n      return res.json({\r\n        success: true,\r\n        data: {\r\n          users: [],\r\n          pagination: {\r\n            page: pageNum,\r\n            limit: limitNum,\r\n            total: 0,\r\n            pages: 0\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    const userIds = users.map(user => user._id);\r\n\r\n    // Then find profiles matching profile criteria\r\n    let profilesQuery = Profile.find({\r\n      userId: { $in: userIds },\r\n      ...profileQuery\r\n    }).populate({\r\n      path: 'userId',\r\n      select: 'firstName lastName dateOfBirth gender location accountType isEmailVerified lastActiveAt createdAt'\r\n    });\r\n\r\n    // Apply pagination to profiles\r\n    const totalProfiles = await Profile.countDocuments({\r\n      userId: { $in: userIds },\r\n      ...profileQuery\r\n    });\r\n\r\n    const profiles = await profilesQuery\r\n      .skip(skip)\r\n      .limit(limitNum)\r\n      .lean();\r\n\r\n    // Format results\r\n    const results = profiles.map(profile => {\r\n      const user = profile.userId as any;\r\n      \r\n      return {\r\n        id: user._id,\r\n        firstName: profile.privacy?.showFullName !== false ? user.firstName : user.firstName.charAt(0) + '.',\r\n        lastName: profile.privacy?.showFullName !== false ? user.lastName : user.lastName.charAt(0) + '.',\r\n        age: profile.privacy?.showAge !== false ? new Date().getFullYear() - new Date(user.dateOfBirth).getFullYear() : null,\r\n        gender: user.gender,\r\n        location: profile.privacy?.showLocation !== false ? user.location : null,\r\n        accountType: user.accountType,\r\n        isEmailVerified: user.isEmailVerified,\r\n        \r\n        // Profile data\r\n        bio: profile.bio,\r\n        occupation: profile.privacy?.showOccupation !== false ? profile.occupation : null,\r\n        education: profile.education,\r\n        interests: profile.interests?.slice(0, 5) || [], // Show first 5 interests\r\n        hobbies: profile.hobbies?.slice(0, 5) || [], // Show first 5 hobbies\r\n        primaryPhoto: profile.photos?.find((p: any) => p.isPrimary) || profile.photos?.[0] || null,\r\n        photoCount: profile.photos?.length || 0,\r\n        \r\n        // Lifestyle\r\n        lifestyle: profile.lifestyle,\r\n        \r\n        // Verification status\r\n        verifications: profile.verifications,\r\n        \r\n        // Activity\r\n        lastActiveAt: user.lastActiveAt,\r\n        memberSince: user.createdAt,\r\n        profileCompleteness: profile.isProfileComplete\r\n      };\r\n    });\r\n\r\n    // Log search activity\r\n    if (req.user) {\r\n      logHelpers.userAction(req.user.userId, 'user_search', {\r\n        filters: { accountType, gender, location, ageMin, ageMax },\r\n        resultsCount: results.length\r\n      });\r\n    }\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: {\r\n        users: results,\r\n        pagination: {\r\n          page: pageNum,\r\n          limit: limitNum,\r\n          total: totalProfiles,\r\n          pages: Math.ceil(totalProfiles / limitNum)\r\n        },\r\n        filters: {\r\n          applied: Object.keys(req.query).length - 3, // Exclude page, limit, sortBy\r\n          available: {\r\n            accountTypes: ['seeker', 'owner', 'both'],\r\n            genders: ['male', 'female', 'non-binary', 'any'],\r\n            lifestyleOptions: {\r\n              smoking: ['no-smoking', 'smoking-allowed', 'outdoor-only'],\r\n              drinking: ['no-drinking', 'social-drinking', 'regular-drinking'],\r\n              pets: ['no-pets', 'cats-only', 'dogs-only', 'all-pets'],\r\n              cleanliness: ['very-clean', 'moderately-clean', 'relaxed']\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('User search error:', error);\r\n    throw new AppError('Search failed', 500, true, 'SEARCH_FAILED');\r\n  }\r\n});\r\n\r\n/**\r\n * Get search suggestions\r\n */\r\nexport const getSearchSuggestions = catchAsync(async (req: Request, res: Response, _next: NextFunction) => {\r\n  const { query, type = 'all' } = req.query;\r\n\r\n  if (!query || (query as string).length < 2) {\r\n    return res.json({\r\n      success: true,\r\n      data: { suggestions: [] }\r\n    });\r\n  }\r\n\r\n  const searchStr = query as string;\r\n  const suggestions: any = {};\r\n\r\n  try {\r\n    if (type === 'all' || type === 'locations') {\r\n      // Location suggestions\r\n      const locations = await User.aggregate([\r\n        {\r\n          $match: {\r\n            isActive: true,\r\n            $or: [\r\n              { 'location.city': { $regex: searchStr, $options: 'i' } },\r\n              { 'location.state': { $regex: searchStr, $options: 'i' } }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          $group: {\r\n            _id: null,\r\n            cities: { $addToSet: '$location.city' },\r\n            states: { $addToSet: '$location.state' }\r\n          }\r\n        }\r\n      ]);\r\n\r\n      suggestions.locations = {\r\n        cities: locations[0]?.cities?.filter((city: string) => \r\n          city && city.toLowerCase().includes(searchStr.toLowerCase())\r\n        ).slice(0, 5) || [],\r\n        states: locations[0]?.states?.filter((state: string) => \r\n          state && state.toLowerCase().includes(searchStr.toLowerCase())\r\n        ).slice(0, 5) || []\r\n      };\r\n    }\r\n\r\n    if (type === 'all' || type === 'interests') {\r\n      // Interest suggestions\r\n      const interests = await Profile.aggregate([\r\n        { $unwind: '$interests' },\r\n        {\r\n          $match: {\r\n            interests: { $regex: searchStr, $options: 'i' }\r\n          }\r\n        },\r\n        {\r\n          $group: {\r\n            _id: '$interests',\r\n            count: { $sum: 1 }\r\n          }\r\n        },\r\n        { $sort: { count: -1 } },\r\n        { $limit: 10 }\r\n      ]);\r\n\r\n      suggestions.interests = interests.map(item => item._id);\r\n    }\r\n\r\n    if (type === 'all' || type === 'occupations') {\r\n      // Occupation suggestions\r\n      const occupations = await Profile.aggregate([\r\n        {\r\n          $match: {\r\n            occupation: { $regex: searchStr, $options: 'i' }\r\n          }\r\n        },\r\n        {\r\n          $group: {\r\n            _id: '$occupation',\r\n            count: { $sum: 1 }\r\n          }\r\n        },\r\n        { $sort: { count: -1 } },\r\n        { $limit: 10 }\r\n      ]);\r\n\r\n      suggestions.occupations = occupations.map(item => item._id);\r\n    }\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: { suggestions }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Search suggestions error:', error);\r\n    throw new AppError('Failed to get suggestions', 500, true, 'SUGGESTIONS_FAILED');\r\n  }\r\n});\r\n\r\n/**\r\n * Get popular search filters\r\n */\r\nexport const getPopularFilters = catchAsync(async (_req: Request, res: Response, _next: NextFunction) => {\r\n  try {\r\n    // Get most common locations\r\n    const popularLocations = await User.aggregate([\r\n      { $match: { isActive: true } },\r\n      {\r\n        $group: {\r\n          _id: { city: '$location.city', state: '$location.state' },\r\n          count: { $sum: 1 }\r\n        }\r\n      },\r\n      { $sort: { count: -1 } },\r\n      { $limit: 10 }\r\n    ]);\r\n\r\n    // Get most common interests\r\n    const popularInterests = await Profile.aggregate([\r\n      { $unwind: '$interests' },\r\n      {\r\n        $group: {\r\n          _id: '$interests',\r\n          count: { $sum: 1 }\r\n        }\r\n      },\r\n      { $sort: { count: -1 } },\r\n      { $limit: 15 }\r\n    ]);\r\n\r\n    // Get budget ranges\r\n    const budgetRanges = await Profile.aggregate([\r\n      {\r\n        $match: {\r\n          'housingPreferences.budgetRange.min': { $exists: true },\r\n          'housingPreferences.budgetRange.max': { $exists: true }\r\n        }\r\n      },\r\n      {\r\n        $group: {\r\n          _id: null,\r\n          avgMin: { $avg: '$housingPreferences.budgetRange.min' },\r\n          avgMax: { $avg: '$housingPreferences.budgetRange.max' },\r\n          minBudget: { $min: '$housingPreferences.budgetRange.min' },\r\n          maxBudget: { $max: '$housingPreferences.budgetRange.max' }\r\n        }\r\n      }\r\n    ]);\r\n\r\n    res.json({\r\n      success: true,\r\n      data: {\r\n        popularLocations: popularLocations.map(item => ({\r\n          city: item._id.city,\r\n          state: item._id.state,\r\n          count: item.count\r\n        })),\r\n        popularInterests: popularInterests.map(item => ({\r\n          interest: item._id,\r\n          count: item.count\r\n        })),\r\n        budgetInsights: budgetRanges[0] || {\r\n          avgMin: 50000,\r\n          avgMax: 150000,\r\n          minBudget: 20000,\r\n          maxBudget: 500000\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Popular filters error:', error);\r\n    throw new AppError('Failed to get popular filters', 500, true, 'POPULAR_FILTERS_FAILED');\r\n  }\r\n});\r\n\r\nexport default {\r\n  searchUsers,\r\n  getSearchSuggestions,\r\n  getPopularFilters\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b108881f33682866788c3bfd58f610c06d545095"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_k8hqpift3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k8hqpift3();
var __importDefault =
/* istanbul ignore next */
(cov_k8hqpift3().s[0]++,
/* istanbul ignore next */
(cov_k8hqpift3().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_k8hqpift3().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_k8hqpift3().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_k8hqpift3().f[0]++;
  cov_k8hqpift3().s[1]++;
  return /* istanbul ignore next */(cov_k8hqpift3().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_k8hqpift3().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_k8hqpift3().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_k8hqpift3().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_k8hqpift3().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_k8hqpift3().s[3]++;
exports.getPopularFilters = exports.getSearchSuggestions = exports.searchUsers = void 0;
const errorHandler_1 =
/* istanbul ignore next */
(cov_k8hqpift3().s[4]++, require("../middleware/errorHandler"));
const logger_1 =
/* istanbul ignore next */
(cov_k8hqpift3().s[5]++, require("../utils/logger"));
const User_model_1 =
/* istanbul ignore next */
(cov_k8hqpift3().s[6]++, __importDefault(require("../models/User.model")));
const Profile_model_1 =
/* istanbul ignore next */
(cov_k8hqpift3().s[7]++, __importDefault(require("../models/Profile.model")));
// import { Types } from 'mongoose'; // Commented out as not used
/**
 * Search users with filters
 */
/* istanbul ignore next */
cov_k8hqpift3().s[8]++;
exports.searchUsers = (0, errorHandler_1.catchAsync)(async (req, res, _next) => {
  /* istanbul ignore next */
  cov_k8hqpift3().f[1]++;
  const {
    // Basic filters
    accountType,
    gender,
    ageMin,
    ageMax,
    location,
    // Lifestyle filters
    smokingPolicy,
    drinkingPolicy,
    petPolicy,
    cleanlinessLevel,
    // Housing filters
    budgetMin,
    budgetMax,
    propertyTypes,
    roomType,
    // Other filters
    interests,
    occupation,
    isEmailVerified,
    // Search and pagination
    search,
    page =
    /* istanbul ignore next */
    (cov_k8hqpift3().b[3][0]++, 1),
    limit =
    /* istanbul ignore next */
    (cov_k8hqpift3().b[4][0]++, 20),
    sortBy =
    /* istanbul ignore next */
    (cov_k8hqpift3().b[5][0]++, 'lastActiveAt'),
    sortOrder =
    /* istanbul ignore next */
    (cov_k8hqpift3().b[6][0]++, 'desc')
  } =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[9]++, req.query);
  // Build user query
  const userQuery =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[10]++, {
    isActive: true
  });
  // Account type filter
  /* istanbul ignore next */
  cov_k8hqpift3().s[11]++;
  if (accountType) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[7][0]++;
    cov_k8hqpift3().s[12]++;
    userQuery.accountType = {
      $in: Array.isArray(accountType) ?
      /* istanbul ignore next */
      (cov_k8hqpift3().b[8][0]++, accountType) :
      /* istanbul ignore next */
      (cov_k8hqpift3().b[8][1]++, [accountType])
    };
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[7][1]++;
  }
  // Gender filter
  cov_k8hqpift3().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_k8hqpift3().b[10][0]++, gender) &&
  /* istanbul ignore next */
  (cov_k8hqpift3().b[10][1]++, gender !== 'any')) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[9][0]++;
    cov_k8hqpift3().s[14]++;
    userQuery.gender = gender;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[9][1]++;
  }
  // Age filter
  cov_k8hqpift3().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_k8hqpift3().b[12][0]++, ageMin) ||
  /* istanbul ignore next */
  (cov_k8hqpift3().b[12][1]++, ageMax)) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[11][0]++;
    const currentYear =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[16]++, new Date().getFullYear());
    /* istanbul ignore next */
    cov_k8hqpift3().s[17]++;
    userQuery.dateOfBirth = {};
    /* istanbul ignore next */
    cov_k8hqpift3().s[18]++;
    if (ageMax) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[13][0]++;
      cov_k8hqpift3().s[19]++;
      userQuery.dateOfBirth.$gte = new Date(currentYear - parseInt(ageMax) - 1, 0, 1);
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[13][1]++;
    }
    cov_k8hqpift3().s[20]++;
    if (ageMin) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[14][0]++;
      cov_k8hqpift3().s[21]++;
      userQuery.dateOfBirth.$lte = new Date(currentYear - parseInt(ageMin), 11, 31);
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[14][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[11][1]++;
  }
  // Location filter
  cov_k8hqpift3().s[22]++;
  if (location) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[15][0]++;
    const locationStr =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[23]++, location);
    /* istanbul ignore next */
    cov_k8hqpift3().s[24]++;
    userQuery.$or = [{
      'location.city': {
        $regex: locationStr,
        $options: 'i'
      }
    }, {
      'location.state': {
        $regex: locationStr,
        $options: 'i'
      }
    }];
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[15][1]++;
  }
  // Email verification filter
  cov_k8hqpift3().s[25]++;
  if (isEmailVerified === 'true') {
    /* istanbul ignore next */
    cov_k8hqpift3().b[16][0]++;
    cov_k8hqpift3().s[26]++;
    userQuery.isEmailVerified = true;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[16][1]++;
  }
  // Text search in name
  cov_k8hqpift3().s[27]++;
  if (search) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[17][0]++;
    const searchStr =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[28]++, search);
    /* istanbul ignore next */
    cov_k8hqpift3().s[29]++;
    userQuery.$or = [{
      firstName: {
        $regex: searchStr,
        $options: 'i'
      }
    }, {
      lastName: {
        $regex: searchStr,
        $options: 'i'
      }
    }, {
      email: {
        $regex: searchStr,
        $options: 'i'
      }
    }];
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[17][1]++;
  }
  // Build profile query
  const profileQuery =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[30]++, {});
  // Lifestyle filters
  /* istanbul ignore next */
  cov_k8hqpift3().s[31]++;
  if (smokingPolicy) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[18][0]++;
    cov_k8hqpift3().s[32]++;
    profileQuery['lifestyle.smokingPolicy'] = smokingPolicy;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[18][1]++;
  }
  cov_k8hqpift3().s[33]++;
  if (drinkingPolicy) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[19][0]++;
    cov_k8hqpift3().s[34]++;
    profileQuery['lifestyle.drinkingPolicy'] = drinkingPolicy;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[19][1]++;
  }
  cov_k8hqpift3().s[35]++;
  if (petPolicy) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[20][0]++;
    cov_k8hqpift3().s[36]++;
    profileQuery['lifestyle.petPolicy'] = petPolicy;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[20][1]++;
  }
  cov_k8hqpift3().s[37]++;
  if (cleanlinessLevel) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[21][0]++;
    cov_k8hqpift3().s[38]++;
    profileQuery['lifestyle.cleanlinessLevel'] = cleanlinessLevel;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[21][1]++;
  }
  // Housing budget filter
  cov_k8hqpift3().s[39]++;
  if (
  /* istanbul ignore next */
  (cov_k8hqpift3().b[23][0]++, budgetMin) ||
  /* istanbul ignore next */
  (cov_k8hqpift3().b[23][1]++, budgetMax)) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[22][0]++;
    cov_k8hqpift3().s[40]++;
    profileQuery['housingPreferences.budgetRange'] = {};
    /* istanbul ignore next */
    cov_k8hqpift3().s[41]++;
    if (budgetMin) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[24][0]++;
      cov_k8hqpift3().s[42]++;
      profileQuery['housingPreferences.budgetRange.min'] = {
        $gte: parseInt(budgetMin)
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[24][1]++;
    }
    cov_k8hqpift3().s[43]++;
    if (budgetMax) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[25][0]++;
      cov_k8hqpift3().s[44]++;
      profileQuery['housingPreferences.budgetRange.max'] = {
        $lte: parseInt(budgetMax)
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[25][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[22][1]++;
  }
  // Property types filter
  cov_k8hqpift3().s[45]++;
  if (propertyTypes) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[26][0]++;
    const types =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[46]++, Array.isArray(propertyTypes) ?
    /* istanbul ignore next */
    (cov_k8hqpift3().b[27][0]++, propertyTypes) :
    /* istanbul ignore next */
    (cov_k8hqpift3().b[27][1]++, [propertyTypes]));
    /* istanbul ignore next */
    cov_k8hqpift3().s[47]++;
    profileQuery['housingPreferences.propertyTypes'] = {
      $in: types
    };
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[26][1]++;
  }
  // Room type filter
  cov_k8hqpift3().s[48]++;
  if (roomType) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[28][0]++;
    cov_k8hqpift3().s[49]++;
    profileQuery['housingPreferences.roomType'] = roomType;
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[28][1]++;
  }
  // Interests filter
  cov_k8hqpift3().s[50]++;
  if (interests) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[29][0]++;
    const interestList =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[51]++, Array.isArray(interests) ?
    /* istanbul ignore next */
    (cov_k8hqpift3().b[30][0]++, interests) :
    /* istanbul ignore next */
    (cov_k8hqpift3().b[30][1]++, [interests]));
    /* istanbul ignore next */
    cov_k8hqpift3().s[52]++;
    profileQuery.interests = {
      $in: interestList
    };
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[29][1]++;
  }
  // Occupation filter
  cov_k8hqpift3().s[53]++;
  if (occupation) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[31][0]++;
    cov_k8hqpift3().s[54]++;
    profileQuery.occupation = {
      $regex: occupation,
      $options: 'i'
    };
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[31][1]++;
  }
  // Pagination
  const pageNum =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[55]++, parseInt(page));
  const limitNum =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[56]++, parseInt(limit));
  const skip =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[57]++, (pageNum - 1) * limitNum);
  // Sort options
  const sortOptions =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[58]++, {});
  /* istanbul ignore next */
  cov_k8hqpift3().s[59]++;
  sortOptions[sortBy] = sortOrder === 'desc' ?
  /* istanbul ignore next */
  (cov_k8hqpift3().b[32][0]++, -1) :
  /* istanbul ignore next */
  (cov_k8hqpift3().b[32][1]++, 1);
  /* istanbul ignore next */
  cov_k8hqpift3().s[60]++;
  try {
    // First find users matching user criteria
    const users =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[61]++, await User_model_1.default.find(userQuery).select('_id firstName lastName dateOfBirth gender location accountType isEmailVerified lastActiveAt createdAt').sort(sortOptions).lean());
    /* istanbul ignore next */
    cov_k8hqpift3().s[62]++;
    if (users.length === 0) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[33][0]++;
      cov_k8hqpift3().s[63]++;
      return res.json({
        success: true,
        data: {
          users: [],
          pagination: {
            page: pageNum,
            limit: limitNum,
            total: 0,
            pages: 0
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[33][1]++;
    }
    const userIds =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[64]++, users.map(user => {
      /* istanbul ignore next */
      cov_k8hqpift3().f[2]++;
      cov_k8hqpift3().s[65]++;
      return user._id;
    }));
    // Then find profiles matching profile criteria
    let profilesQuery =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[66]++, Profile_model_1.default.find({
      userId: {
        $in: userIds
      },
      ...profileQuery
    }).populate({
      path: 'userId',
      select: 'firstName lastName dateOfBirth gender location accountType isEmailVerified lastActiveAt createdAt'
    }));
    // Apply pagination to profiles
    const totalProfiles =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[67]++, await Profile_model_1.default.countDocuments({
      userId: {
        $in: userIds
      },
      ...profileQuery
    }));
    const profiles =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[68]++, await profilesQuery.skip(skip).limit(limitNum).lean());
    // Format results
    const results =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[69]++, profiles.map(profile => {
      /* istanbul ignore next */
      cov_k8hqpift3().f[3]++;
      const user =
      /* istanbul ignore next */
      (cov_k8hqpift3().s[70]++, profile.userId);
      /* istanbul ignore next */
      cov_k8hqpift3().s[71]++;
      return {
        id: user._id,
        firstName: profile.privacy?.showFullName !== false ?
        /* istanbul ignore next */
        (cov_k8hqpift3().b[34][0]++, user.firstName) :
        /* istanbul ignore next */
        (cov_k8hqpift3().b[34][1]++, user.firstName.charAt(0) + '.'),
        lastName: profile.privacy?.showFullName !== false ?
        /* istanbul ignore next */
        (cov_k8hqpift3().b[35][0]++, user.lastName) :
        /* istanbul ignore next */
        (cov_k8hqpift3().b[35][1]++, user.lastName.charAt(0) + '.'),
        age: profile.privacy?.showAge !== false ?
        /* istanbul ignore next */
        (cov_k8hqpift3().b[36][0]++, new Date().getFullYear() - new Date(user.dateOfBirth).getFullYear()) :
        /* istanbul ignore next */
        (cov_k8hqpift3().b[36][1]++, null),
        gender: user.gender,
        location: profile.privacy?.showLocation !== false ?
        /* istanbul ignore next */
        (cov_k8hqpift3().b[37][0]++, user.location) :
        /* istanbul ignore next */
        (cov_k8hqpift3().b[37][1]++, null),
        accountType: user.accountType,
        isEmailVerified: user.isEmailVerified,
        // Profile data
        bio: profile.bio,
        occupation: profile.privacy?.showOccupation !== false ?
        /* istanbul ignore next */
        (cov_k8hqpift3().b[38][0]++, profile.occupation) :
        /* istanbul ignore next */
        (cov_k8hqpift3().b[38][1]++, null),
        education: profile.education,
        interests:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[39][0]++, profile.interests?.slice(0, 5)) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[39][1]++, []),
        // Show first 5 interests
        hobbies:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[40][0]++, profile.hobbies?.slice(0, 5)) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[40][1]++, []),
        // Show first 5 hobbies
        primaryPhoto:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[41][0]++, profile.photos?.find(p => {
          /* istanbul ignore next */
          cov_k8hqpift3().f[4]++;
          cov_k8hqpift3().s[72]++;
          return p.isPrimary;
        })) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[41][1]++, profile.photos?.[0]) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[41][2]++, null),
        photoCount:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[42][0]++, profile.photos?.length) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[42][1]++, 0),
        // Lifestyle
        lifestyle: profile.lifestyle,
        // Verification status
        verifications: profile.verifications,
        // Activity
        lastActiveAt: user.lastActiveAt,
        memberSince: user.createdAt,
        profileCompleteness: profile.isProfileComplete
      };
    }));
    // Log search activity
    /* istanbul ignore next */
    cov_k8hqpift3().s[73]++;
    if (req.user) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[43][0]++;
      cov_k8hqpift3().s[74]++;
      logger_1.logHelpers.userAction(req.user.userId, 'user_search', {
        filters: {
          accountType,
          gender,
          location,
          ageMin,
          ageMax
        },
        resultsCount: results.length
      });
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[43][1]++;
    }
    cov_k8hqpift3().s[75]++;
    return res.json({
      success: true,
      data: {
        users: results,
        pagination: {
          page: pageNum,
          limit: limitNum,
          total: totalProfiles,
          pages: Math.ceil(totalProfiles / limitNum)
        },
        filters: {
          applied: Object.keys(req.query).length - 3,
          // Exclude page, limit, sortBy
          available: {
            accountTypes: ['seeker', 'owner', 'both'],
            genders: ['male', 'female', 'non-binary', 'any'],
            lifestyleOptions: {
              smoking: ['no-smoking', 'smoking-allowed', 'outdoor-only'],
              drinking: ['no-drinking', 'social-drinking', 'regular-drinking'],
              pets: ['no-pets', 'cats-only', 'dogs-only', 'all-pets'],
              cleanliness: ['very-clean', 'moderately-clean', 'relaxed']
            }
          }
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k8hqpift3().s[76]++;
    logger_1.logger.error('User search error:', error);
    /* istanbul ignore next */
    cov_k8hqpift3().s[77]++;
    throw new errorHandler_1.AppError('Search failed', 500, true, 'SEARCH_FAILED');
  }
});
/**
 * Get search suggestions
 */
/* istanbul ignore next */
cov_k8hqpift3().s[78]++;
exports.getSearchSuggestions = (0, errorHandler_1.catchAsync)(async (req, res, _next) => {
  /* istanbul ignore next */
  cov_k8hqpift3().f[5]++;
  const {
    query,
    type =
    /* istanbul ignore next */
    (cov_k8hqpift3().b[44][0]++, 'all')
  } =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[79]++, req.query);
  /* istanbul ignore next */
  cov_k8hqpift3().s[80]++;
  if (
  /* istanbul ignore next */
  (cov_k8hqpift3().b[46][0]++, !query) ||
  /* istanbul ignore next */
  (cov_k8hqpift3().b[46][1]++, query.length < 2)) {
    /* istanbul ignore next */
    cov_k8hqpift3().b[45][0]++;
    cov_k8hqpift3().s[81]++;
    return res.json({
      success: true,
      data: {
        suggestions: []
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_k8hqpift3().b[45][1]++;
  }
  const searchStr =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[82]++, query);
  const suggestions =
  /* istanbul ignore next */
  (cov_k8hqpift3().s[83]++, {});
  /* istanbul ignore next */
  cov_k8hqpift3().s[84]++;
  try {
    /* istanbul ignore next */
    cov_k8hqpift3().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_k8hqpift3().b[48][0]++, type === 'all') ||
    /* istanbul ignore next */
    (cov_k8hqpift3().b[48][1]++, type === 'locations')) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[47][0]++;
      // Location suggestions
      const locations =
      /* istanbul ignore next */
      (cov_k8hqpift3().s[86]++, await User_model_1.default.aggregate([{
        $match: {
          isActive: true,
          $or: [{
            'location.city': {
              $regex: searchStr,
              $options: 'i'
            }
          }, {
            'location.state': {
              $regex: searchStr,
              $options: 'i'
            }
          }]
        }
      }, {
        $group: {
          _id: null,
          cities: {
            $addToSet: '$location.city'
          },
          states: {
            $addToSet: '$location.state'
          }
        }
      }]));
      /* istanbul ignore next */
      cov_k8hqpift3().s[87]++;
      suggestions.locations = {
        cities:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[49][0]++, locations[0]?.cities?.filter(city => {
          /* istanbul ignore next */
          cov_k8hqpift3().f[6]++;
          cov_k8hqpift3().s[88]++;
          return /* istanbul ignore next */(cov_k8hqpift3().b[50][0]++, city) &&
          /* istanbul ignore next */
          (cov_k8hqpift3().b[50][1]++, city.toLowerCase().includes(searchStr.toLowerCase()));
        }).slice(0, 5)) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[49][1]++, []),
        states:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[51][0]++, locations[0]?.states?.filter(state => {
          /* istanbul ignore next */
          cov_k8hqpift3().f[7]++;
          cov_k8hqpift3().s[89]++;
          return /* istanbul ignore next */(cov_k8hqpift3().b[52][0]++, state) &&
          /* istanbul ignore next */
          (cov_k8hqpift3().b[52][1]++, state.toLowerCase().includes(searchStr.toLowerCase()));
        }).slice(0, 5)) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[51][1]++, [])
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[47][1]++;
    }
    cov_k8hqpift3().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_k8hqpift3().b[54][0]++, type === 'all') ||
    /* istanbul ignore next */
    (cov_k8hqpift3().b[54][1]++, type === 'interests')) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[53][0]++;
      // Interest suggestions
      const interests =
      /* istanbul ignore next */
      (cov_k8hqpift3().s[91]++, await Profile_model_1.default.aggregate([{
        $unwind: '$interests'
      }, {
        $match: {
          interests: {
            $regex: searchStr,
            $options: 'i'
          }
        }
      }, {
        $group: {
          _id: '$interests',
          count: {
            $sum: 1
          }
        }
      }, {
        $sort: {
          count: -1
        }
      }, {
        $limit: 10
      }]));
      /* istanbul ignore next */
      cov_k8hqpift3().s[92]++;
      suggestions.interests = interests.map(item => {
        /* istanbul ignore next */
        cov_k8hqpift3().f[8]++;
        cov_k8hqpift3().s[93]++;
        return item._id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[53][1]++;
    }
    cov_k8hqpift3().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_k8hqpift3().b[56][0]++, type === 'all') ||
    /* istanbul ignore next */
    (cov_k8hqpift3().b[56][1]++, type === 'occupations')) {
      /* istanbul ignore next */
      cov_k8hqpift3().b[55][0]++;
      // Occupation suggestions
      const occupations =
      /* istanbul ignore next */
      (cov_k8hqpift3().s[95]++, await Profile_model_1.default.aggregate([{
        $match: {
          occupation: {
            $regex: searchStr,
            $options: 'i'
          }
        }
      }, {
        $group: {
          _id: '$occupation',
          count: {
            $sum: 1
          }
        }
      }, {
        $sort: {
          count: -1
        }
      }, {
        $limit: 10
      }]));
      /* istanbul ignore next */
      cov_k8hqpift3().s[96]++;
      suggestions.occupations = occupations.map(item => {
        /* istanbul ignore next */
        cov_k8hqpift3().f[9]++;
        cov_k8hqpift3().s[97]++;
        return item._id;
      });
    } else
    /* istanbul ignore next */
    {
      cov_k8hqpift3().b[55][1]++;
    }
    cov_k8hqpift3().s[98]++;
    return res.json({
      success: true,
      data: {
        suggestions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k8hqpift3().s[99]++;
    logger_1.logger.error('Search suggestions error:', error);
    /* istanbul ignore next */
    cov_k8hqpift3().s[100]++;
    throw new errorHandler_1.AppError('Failed to get suggestions', 500, true, 'SUGGESTIONS_FAILED');
  }
});
/**
 * Get popular search filters
 */
/* istanbul ignore next */
cov_k8hqpift3().s[101]++;
exports.getPopularFilters = (0, errorHandler_1.catchAsync)(async (_req, res, _next) => {
  /* istanbul ignore next */
  cov_k8hqpift3().f[10]++;
  cov_k8hqpift3().s[102]++;
  try {
    // Get most common locations
    const popularLocations =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[103]++, await User_model_1.default.aggregate([{
      $match: {
        isActive: true
      }
    }, {
      $group: {
        _id: {
          city: '$location.city',
          state: '$location.state'
        },
        count: {
          $sum: 1
        }
      }
    }, {
      $sort: {
        count: -1
      }
    }, {
      $limit: 10
    }]));
    // Get most common interests
    const popularInterests =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[104]++, await Profile_model_1.default.aggregate([{
      $unwind: '$interests'
    }, {
      $group: {
        _id: '$interests',
        count: {
          $sum: 1
        }
      }
    }, {
      $sort: {
        count: -1
      }
    }, {
      $limit: 15
    }]));
    // Get budget ranges
    const budgetRanges =
    /* istanbul ignore next */
    (cov_k8hqpift3().s[105]++, await Profile_model_1.default.aggregate([{
      $match: {
        'housingPreferences.budgetRange.min': {
          $exists: true
        },
        'housingPreferences.budgetRange.max': {
          $exists: true
        }
      }
    }, {
      $group: {
        _id: null,
        avgMin: {
          $avg: '$housingPreferences.budgetRange.min'
        },
        avgMax: {
          $avg: '$housingPreferences.budgetRange.max'
        },
        minBudget: {
          $min: '$housingPreferences.budgetRange.min'
        },
        maxBudget: {
          $max: '$housingPreferences.budgetRange.max'
        }
      }
    }]));
    /* istanbul ignore next */
    cov_k8hqpift3().s[106]++;
    res.json({
      success: true,
      data: {
        popularLocations: popularLocations.map(item => {
          /* istanbul ignore next */
          cov_k8hqpift3().f[11]++;
          cov_k8hqpift3().s[107]++;
          return {
            city: item._id.city,
            state: item._id.state,
            count: item.count
          };
        }),
        popularInterests: popularInterests.map(item => {
          /* istanbul ignore next */
          cov_k8hqpift3().f[12]++;
          cov_k8hqpift3().s[108]++;
          return {
            interest: item._id,
            count: item.count
          };
        }),
        budgetInsights:
        /* istanbul ignore next */
        (cov_k8hqpift3().b[57][0]++, budgetRanges[0]) ||
        /* istanbul ignore next */
        (cov_k8hqpift3().b[57][1]++, {
          avgMin: 50000,
          avgMax: 150000,
          minBudget: 20000,
          maxBudget: 500000
        })
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k8hqpift3().s[109]++;
    logger_1.logger.error('Popular filters error:', error);
    /* istanbul ignore next */
    cov_k8hqpift3().s[110]++;
    throw new errorHandler_1.AppError('Failed to get popular filters', 500, true, 'POPULAR_FILTERS_FAILED');
  }
});
/* istanbul ignore next */
cov_k8hqpift3().s[111]++;
exports.default = {
  searchUsers: exports.searchUsers,
  getSearchSuggestions: exports.getSearchSuggestions,
  getPopularFilters: exports.getPopularFilters
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,