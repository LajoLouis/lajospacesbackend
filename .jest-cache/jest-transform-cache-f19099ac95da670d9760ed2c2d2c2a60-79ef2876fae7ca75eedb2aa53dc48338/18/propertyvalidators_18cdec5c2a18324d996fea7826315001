e510596de83457e716b0f0a2a0fbf0a8
"use strict";

/* istanbul ignore next */
function cov_f7mb1mrh6() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\property.validators.ts";
  var hash = "9c90f6c7a1a9293a811d79c9eb4a255407aa7aef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\property.validators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 357
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "6": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 97
        }
      },
      "7": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "8": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 54
        }
      },
      "9": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 78
        }
      },
      "10": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 80
        }
      },
      "11": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 49,
          column: 2
        }
      },
      "12": {
        start: {
          line: 51,
          column: 22
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "13": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "14": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 118,
          column: 2
        }
      },
      "15": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 133,
          column: 2
        }
      },
      "16": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 200,
          column: 3
        }
      },
      "17": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 232,
          column: 3
        }
      },
      "18": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 256,
          column: 3
        }
      },
      "19": {
        start: {
          line: 260,
          column: 0
        },
        end: {
          line: 290,
          column: 3
        }
      },
      "20": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 286,
          column: 5
        }
      },
      "21": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 57
        }
      },
      "22": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 17
        }
      },
      "23": {
        start: {
          line: 294,
          column: 0
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "24": {
        start: {
          line: 306,
          column: 0
        },
        end: {
          line: 311,
          column: 3
        }
      },
      "25": {
        start: {
          line: 315,
          column: 0
        },
        end: {
          line: 321,
          column: 3
        }
      },
      "26": {
        start: {
          line: 325,
          column: 0
        },
        end: {
          line: 341,
          column: 3
        }
      },
      "27": {
        start: {
          line: 345,
          column: 0
        },
        end: {
          line: 350,
          column: 3
        }
      },
      "28": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 368,
          column: 3
        }
      },
      "29": {
        start: {
          line: 372,
          column: 0
        },
        end: {
          line: 403,
          column: 3
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 282,
            column: 10
          },
          end: {
            line: 282,
            column: 11
          }
        },
        loc: {
          start: {
            line: 282,
            column: 30
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 282
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "4": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 284,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 284,
            column: 22
          }
        }, {
          start: {
            line: 284,
            column: 26
          },
          end: {
            line: 284,
            column: 40
          }
        }, {
          start: {
            line: 284,
            column: 44
          },
          end: {
            line: 284,
            column: 75
          }
        }],
        line: 284
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\property.validators.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\property.validators.ts"],
      sourcesContent: ["import Joi from 'joi';\r\n\r\n// Nigerian states for validation\r\nconst NIGERIAN_STATES = [\r\n  'Abia', 'Adamawa', 'Akwa Ibom', 'Anambra', 'Bauchi', 'Bayelsa', 'Benue', 'Borno',\r\n  'Cross River', 'Delta', 'Ebonyi', 'Edo', 'Ekiti', 'Enugu', 'FCT', 'Gombe',\r\n  'Imo', 'Jigawa', 'Kaduna', 'Kano', 'Katsina', 'Kebbi', 'Kogi', 'Kwara',\r\n  'Lagos', 'Nasarawa', 'Niger', 'Ogun', 'Ondo', 'Osun', 'Oyo', 'Plateau',\r\n  'Rivers', 'Sokoto', 'Taraba', 'Yobe', 'Zamfara'\r\n];\r\n\r\n// Property types\r\nconst PROPERTY_TYPES = ['apartment', 'house', 'condo', 'studio', 'duplex', 'bungalow', 'mansion'];\r\nconst LISTING_TYPES = ['rent', 'roommate', 'sublet'];\r\nconst OWNER_TYPES = ['individual', 'agent', 'company'];\r\nconst PAYMENT_FREQUENCIES = ['monthly', 'quarterly', 'biannually', 'annually'];\r\nconst PROPERTY_STATUSES = ['draft', 'active', 'inactive', 'rented', 'suspended'];\r\n\r\n// Location schema\r\nconst locationSchema = Joi.object({\r\n  address: Joi.string().trim().max(300).required().messages({\r\n    'string.empty': 'Address is required',\r\n    'string.max': 'Address cannot exceed 300 characters'\r\n  }),\r\n  city: Joi.string().trim().max(100).required().messages({\r\n    'string.empty': 'City is required',\r\n    'string.max': 'City cannot exceed 100 characters'\r\n  }),\r\n  state: Joi.string().valid(...NIGERIAN_STATES).required().messages({\r\n    'any.only': 'Please select a valid Nigerian state',\r\n    'any.required': 'State is required'\r\n  }),\r\n  country: Joi.string().valid('Nigeria').default('Nigeria'),\r\n  area: Joi.string().trim().max(100).optional().messages({\r\n    'string.max': 'Area cannot exceed 100 characters'\r\n  }),\r\n  landmark: Joi.string().trim().max(200).optional().messages({\r\n    'string.max': 'Landmark cannot exceed 200 characters'\r\n  }),\r\n  coordinates: Joi.object({\r\n    type: Joi.string().valid('Point').default('Point'),\r\n    coordinates: Joi.array().items(Joi.number()).length(2).required().messages({\r\n      'array.length': 'Coordinates must contain exactly 2 numbers [longitude, latitude]'\r\n    })\r\n  }).optional()\r\n});\r\n\r\n// Pricing schema\r\nconst pricingSchema = Joi.object({\r\n  rentPerMonth: Joi.number().min(1000).max(10000000).required().messages({\r\n    'number.min': 'Rent must be at least \u20A61,000',\r\n    'number.max': 'Rent cannot exceed \u20A610,000,000',\r\n    'any.required': 'Monthly rent is required'\r\n  }),\r\n  securityDeposit: Joi.number().min(0).required().messages({\r\n    'number.min': 'Security deposit cannot be negative',\r\n    'any.required': 'Security deposit is required'\r\n  }),\r\n  agentFee: Joi.number().min(0).default(0),\r\n  legalFee: Joi.number().min(0).default(0),\r\n  cautionFee: Joi.number().min(0).default(0),\r\n  serviceCharge: Joi.number().min(0).default(0),\r\n  electricityIncluded: Joi.boolean().default(false),\r\n  waterIncluded: Joi.boolean().default(false),\r\n  internetIncluded: Joi.boolean().default(false),\r\n  paymentFrequency: Joi.string().valid(...PAYMENT_FREQUENCIES).default('annually'),\r\n  advancePayment: Joi.number().min(1).max(24).default(12).messages({\r\n    'number.min': 'Advance payment must be at least 1 month',\r\n    'number.max': 'Advance payment cannot exceed 24 months'\r\n  })\r\n});\r\n\r\n// Amenities schema\r\nconst amenitiesSchema = Joi.object({\r\n  // Basic amenities\r\n  wifi: Joi.boolean().default(false),\r\n  parking: Joi.boolean().default(false),\r\n  security: Joi.boolean().default(false),\r\n  generator: Joi.boolean().default(false),\r\n  borehole: Joi.boolean().default(false),\r\n  airConditioning: Joi.boolean().default(false),\r\n  \r\n  // Kitchen amenities\r\n  kitchen: Joi.boolean().default(true),\r\n  refrigerator: Joi.boolean().default(false),\r\n  microwave: Joi.boolean().default(false),\r\n  gasStove: Joi.boolean().default(false),\r\n  \r\n  // Living amenities\r\n  furnished: Joi.boolean().default(false),\r\n  tv: Joi.boolean().default(false),\r\n  washingMachine: Joi.boolean().default(false),\r\n  \r\n  // Building amenities\r\n  elevator: Joi.boolean().default(false),\r\n  gym: Joi.boolean().default(false),\r\n  swimmingPool: Joi.boolean().default(false),\r\n  playground: Joi.boolean().default(false),\r\n  \r\n  // Utilities\r\n  prepaidMeter: Joi.boolean().default(false),\r\n  cableTV: Joi.boolean().default(false),\r\n  cleaningService: Joi.boolean().default(false)\r\n});\r\n\r\n// Rules schema\r\nconst rulesSchema = Joi.object({\r\n  smokingAllowed: Joi.boolean().default(false),\r\n  petsAllowed: Joi.boolean().default(false),\r\n  partiesAllowed: Joi.boolean().default(false),\r\n  guestsAllowed: Joi.boolean().default(true),\r\n  curfew: Joi.string().trim().optional(),\r\n  minimumStay: Joi.number().min(1).max(24).optional().messages({\r\n    'number.min': 'Minimum stay must be at least 1 month',\r\n    'number.max': 'Minimum stay cannot exceed 24 months'\r\n  }),\r\n  maximumOccupants: Joi.number().min(1).max(20).required().messages({\r\n    'number.min': 'Maximum occupants must be at least 1',\r\n    'number.max': 'Maximum occupants cannot exceed 20',\r\n    'any.required': 'Maximum occupants is required'\r\n  })\r\n});\r\n\r\n// Roommate preferences schema\r\nconst roommatePreferencesSchema = Joi.object({\r\n  gender: Joi.string().valid('male', 'female', 'any').default('any'),\r\n  ageRange: Joi.object({\r\n    min: Joi.number().min(18).max(100).default(18),\r\n    max: Joi.number().min(18).max(100).default(65)\r\n  }).default({ min: 18, max: 65 }),\r\n  occupation: Joi.array().items(Joi.string().trim()).default([]),\r\n  lifestyle: Joi.object({\r\n    smoking: Joi.boolean().default(false),\r\n    drinking: Joi.boolean().default(false),\r\n    pets: Joi.boolean().default(false),\r\n    parties: Joi.boolean().default(false)\r\n  }).default({})\r\n});\r\n\r\n/**\r\n * Create property validation schema\r\n */\r\nexport const createPropertySchema = Joi.object({\r\n  title: Joi.string().trim().min(10).max(200).required().messages({\r\n    'string.empty': 'Property title is required',\r\n    'string.min': 'Title must be at least 10 characters',\r\n    'string.max': 'Title cannot exceed 200 characters'\r\n  }),\r\n  description: Joi.string().trim().min(50).max(2000).required().messages({\r\n    'string.empty': 'Property description is required',\r\n    'string.min': 'Description must be at least 50 characters',\r\n    'string.max': 'Description cannot exceed 2000 characters'\r\n  }),\r\n  propertyType: Joi.string().valid(...PROPERTY_TYPES).required().messages({\r\n    'any.only': 'Please select a valid property type',\r\n    'any.required': 'Property type is required'\r\n  }),\r\n  listingType: Joi.string().valid(...LISTING_TYPES).required().messages({\r\n    'any.only': 'Please select a valid listing type',\r\n    'any.required': 'Listing type is required'\r\n  }),\r\n  ownerType: Joi.string().valid(...OWNER_TYPES).default('individual'),\r\n  \r\n  // Property details\r\n  bedrooms: Joi.number().min(0).max(20).required().messages({\r\n    'number.min': 'Bedrooms cannot be negative',\r\n    'number.max': 'Bedrooms cannot exceed 20',\r\n    'any.required': 'Number of bedrooms is required'\r\n  }),\r\n  bathrooms: Joi.number().min(1).max(20).required().messages({\r\n    'number.min': 'Must have at least 1 bathroom',\r\n    'number.max': 'Bathrooms cannot exceed 20',\r\n    'any.required': 'Number of bathrooms is required'\r\n  }),\r\n  totalRooms: Joi.number().min(1).max(50).required().messages({\r\n    'number.min': 'Must have at least 1 room',\r\n    'number.max': 'Total rooms cannot exceed 50',\r\n    'any.required': 'Total number of rooms is required'\r\n  }),\r\n  floorArea: Joi.number().min(10).max(10000).optional().messages({\r\n    'number.min': 'Floor area must be at least 10 square meters',\r\n    'number.max': 'Floor area cannot exceed 10,000 square meters'\r\n  }),\r\n  floor: Joi.number().min(0).max(100).optional(),\r\n  totalFloors: Joi.number().min(1).max(100).optional(),\r\n  yearBuilt: Joi.number().min(1900).max(new Date().getFullYear() + 5).optional(),\r\n  \r\n  // Required schemas\r\n  location: locationSchema.required(),\r\n  pricing: pricingSchema.required(),\r\n  amenities: amenitiesSchema.default({}),\r\n  rules: rulesSchema.required(),\r\n  \r\n  // Optional schemas\r\n  roommatePreferences: roommatePreferencesSchema.optional(),\r\n  \r\n  // Availability\r\n  isAvailable: Joi.boolean().default(true),\r\n  availableFrom: Joi.date().min('now').required().messages({\r\n    'date.min': 'Available from date cannot be in the past',\r\n    'any.required': 'Available from date is required'\r\n  }),\r\n  availableTo: Joi.date().min(Joi.ref('availableFrom')).optional().messages({\r\n    'date.min': 'Available to date must be after available from date'\r\n  }),\r\n  \r\n  // Tags and keywords\r\n  tags: Joi.array().items(Joi.string().trim().max(50)).max(10).default([]).messages({\r\n    'array.max': 'Cannot have more than 10 tags'\r\n  })\r\n});\r\n\r\n/**\r\n * Update property validation schema\r\n */\r\nexport const updatePropertySchema = Joi.object({\r\n  title: Joi.string().trim().min(10).max(200).optional(),\r\n  description: Joi.string().trim().min(50).max(2000).optional(),\r\n  propertyType: Joi.string().valid(...PROPERTY_TYPES).optional(),\r\n  listingType: Joi.string().valid(...LISTING_TYPES).optional(),\r\n  ownerType: Joi.string().valid(...OWNER_TYPES).optional(),\r\n  \r\n  // Property details\r\n  bedrooms: Joi.number().min(0).max(20).optional(),\r\n  bathrooms: Joi.number().min(1).max(20).optional(),\r\n  totalRooms: Joi.number().min(1).max(50).optional(),\r\n  floorArea: Joi.number().min(10).max(10000).optional(),\r\n  floor: Joi.number().min(0).max(100).optional(),\r\n  totalFloors: Joi.number().min(1).max(100).optional(),\r\n  yearBuilt: Joi.number().min(1900).max(new Date().getFullYear() + 5).optional(),\r\n  \r\n  // Optional schemas\r\n  location: locationSchema.optional(),\r\n  pricing: pricingSchema.optional(),\r\n  amenities: amenitiesSchema.optional(),\r\n  rules: rulesSchema.optional(),\r\n  roommatePreferences: roommatePreferencesSchema.optional(),\r\n  \r\n  // Availability\r\n  isAvailable: Joi.boolean().optional(),\r\n  availableFrom: Joi.date().min('now').optional(),\r\n  availableTo: Joi.date().optional(),\r\n  \r\n  // Status\r\n  status: Joi.string().valid(...PROPERTY_STATUSES).optional(),\r\n  \r\n  // Tags\r\n  tags: Joi.array().items(Joi.string().trim().max(50)).max(10).optional()\r\n});\r\n\r\n/**\r\n * Property query validation schema (for GET /properties)\r\n */\r\nexport const propertyQuerySchema = Joi.object({\r\n  page: Joi.number().min(1).default(1),\r\n  limit: Joi.number().min(1).max(100).default(20),\r\n  propertyType: Joi.string().valid(...PROPERTY_TYPES).optional(),\r\n  listingType: Joi.string().valid(...LISTING_TYPES).optional(),\r\n  minPrice: Joi.number().min(0).optional(),\r\n  maxPrice: Joi.number().min(0).optional(),\r\n  bedrooms: Joi.number().min(0).max(20).optional(),\r\n  bathrooms: Joi.number().min(1).max(20).optional(),\r\n  city: Joi.string().trim().max(100).optional(),\r\n  state: Joi.string().valid(...NIGERIAN_STATES).optional(),\r\n  area: Joi.string().trim().max(100).optional(),\r\n  amenities: Joi.string().optional(), // Comma-separated list\r\n  status: Joi.string().valid(...PROPERTY_STATUSES).default('active'),\r\n  sortBy: Joi.string().valid(\r\n    'createdAt', 'updatedAt', 'pricing.rentPerMonth', 'analytics.views',\r\n    'bedrooms', 'bathrooms', 'title'\r\n  ).default('createdAt'),\r\n  sortOrder: Joi.string().valid('asc', 'desc').default('desc'),\r\n  search: Joi.string().trim().max(200).optional(),\r\n  latitude: Joi.number().min(-90).max(90).optional(),\r\n  longitude: Joi.number().min(-180).max(180).optional(),\r\n  radius: Joi.number().min(100).max(50000).default(5000) // in meters\r\n});\r\n\r\n/**\r\n * Search properties validation schema (for POST /properties/search)\r\n */\r\nexport const searchPropertiesSchema = Joi.object({\r\n  query: Joi.string().trim().max(200).optional().messages({\r\n    'string.max': 'Search query cannot exceed 200 characters'\r\n  }),\r\n  propertyType: Joi.string().valid(...PROPERTY_TYPES).optional(),\r\n  listingType: Joi.string().valid(...LISTING_TYPES).optional(),\r\n  minPrice: Joi.number().min(0).optional().messages({\r\n    'number.min': 'Minimum price cannot be negative'\r\n  }),\r\n  maxPrice: Joi.number().min(0).optional().messages({\r\n    'number.min': 'Maximum price cannot be negative'\r\n  }),\r\n  bedrooms: Joi.number().min(0).max(20).optional(),\r\n  bathrooms: Joi.number().min(1).max(20).optional(),\r\n  location: Joi.object({\r\n    city: Joi.string().trim().max(100).optional(),\r\n    state: Joi.string().valid(...NIGERIAN_STATES).optional(),\r\n    area: Joi.string().trim().max(100).optional()\r\n  }).optional(),\r\n  amenities: Joi.array().items(Joi.string().trim()).optional(),\r\n  page: Joi.number().min(1).default(1),\r\n  limit: Joi.number().min(1).max(100).default(20)\r\n}).custom((value, helpers) => {\r\n  // Validate price range\r\n  if (value.minPrice && value.maxPrice && value.minPrice > value.maxPrice) {\r\n    return helpers.error('custom.invalidPriceRange');\r\n  }\r\n  return value;\r\n}).messages({\r\n  'custom.invalidPriceRange': 'Minimum price cannot be greater than maximum price'\r\n});\r\n\r\n/**\r\n * Property photo validation schema\r\n */\r\nexport const propertyPhotoSchema = Joi.object({\r\n  caption: Joi.string().trim().max(200).optional().messages({\r\n    'string.max': 'Photo caption cannot exceed 200 characters'\r\n  }),\r\n  room: Joi.string().trim().max(50).optional().messages({\r\n    'string.max': 'Room name cannot exceed 50 characters'\r\n  }),\r\n  isPrimary: Joi.boolean().default(false)\r\n});\r\n\r\n/**\r\n * Property photo reorder validation schema\r\n */\r\nexport const reorderPhotosSchema = Joi.object({\r\n  photoOrder: Joi.array().items(Joi.string().trim()).min(1).required().messages({\r\n    'array.min': 'Photo order must contain at least one photo ID',\r\n    'any.required': 'Photo order is required'\r\n  })\r\n});\r\n\r\n/**\r\n * Property analytics query validation schema\r\n */\r\nexport const analyticsQuerySchema = Joi.object({\r\n  startDate: Joi.date().optional(),\r\n  endDate: Joi.date().min(Joi.ref('startDate')).optional().messages({\r\n    'date.min': 'End date must be after start date'\r\n  }),\r\n  groupBy: Joi.string().valid('day', 'week', 'month').default('day')\r\n});\r\n\r\n/**\r\n * Nearby properties validation schema\r\n */\r\nexport const nearbyPropertiesSchema = Joi.object({\r\n  latitude: Joi.number().min(-90).max(90).required().messages({\r\n    'number.min': 'Latitude must be between -90 and 90',\r\n    'number.max': 'Latitude must be between -90 and 90',\r\n    'any.required': 'Latitude is required'\r\n  }),\r\n  longitude: Joi.number().min(-180).max(180).required().messages({\r\n    'number.min': 'Longitude must be between -180 and 180',\r\n    'number.max': 'Longitude must be between -180 and 180',\r\n    'any.required': 'Longitude is required'\r\n  }),\r\n  radius: Joi.number().min(100).max(50000).default(5000).messages({\r\n    'number.min': 'Radius must be at least 100 meters',\r\n    'number.max': 'Radius cannot exceed 50 kilometers'\r\n  }),\r\n  limit: Joi.number().min(1).max(100).default(20)\r\n});\r\n\r\n/**\r\n * Property favorites validation schema\r\n */\r\nexport const favoritePropertySchema = Joi.object({\r\n  propertyId: Joi.string().trim().required().messages({\r\n    'string.empty': 'Property ID is required',\r\n    'any.required': 'Property ID is required'\r\n  })\r\n});\r\n\r\n/**\r\n * Property inquiry validation schema\r\n */\r\nexport const propertyInquirySchema = Joi.object({\r\n  message: Joi.string().trim().min(10).max(1000).required().messages({\r\n    'string.empty': 'Inquiry message is required',\r\n    'string.min': 'Message must be at least 10 characters',\r\n    'string.max': 'Message cannot exceed 1000 characters',\r\n    'any.required': 'Inquiry message is required'\r\n  }),\r\n  contactPreference: Joi.string().valid('email', 'phone', 'both').default('email'),\r\n  moveInDate: Joi.date().min('now').optional().messages({\r\n    'date.min': 'Move-in date cannot be in the past'\r\n  }),\r\n  additionalInfo: Joi.string().trim().max(500).optional().messages({\r\n    'string.max': 'Additional information cannot exceed 500 characters'\r\n  })\r\n});\r\n\r\n/**\r\n * Property application validation schema\r\n */\r\nexport const propertyApplicationSchema = Joi.object({\r\n  coverLetter: Joi.string().trim().min(50).max(2000).required().messages({\r\n    'string.empty': 'Cover letter is required',\r\n    'string.min': 'Cover letter must be at least 50 characters',\r\n    'string.max': 'Cover letter cannot exceed 2000 characters',\r\n    'any.required': 'Cover letter is required'\r\n  }),\r\n  moveInDate: Joi.date().min('now').required().messages({\r\n    'date.min': 'Move-in date cannot be in the past',\r\n    'any.required': 'Preferred move-in date is required'\r\n  }),\r\n  leaseDuration: Joi.number().min(1).max(24).required().messages({\r\n    'number.min': 'Lease duration must be at least 1 month',\r\n    'number.max': 'Lease duration cannot exceed 24 months',\r\n    'any.required': 'Preferred lease duration is required'\r\n  }),\r\n  monthlyIncome: Joi.number().min(0).optional().messages({\r\n    'number.min': 'Monthly income cannot be negative'\r\n  }),\r\n  employmentStatus: Joi.string().valid(\r\n    'employed', 'self-employed', 'student', 'unemployed', 'retired'\r\n  ).optional(),\r\n  references: Joi.array().items(\r\n    Joi.object({\r\n      name: Joi.string().trim().max(100).required(),\r\n      relationship: Joi.string().trim().max(100).required(),\r\n      phoneNumber: Joi.string().trim().required(),\r\n      email: Joi.string().email().optional()\r\n    })\r\n  ).max(3).optional().messages({\r\n    'array.max': 'Cannot provide more than 3 references'\r\n  }),\r\n  additionalInfo: Joi.string().trim().max(1000).optional().messages({\r\n    'string.max': 'Additional information cannot exceed 1000 characters'\r\n  })\r\n});\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c90f6c7a1a9293a811d79c9eb4a255407aa7aef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_f7mb1mrh6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f7mb1mrh6();
var __importDefault =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[0]++,
/* istanbul ignore next */
(cov_f7mb1mrh6().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_f7mb1mrh6().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_f7mb1mrh6().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_f7mb1mrh6().f[0]++;
  cov_f7mb1mrh6().s[1]++;
  return /* istanbul ignore next */(cov_f7mb1mrh6().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_f7mb1mrh6().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_f7mb1mrh6().s[3]++;
exports.propertyApplicationSchema = exports.propertyInquirySchema = exports.favoritePropertySchema = exports.nearbyPropertiesSchema = exports.analyticsQuerySchema = exports.reorderPhotosSchema = exports.propertyPhotoSchema = exports.searchPropertiesSchema = exports.propertyQuerySchema = exports.updatePropertySchema = exports.createPropertySchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[4]++, __importDefault(require("joi")));
// Nigerian states for validation
const NIGERIAN_STATES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[5]++, ['Abia', 'Adamawa', 'Akwa Ibom', 'Anambra', 'Bauchi', 'Bayelsa', 'Benue', 'Borno', 'Cross River', 'Delta', 'Ebonyi', 'Edo', 'Ekiti', 'Enugu', 'FCT', 'Gombe', 'Imo', 'Jigawa', 'Kaduna', 'Kano', 'Katsina', 'Kebbi', 'Kogi', 'Kwara', 'Lagos', 'Nasarawa', 'Niger', 'Ogun', 'Ondo', 'Osun', 'Oyo', 'Plateau', 'Rivers', 'Sokoto', 'Taraba', 'Yobe', 'Zamfara']);
// Property types
const PROPERTY_TYPES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[6]++, ['apartment', 'house', 'condo', 'studio', 'duplex', 'bungalow', 'mansion']);
const LISTING_TYPES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[7]++, ['rent', 'roommate', 'sublet']);
const OWNER_TYPES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[8]++, ['individual', 'agent', 'company']);
const PAYMENT_FREQUENCIES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[9]++, ['monthly', 'quarterly', 'biannually', 'annually']);
const PROPERTY_STATUSES =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[10]++, ['draft', 'active', 'inactive', 'rented', 'suspended']);
// Location schema
const locationSchema =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[11]++, joi_1.default.object({
  address: joi_1.default.string().trim().max(300).required().messages({
    'string.empty': 'Address is required',
    'string.max': 'Address cannot exceed 300 characters'
  }),
  city: joi_1.default.string().trim().max(100).required().messages({
    'string.empty': 'City is required',
    'string.max': 'City cannot exceed 100 characters'
  }),
  state: joi_1.default.string().valid(...NIGERIAN_STATES).required().messages({
    'any.only': 'Please select a valid Nigerian state',
    'any.required': 'State is required'
  }),
  country: joi_1.default.string().valid('Nigeria').default('Nigeria'),
  area: joi_1.default.string().trim().max(100).optional().messages({
    'string.max': 'Area cannot exceed 100 characters'
  }),
  landmark: joi_1.default.string().trim().max(200).optional().messages({
    'string.max': 'Landmark cannot exceed 200 characters'
  }),
  coordinates: joi_1.default.object({
    type: joi_1.default.string().valid('Point').default('Point'),
    coordinates: joi_1.default.array().items(joi_1.default.number()).length(2).required().messages({
      'array.length': 'Coordinates must contain exactly 2 numbers [longitude, latitude]'
    })
  }).optional()
}));
// Pricing schema
const pricingSchema =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[12]++, joi_1.default.object({
  rentPerMonth: joi_1.default.number().min(1000).max(10000000).required().messages({
    'number.min': 'Rent must be at least ₦1,000',
    'number.max': 'Rent cannot exceed ₦10,000,000',
    'any.required': 'Monthly rent is required'
  }),
  securityDeposit: joi_1.default.number().min(0).required().messages({
    'number.min': 'Security deposit cannot be negative',
    'any.required': 'Security deposit is required'
  }),
  agentFee: joi_1.default.number().min(0).default(0),
  legalFee: joi_1.default.number().min(0).default(0),
  cautionFee: joi_1.default.number().min(0).default(0),
  serviceCharge: joi_1.default.number().min(0).default(0),
  electricityIncluded: joi_1.default.boolean().default(false),
  waterIncluded: joi_1.default.boolean().default(false),
  internetIncluded: joi_1.default.boolean().default(false),
  paymentFrequency: joi_1.default.string().valid(...PAYMENT_FREQUENCIES).default('annually'),
  advancePayment: joi_1.default.number().min(1).max(24).default(12).messages({
    'number.min': 'Advance payment must be at least 1 month',
    'number.max': 'Advance payment cannot exceed 24 months'
  })
}));
// Amenities schema
const amenitiesSchema =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[13]++, joi_1.default.object({
  // Basic amenities
  wifi: joi_1.default.boolean().default(false),
  parking: joi_1.default.boolean().default(false),
  security: joi_1.default.boolean().default(false),
  generator: joi_1.default.boolean().default(false),
  borehole: joi_1.default.boolean().default(false),
  airConditioning: joi_1.default.boolean().default(false),
  // Kitchen amenities
  kitchen: joi_1.default.boolean().default(true),
  refrigerator: joi_1.default.boolean().default(false),
  microwave: joi_1.default.boolean().default(false),
  gasStove: joi_1.default.boolean().default(false),
  // Living amenities
  furnished: joi_1.default.boolean().default(false),
  tv: joi_1.default.boolean().default(false),
  washingMachine: joi_1.default.boolean().default(false),
  // Building amenities
  elevator: joi_1.default.boolean().default(false),
  gym: joi_1.default.boolean().default(false),
  swimmingPool: joi_1.default.boolean().default(false),
  playground: joi_1.default.boolean().default(false),
  // Utilities
  prepaidMeter: joi_1.default.boolean().default(false),
  cableTV: joi_1.default.boolean().default(false),
  cleaningService: joi_1.default.boolean().default(false)
}));
// Rules schema
const rulesSchema =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[14]++, joi_1.default.object({
  smokingAllowed: joi_1.default.boolean().default(false),
  petsAllowed: joi_1.default.boolean().default(false),
  partiesAllowed: joi_1.default.boolean().default(false),
  guestsAllowed: joi_1.default.boolean().default(true),
  curfew: joi_1.default.string().trim().optional(),
  minimumStay: joi_1.default.number().min(1).max(24).optional().messages({
    'number.min': 'Minimum stay must be at least 1 month',
    'number.max': 'Minimum stay cannot exceed 24 months'
  }),
  maximumOccupants: joi_1.default.number().min(1).max(20).required().messages({
    'number.min': 'Maximum occupants must be at least 1',
    'number.max': 'Maximum occupants cannot exceed 20',
    'any.required': 'Maximum occupants is required'
  })
}));
// Roommate preferences schema
const roommatePreferencesSchema =
/* istanbul ignore next */
(cov_f7mb1mrh6().s[15]++, joi_1.default.object({
  gender: joi_1.default.string().valid('male', 'female', 'any').default('any'),
  ageRange: joi_1.default.object({
    min: joi_1.default.number().min(18).max(100).default(18),
    max: joi_1.default.number().min(18).max(100).default(65)
  }).default({
    min: 18,
    max: 65
  }),
  occupation: joi_1.default.array().items(joi_1.default.string().trim()).default([]),
  lifestyle: joi_1.default.object({
    smoking: joi_1.default.boolean().default(false),
    drinking: joi_1.default.boolean().default(false),
    pets: joi_1.default.boolean().default(false),
    parties: joi_1.default.boolean().default(false)
  }).default({})
}));
/**
 * Create property validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[16]++;
exports.createPropertySchema = joi_1.default.object({
  title: joi_1.default.string().trim().min(10).max(200).required().messages({
    'string.empty': 'Property title is required',
    'string.min': 'Title must be at least 10 characters',
    'string.max': 'Title cannot exceed 200 characters'
  }),
  description: joi_1.default.string().trim().min(50).max(2000).required().messages({
    'string.empty': 'Property description is required',
    'string.min': 'Description must be at least 50 characters',
    'string.max': 'Description cannot exceed 2000 characters'
  }),
  propertyType: joi_1.default.string().valid(...PROPERTY_TYPES).required().messages({
    'any.only': 'Please select a valid property type',
    'any.required': 'Property type is required'
  }),
  listingType: joi_1.default.string().valid(...LISTING_TYPES).required().messages({
    'any.only': 'Please select a valid listing type',
    'any.required': 'Listing type is required'
  }),
  ownerType: joi_1.default.string().valid(...OWNER_TYPES).default('individual'),
  // Property details
  bedrooms: joi_1.default.number().min(0).max(20).required().messages({
    'number.min': 'Bedrooms cannot be negative',
    'number.max': 'Bedrooms cannot exceed 20',
    'any.required': 'Number of bedrooms is required'
  }),
  bathrooms: joi_1.default.number().min(1).max(20).required().messages({
    'number.min': 'Must have at least 1 bathroom',
    'number.max': 'Bathrooms cannot exceed 20',
    'any.required': 'Number of bathrooms is required'
  }),
  totalRooms: joi_1.default.number().min(1).max(50).required().messages({
    'number.min': 'Must have at least 1 room',
    'number.max': 'Total rooms cannot exceed 50',
    'any.required': 'Total number of rooms is required'
  }),
  floorArea: joi_1.default.number().min(10).max(10000).optional().messages({
    'number.min': 'Floor area must be at least 10 square meters',
    'number.max': 'Floor area cannot exceed 10,000 square meters'
  }),
  floor: joi_1.default.number().min(0).max(100).optional(),
  totalFloors: joi_1.default.number().min(1).max(100).optional(),
  yearBuilt: joi_1.default.number().min(1900).max(new Date().getFullYear() + 5).optional(),
  // Required schemas
  location: locationSchema.required(),
  pricing: pricingSchema.required(),
  amenities: amenitiesSchema.default({}),
  rules: rulesSchema.required(),
  // Optional schemas
  roommatePreferences: roommatePreferencesSchema.optional(),
  // Availability
  isAvailable: joi_1.default.boolean().default(true),
  availableFrom: joi_1.default.date().min('now').required().messages({
    'date.min': 'Available from date cannot be in the past',
    'any.required': 'Available from date is required'
  }),
  availableTo: joi_1.default.date().min(joi_1.default.ref('availableFrom')).optional().messages({
    'date.min': 'Available to date must be after available from date'
  }),
  // Tags and keywords
  tags: joi_1.default.array().items(joi_1.default.string().trim().max(50)).max(10).default([]).messages({
    'array.max': 'Cannot have more than 10 tags'
  })
});
/**
 * Update property validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[17]++;
exports.updatePropertySchema = joi_1.default.object({
  title: joi_1.default.string().trim().min(10).max(200).optional(),
  description: joi_1.default.string().trim().min(50).max(2000).optional(),
  propertyType: joi_1.default.string().valid(...PROPERTY_TYPES).optional(),
  listingType: joi_1.default.string().valid(...LISTING_TYPES).optional(),
  ownerType: joi_1.default.string().valid(...OWNER_TYPES).optional(),
  // Property details
  bedrooms: joi_1.default.number().min(0).max(20).optional(),
  bathrooms: joi_1.default.number().min(1).max(20).optional(),
  totalRooms: joi_1.default.number().min(1).max(50).optional(),
  floorArea: joi_1.default.number().min(10).max(10000).optional(),
  floor: joi_1.default.number().min(0).max(100).optional(),
  totalFloors: joi_1.default.number().min(1).max(100).optional(),
  yearBuilt: joi_1.default.number().min(1900).max(new Date().getFullYear() + 5).optional(),
  // Optional schemas
  location: locationSchema.optional(),
  pricing: pricingSchema.optional(),
  amenities: amenitiesSchema.optional(),
  rules: rulesSchema.optional(),
  roommatePreferences: roommatePreferencesSchema.optional(),
  // Availability
  isAvailable: joi_1.default.boolean().optional(),
  availableFrom: joi_1.default.date().min('now').optional(),
  availableTo: joi_1.default.date().optional(),
  // Status
  status: joi_1.default.string().valid(...PROPERTY_STATUSES).optional(),
  // Tags
  tags: joi_1.default.array().items(joi_1.default.string().trim().max(50)).max(10).optional()
});
/**
 * Property query validation schema (for GET /properties)
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[18]++;
exports.propertyQuerySchema = joi_1.default.object({
  page: joi_1.default.number().min(1).default(1),
  limit: joi_1.default.number().min(1).max(100).default(20),
  propertyType: joi_1.default.string().valid(...PROPERTY_TYPES).optional(),
  listingType: joi_1.default.string().valid(...LISTING_TYPES).optional(),
  minPrice: joi_1.default.number().min(0).optional(),
  maxPrice: joi_1.default.number().min(0).optional(),
  bedrooms: joi_1.default.number().min(0).max(20).optional(),
  bathrooms: joi_1.default.number().min(1).max(20).optional(),
  city: joi_1.default.string().trim().max(100).optional(),
  state: joi_1.default.string().valid(...NIGERIAN_STATES).optional(),
  area: joi_1.default.string().trim().max(100).optional(),
  amenities: joi_1.default.string().optional(),
  // Comma-separated list
  status: joi_1.default.string().valid(...PROPERTY_STATUSES).default('active'),
  sortBy: joi_1.default.string().valid('createdAt', 'updatedAt', 'pricing.rentPerMonth', 'analytics.views', 'bedrooms', 'bathrooms', 'title').default('createdAt'),
  sortOrder: joi_1.default.string().valid('asc', 'desc').default('desc'),
  search: joi_1.default.string().trim().max(200).optional(),
  latitude: joi_1.default.number().min(-90).max(90).optional(),
  longitude: joi_1.default.number().min(-180).max(180).optional(),
  radius: joi_1.default.number().min(100).max(50000).default(5000) // in meters
});
/**
 * Search properties validation schema (for POST /properties/search)
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[19]++;
exports.searchPropertiesSchema = joi_1.default.object({
  query: joi_1.default.string().trim().max(200).optional().messages({
    'string.max': 'Search query cannot exceed 200 characters'
  }),
  propertyType: joi_1.default.string().valid(...PROPERTY_TYPES).optional(),
  listingType: joi_1.default.string().valid(...LISTING_TYPES).optional(),
  minPrice: joi_1.default.number().min(0).optional().messages({
    'number.min': 'Minimum price cannot be negative'
  }),
  maxPrice: joi_1.default.number().min(0).optional().messages({
    'number.min': 'Maximum price cannot be negative'
  }),
  bedrooms: joi_1.default.number().min(0).max(20).optional(),
  bathrooms: joi_1.default.number().min(1).max(20).optional(),
  location: joi_1.default.object({
    city: joi_1.default.string().trim().max(100).optional(),
    state: joi_1.default.string().valid(...NIGERIAN_STATES).optional(),
    area: joi_1.default.string().trim().max(100).optional()
  }).optional(),
  amenities: joi_1.default.array().items(joi_1.default.string().trim()).optional(),
  page: joi_1.default.number().min(1).default(1),
  limit: joi_1.default.number().min(1).max(100).default(20)
}).custom((value, helpers) => {
  /* istanbul ignore next */
  cov_f7mb1mrh6().f[1]++;
  cov_f7mb1mrh6().s[20]++;
  // Validate price range
  if (
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[4][0]++, value.minPrice) &&
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[4][1]++, value.maxPrice) &&
  /* istanbul ignore next */
  (cov_f7mb1mrh6().b[4][2]++, value.minPrice > value.maxPrice)) {
    /* istanbul ignore next */
    cov_f7mb1mrh6().b[3][0]++;
    cov_f7mb1mrh6().s[21]++;
    return helpers.error('custom.invalidPriceRange');
  } else
  /* istanbul ignore next */
  {
    cov_f7mb1mrh6().b[3][1]++;
  }
  cov_f7mb1mrh6().s[22]++;
  return value;
}).messages({
  'custom.invalidPriceRange': 'Minimum price cannot be greater than maximum price'
});
/**
 * Property photo validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[23]++;
exports.propertyPhotoSchema = joi_1.default.object({
  caption: joi_1.default.string().trim().max(200).optional().messages({
    'string.max': 'Photo caption cannot exceed 200 characters'
  }),
  room: joi_1.default.string().trim().max(50).optional().messages({
    'string.max': 'Room name cannot exceed 50 characters'
  }),
  isPrimary: joi_1.default.boolean().default(false)
});
/**
 * Property photo reorder validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[24]++;
exports.reorderPhotosSchema = joi_1.default.object({
  photoOrder: joi_1.default.array().items(joi_1.default.string().trim()).min(1).required().messages({
    'array.min': 'Photo order must contain at least one photo ID',
    'any.required': 'Photo order is required'
  })
});
/**
 * Property analytics query validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[25]++;
exports.analyticsQuerySchema = joi_1.default.object({
  startDate: joi_1.default.date().optional(),
  endDate: joi_1.default.date().min(joi_1.default.ref('startDate')).optional().messages({
    'date.min': 'End date must be after start date'
  }),
  groupBy: joi_1.default.string().valid('day', 'week', 'month').default('day')
});
/**
 * Nearby properties validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[26]++;
exports.nearbyPropertiesSchema = joi_1.default.object({
  latitude: joi_1.default.number().min(-90).max(90).required().messages({
    'number.min': 'Latitude must be between -90 and 90',
    'number.max': 'Latitude must be between -90 and 90',
    'any.required': 'Latitude is required'
  }),
  longitude: joi_1.default.number().min(-180).max(180).required().messages({
    'number.min': 'Longitude must be between -180 and 180',
    'number.max': 'Longitude must be between -180 and 180',
    'any.required': 'Longitude is required'
  }),
  radius: joi_1.default.number().min(100).max(50000).default(5000).messages({
    'number.min': 'Radius must be at least 100 meters',
    'number.max': 'Radius cannot exceed 50 kilometers'
  }),
  limit: joi_1.default.number().min(1).max(100).default(20)
});
/**
 * Property favorites validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[27]++;
exports.favoritePropertySchema = joi_1.default.object({
  propertyId: joi_1.default.string().trim().required().messages({
    'string.empty': 'Property ID is required',
    'any.required': 'Property ID is required'
  })
});
/**
 * Property inquiry validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[28]++;
exports.propertyInquirySchema = joi_1.default.object({
  message: joi_1.default.string().trim().min(10).max(1000).required().messages({
    'string.empty': 'Inquiry message is required',
    'string.min': 'Message must be at least 10 characters',
    'string.max': 'Message cannot exceed 1000 characters',
    'any.required': 'Inquiry message is required'
  }),
  contactPreference: joi_1.default.string().valid('email', 'phone', 'both').default('email'),
  moveInDate: joi_1.default.date().min('now').optional().messages({
    'date.min': 'Move-in date cannot be in the past'
  }),
  additionalInfo: joi_1.default.string().trim().max(500).optional().messages({
    'string.max': 'Additional information cannot exceed 500 characters'
  })
});
/**
 * Property application validation schema
 */
/* istanbul ignore next */
cov_f7mb1mrh6().s[29]++;
exports.propertyApplicationSchema = joi_1.default.object({
  coverLetter: joi_1.default.string().trim().min(50).max(2000).required().messages({
    'string.empty': 'Cover letter is required',
    'string.min': 'Cover letter must be at least 50 characters',
    'string.max': 'Cover letter cannot exceed 2000 characters',
    'any.required': 'Cover letter is required'
  }),
  moveInDate: joi_1.default.date().min('now').required().messages({
    'date.min': 'Move-in date cannot be in the past',
    'any.required': 'Preferred move-in date is required'
  }),
  leaseDuration: joi_1.default.number().min(1).max(24).required().messages({
    'number.min': 'Lease duration must be at least 1 month',
    'number.max': 'Lease duration cannot exceed 24 months',
    'any.required': 'Preferred lease duration is required'
  }),
  monthlyIncome: joi_1.default.number().min(0).optional().messages({
    'number.min': 'Monthly income cannot be negative'
  }),
  employmentStatus: joi_1.default.string().valid('employed', 'self-employed', 'student', 'unemployed', 'retired').optional(),
  references: joi_1.default.array().items(joi_1.default.object({
    name: joi_1.default.string().trim().max(100).required(),
    relationship: joi_1.default.string().trim().max(100).required(),
    phoneNumber: joi_1.default.string().trim().required(),
    email: joi_1.default.string().email().optional()
  })).max(3).optional().messages({
    'array.max': 'Cannot provide more than 3 references'
  }),
  additionalInfo: joi_1.default.string().trim().max(1000).optional().messages({
    'string.max': 'Additional information cannot exceed 1000 characters'
  })
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,