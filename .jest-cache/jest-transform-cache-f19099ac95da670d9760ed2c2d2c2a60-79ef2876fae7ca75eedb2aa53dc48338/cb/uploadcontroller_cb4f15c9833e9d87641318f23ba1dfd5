5b62437d547c5aabf39a73c8e0341f0c
"use strict";

/* istanbul ignore next */
function cov_2pcmws8w0z() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\upload.controller.ts";
  var hash = "3fd4d4d545b257e23e7a595abd68ecf6e22bb321";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\upload.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 208
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 51
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "7": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "8": {
        start: {
          line: 10,
          column: 35
        },
        end: {
          line: 10,
          column: 82
        }
      },
      "9": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "10": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "11": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "12": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "13": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "14": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 69
        }
      },
      "15": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "16": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 63
        }
      },
      "17": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "18": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 78
        }
      },
      "21": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 93
        }
      },
      "22": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 78
        }
      },
      "24": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 93
        }
      },
      "25": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "26": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 96
        }
      },
      "27": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "29": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 103,
          column: 3
        }
      },
      "30": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "31": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "32": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "33": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "34": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 70
        }
      },
      "36": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "37": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 67
        }
      },
      "38": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "39": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 85
        }
      },
      "40": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "41": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 116
        }
      },
      "42": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "43": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "44": {
        start: {
          line: 107,
          column: 0
        },
        end: {
          line: 180,
          column: 3
        }
      },
      "45": {
        start: {
          line: 108,
          column: 19
        },
        end: {
          line: 108,
          column: 32
        }
      },
      "46": {
        start: {
          line: 109,
          column: 18
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "47": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 110,
          column: 35
        }
      },
      "48": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "49": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 69
        }
      },
      "50": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "51": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 74
        }
      },
      "52": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "53": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "54": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 71
        }
      },
      "55": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "56": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 103
        }
      },
      "57": {
        start: {
          line: 127,
          column: 27
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "58": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "59": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "60": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 131
        }
      },
      "61": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 146,
          column: 14
        }
      },
      "62": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 85
        }
      },
      "63": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "64": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "65": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 62
        }
      },
      "66": {
        start: {
          line: 158,
          column: 48
        },
        end: {
          line: 158,
          column: 61
        }
      },
      "67": {
        start: {
          line: 159,
          column: 19
        },
        end: {
          line: 159,
          column: 57
        }
      },
      "68": {
        start: {
          line: 159,
          column: 44
        },
        end: {
          line: 159,
          column: 56
        }
      },
      "69": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "70": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "71": {
        start: {
          line: 184,
          column: 0
        },
        end: {
          line: 237,
          column: 3
        }
      },
      "72": {
        start: {
          line: 185,
          column: 19
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "73": {
        start: {
          line: 186,
          column: 17
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "74": {
        start: {
          line: 187,
          column: 31
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "75": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "76": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 69
        }
      },
      "77": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "78": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 69
        }
      },
      "79": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "80": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 74
        }
      },
      "81": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "82": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 70
        }
      },
      "83": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 202,
          column: 67
        }
      },
      "84": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "85": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 78
        }
      },
      "86": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 37
        }
      },
      "87": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "88": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "89": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 219,
          column: 134
        }
      },
      "90": {
        start: {
          line: 220,
          column: 21
        },
        end: {
          line: 220,
          column: 60
        }
      },
      "91": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "92": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "93": {
        start: {
          line: 241,
          column: 0
        },
        end: {
          line: 295,
          column: 3
        }
      },
      "94": {
        start: {
          line: 242,
          column: 19
        },
        end: {
          line: 242,
          column: 32
        }
      },
      "95": {
        start: {
          line: 243,
          column: 18
        },
        end: {
          line: 243,
          column: 27
        }
      },
      "96": {
        start: {
          line: 244,
          column: 43
        },
        end: {
          line: 244,
          column: 51
        }
      },
      "97": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "98": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 69
        }
      },
      "99": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "100": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 64
        }
      },
      "101": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "102": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 87
        }
      },
      "103": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 56
        }
      },
      "104": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 271,
          column: 7
        }
      },
      "105": {
        start: {
          line: 259,
          column: 25
        },
        end: {
          line: 259,
          column: 71
        }
      },
      "106": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "107": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 103
        }
      },
      "108": {
        start: {
          line: 264,
          column: 32
        },
        end: {
          line: 264,
          column: 97
        }
      },
      "109": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "110": {
        start: {
          line: 273,
          column: 26
        },
        end: {
          line: 273,
          column: 97
        }
      },
      "111": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "112": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 294,
          column: 7
        }
      },
      "113": {
        start: {
          line: 283,
          column: 50
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "114": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 318,
          column: 3
        }
      },
      "115": {
        start: {
          line: 300,
          column: 19
        },
        end: {
          line: 300,
          column: 32
        }
      },
      "116": {
        start: {
          line: 301,
          column: 25
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "117": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "118": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 69
        }
      },
      "119": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "120": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 68
        }
      },
      "121": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 57
        }
      },
      "122": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 313,
          column: 7
        }
      },
      "123": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 317,
          column: 7
        }
      },
      "124": {
        start: {
          line: 322,
          column: 0
        },
        end: {
          line: 340,
          column: 3
        }
      },
      "125": {
        start: {
          line: 323,
          column: 19
        },
        end: {
          line: 323,
          column: 32
        }
      },
      "126": {
        start: {
          line: 324,
          column: 56
        },
        end: {
          line: 324,
          column: 64
        }
      },
      "127": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "128": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 69
        }
      },
      "129": {
        start: {
          line: 328,
          column: 22
        },
        end: {
          line: 328,
          column: 108
        }
      },
      "130": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 339,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 15,
            column: 58
          }
        },
        loc: {
          start: {
            line: 15,
            column: 77
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 64,
            column: 52
          },
          end: {
            line: 64,
            column: 53
          }
        },
        loc: {
          start: {
            line: 64,
            column: 72
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 64
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 60
          },
          end: {
            line: 107,
            column: 61
          }
        },
        loc: {
          start: {
            line: 107,
            column: 80
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 107
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 127,
            column: 37
          },
          end: {
            line: 127,
            column: 38
          }
        },
        loc: {
          start: {
            line: 127,
            column: 60
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 127
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 158,
            column: 38
          },
          end: {
            line: 158,
            column: 39
          }
        },
        loc: {
          start: {
            line: 158,
            column: 48
          },
          end: {
            line: 158,
            column: 61
          }
        },
        line: 158
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 159,
            column: 34
          },
          end: {
            line: 159,
            column: 35
          }
        },
        loc: {
          start: {
            line: 159,
            column: 44
          },
          end: {
            line: 159,
            column: 56
          }
        },
        line: 159
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 184,
            column: 63
          },
          end: {
            line: 184,
            column: 64
          }
        },
        loc: {
          start: {
            line: 184,
            column: 83
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 184
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 241,
            column: 56
          },
          end: {
            line: 241,
            column: 57
          }
        },
        loc: {
          start: {
            line: 241,
            column: 76
          },
          end: {
            line: 295,
            column: 1
          }
        },
        line: 241
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 257,
            column: 55
          },
          end: {
            line: 257,
            column: 56
          }
        },
        loc: {
          start: {
            line: 257,
            column: 71
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 257
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 283,
            column: 39
          },
          end: {
            line: 283,
            column: 40
          }
        },
        loc: {
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 283
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 299,
            column: 59
          },
          end: {
            line: 299,
            column: 60
          }
        },
        loc: {
          start: {
            line: 299,
            column: 79
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 299
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 322,
            column: 58
          }
        },
        loc: {
          start: {
            line: 322,
            column: 77
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 322
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 114,
            column: 14
          }
        }, {
          start: {
            line: 114,
            column: 18
          },
          end: {
            line: 114,
            column: 36
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 171,
            column: 20
          },
          end: {
            line: 171,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 40
          },
          end: {
            line: 171,
            column: 46
          }
        }, {
          start: {
            line: 171,
            column: 49
          },
          end: {
            line: 171,
            column: 58
          }
        }],
        line: 171
      },
      "12": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "13": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "14": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "15": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "16": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "17": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 233,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 16
          },
          end: {
            line: 233,
            column: 83
          }
        }, {
          start: {
            line: 233,
            column: 86
          },
          end: {
            line: 233,
            column: 95
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 244,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 38
          }
        }],
        line: 244
      },
      "20": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "21": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "22": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 14
          }
        }, {
          start: {
            line: 248,
            column: 18
          },
          end: {
            line: 248,
            column: 36
          }
        }],
        line: 248
      },
      "23": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "24": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "25": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "26": {
        loc: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "27": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 324,
            column: 21
          },
          end: {
            line: 324,
            column: 40
          }
        }],
        line: 324
      },
      "28": {
        loc: {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 324,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 324,
            column: 49
          },
          end: {
            line: 324,
            column: 51
          }
        }],
        line: 324
      },
      "29": {
        loc: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\upload.controller.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\upload.controller.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { Types } from 'mongoose';\r\nimport { catchAsync } from '../utils/catchAsync';\r\nimport { AppError } from '../utils/appError';\r\nimport { logger } from '../utils/logger';\r\nimport { config } from '../config/environment';\r\nimport { \r\n  validateUploadedFile, \r\n  validateUploadedFiles, \r\n  extractFileMetadata,\r\n  performSecurityCheck \r\n} from '../middleware/upload';\r\nimport { \r\n  optimizeImage, \r\n  generateImageSizes, \r\n  compressForWeb,\r\n  extractImageMetadata,\r\n  validateImageIntegrity \r\n} from '../services/imageOptimizationService';\r\nimport {\r\n  uploadImage,\r\n  uploadProfilePhoto,\r\n  uploadPropertyPhoto,\r\n  uploadMessageAttachment,\r\n  bulkUploadImages as cloudinaryBulkUpload,\r\n  deleteImage,\r\n  generateImageSizes as generateCloudinarySizes,\r\n  generateSignedUploadUrl\r\n} from '../services/cloudinaryService';\r\n\r\n/**\r\n * Upload single image\r\n */\r\nexport const uploadSingleImage = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const file = req.file;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!file) {\r\n    throw new AppError('No file uploaded', 400);\r\n  }\r\n\r\n  // Validate file\r\n  validateUploadedFile(file, 'image');\r\n\r\n  // Security check\r\n  const isSecure = await performSecurityCheck(file);\r\n  if (!isSecure) {\r\n    throw new AppError('File failed security validation', 400);\r\n  }\r\n\r\n  // Validate image integrity\r\n  const isValid = await validateImageIntegrity(file.buffer);\r\n  if (!isValid) {\r\n    throw new AppError('Invalid or corrupted image file', 400);\r\n  }\r\n\r\n  // Optimize image\r\n  const optimizedBuffer = await compressForWeb(file.buffer);\r\n\r\n  // Upload to Cloudinary\r\n  const uploadResult = await uploadImage(optimizedBuffer, {\r\n    folder: 'lajospaces/uploads',\r\n    tags: ['upload', userId.toString()]\r\n  });\r\n\r\n  // Extract metadata\r\n  const metadata = await extractImageMetadata(optimizedBuffer);\r\n\r\n  logger.info('Single image uploaded successfully', {\r\n    userId,\r\n    publicId: uploadResult.public_id,\r\n    originalSize: file.size,\r\n    optimizedSize: optimizedBuffer.length\r\n  });\r\n\r\n  return res.status(201).json({\r\n    success: true,\r\n    data: {\r\n      upload: uploadResult,\r\n      metadata,\r\n      sizes: generateCloudinarySizes(uploadResult.public_id)\r\n    },\r\n    message: 'Image uploaded successfully'\r\n  });\r\n});\r\n\r\n/**\r\n * Upload profile avatar\r\n */\r\nexport const uploadAvatar = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const file = req.file;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!file) {\r\n    throw new AppError('No avatar file uploaded', 400);\r\n  }\r\n\r\n  // Validate file\r\n  validateUploadedFile(file, 'avatar');\r\n\r\n  // Security check\r\n  const isSecure = await performSecurityCheck(file);\r\n  if (!isSecure) {\r\n    throw new AppError('Avatar file failed security validation', 400);\r\n  }\r\n\r\n  // Optimize for avatar (square crop, face detection)\r\n  const optimizedBuffer = await optimizeImage(file.buffer, {\r\n    width: 400,\r\n    height: 400,\r\n    crop: 'cover',\r\n    quality: 85,\r\n    format: 'auto',\r\n    removeMetadata: true\r\n  });\r\n\r\n  // Upload to Cloudinary with avatar-specific settings\r\n  const uploadResult = await uploadProfilePhoto(optimizedBuffer, userId.toString(), true);\r\n\r\n  logger.info('Avatar uploaded successfully', {\r\n    userId,\r\n    publicId: uploadResult.public_id\r\n  });\r\n\r\n  return res.status(201).json({\r\n    success: true,\r\n    data: {\r\n      avatar: uploadResult,\r\n      sizes: generateCloudinarySizes(uploadResult.public_id)\r\n    },\r\n    message: 'Avatar uploaded successfully'\r\n  });\r\n});\r\n\r\n/**\r\n * Upload property photos\r\n */\r\nexport const uploadPropertyPhotos = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const files = req.files as Express.Multer.File[];\r\n  const { propertyId } = req.body;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!files || files.length === 0) {\r\n    throw new AppError('No property photos uploaded', 400);\r\n  }\r\n\r\n  // Validate files\r\n  validateUploadedFiles(files, 'property');\r\n\r\n  // Security check for all files\r\n  for (const file of files) {\r\n    const isSecure = await performSecurityCheck(file);\r\n    if (!isSecure) {\r\n      throw new AppError(`File ${file.originalname} failed security validation`, 400);\r\n    }\r\n  }\r\n\r\n  // Process and upload images\r\n  const uploadPromises = files.map(async (file, index) => {\r\n    try {\r\n      // Optimize for property photos\r\n      const optimizedBuffer = await optimizeImage(file.buffer, {\r\n        width: 1200,\r\n        height: 800,\r\n        crop: 'inside',\r\n        quality: 85,\r\n        format: 'auto',\r\n        removeMetadata: true,\r\n        sharpen: true\r\n      });\r\n\r\n      // Upload to Cloudinary\r\n      const uploadResult = await uploadPropertyPhoto(\r\n        optimizedBuffer, \r\n        userId.toString(), \r\n        propertyId\r\n      );\r\n\r\n      return {\r\n        index,\r\n        originalName: file.originalname,\r\n        upload: uploadResult,\r\n        sizes: generateCloudinarySizes(uploadResult.public_id)\r\n      };\r\n    } catch (error) {\r\n      logger.error(`Error uploading property photo ${index}:`, error);\r\n      return {\r\n        index,\r\n        originalName: file.originalname,\r\n        error: (error as Error).message\r\n      };\r\n    }\r\n  });\r\n\r\n  const results = await Promise.all(uploadPromises);\r\n  const successful = results.filter(result => !result.error);\r\n  const failed = results.filter(result => result.error);\r\n\r\n  logger.info('Property photos upload completed', {\r\n    userId,\r\n    propertyId,\r\n    total: files.length,\r\n    successful: successful.length,\r\n    failed: failed.length\r\n  });\r\n\r\n  return res.status(201).json({\r\n    success: true,\r\n    data: {\r\n      uploads: successful,\r\n      failed: failed.length > 0 ? failed : undefined,\r\n      summary: {\r\n        total: files.length,\r\n        successful: successful.length,\r\n        failed: failed.length\r\n      }\r\n    },\r\n    message: `${successful.length} of ${files.length} property photos uploaded successfully`\r\n  });\r\n});\r\n\r\n/**\r\n * Upload message attachment\r\n */\r\nexport const uploadMessageAttachment = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const file = req.file;\r\n  const { conversationId } = req.body;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!file) {\r\n    throw new AppError('No attachment uploaded', 400);\r\n  }\r\n\r\n  if (!conversationId) {\r\n    throw new AppError('Conversation ID is required', 400);\r\n  }\r\n\r\n  // Validate conversation ID\r\n  if (!Types.ObjectId.isValid(conversationId)) {\r\n    throw new AppError('Invalid conversation ID', 400);\r\n  }\r\n\r\n  // Security check\r\n  const isSecure = await performSecurityCheck(file);\r\n  if (!isSecure) {\r\n    throw new AppError('File failed security validation', 400);\r\n  }\r\n\r\n  let processedBuffer = file.buffer;\r\n\r\n  // Optimize if it's an image\r\n  if (file.mimetype.startsWith('image/')) {\r\n    processedBuffer = await optimizeImage(file.buffer, {\r\n      width: 800,\r\n      height: 600,\r\n      crop: 'inside',\r\n      quality: 80,\r\n      format: 'auto',\r\n      removeMetadata: true\r\n    });\r\n  }\r\n\r\n  // Upload to Cloudinary\r\n  const uploadResult = await uploadMessageAttachment(\r\n    processedBuffer,\r\n    file.mimetype,\r\n    userId.toString(),\r\n    conversationId\r\n  );\r\n\r\n  const metadata = extractFileMetadata(file);\r\n\r\n  logger.info('Message attachment uploaded successfully', {\r\n    userId,\r\n    conversationId,\r\n    publicId: uploadResult.public_id,\r\n    fileType: file.mimetype\r\n  });\r\n\r\n  return res.status(201).json({\r\n    success: true,\r\n    data: {\r\n      attachment: uploadResult,\r\n      metadata,\r\n      sizes: file.mimetype.startsWith('image/') ? \r\n        generateCloudinarySizes(uploadResult.public_id) : undefined\r\n    },\r\n    message: 'Attachment uploaded successfully'\r\n  });\r\n});\r\n\r\n/**\r\n * Bulk upload images\r\n */\r\nexport const bulkUploadImages = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const files = req.files as Express.Multer.File[];\r\n  const { folder = 'lajospaces/bulk' } = req.body;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!files || files.length === 0) {\r\n    throw new AppError('No files uploaded', 400);\r\n  }\r\n\r\n  if (files.length > 20) {\r\n    throw new AppError('Maximum 20 files allowed for bulk upload', 400);\r\n  }\r\n\r\n  // Validate all files\r\n  validateUploadedFiles(files, 'image');\r\n\r\n  // Process files for bulk upload\r\n  const processedFiles = await Promise.all(\r\n    files.map(async (file) => {\r\n      // Security check\r\n      const isSecure = await performSecurityCheck(file);\r\n      if (!isSecure) {\r\n        throw new AppError(`File ${file.originalname} failed security validation`, 400);\r\n      }\r\n\r\n      // Optimize image\r\n      const optimizedBuffer = await compressForWeb(file.buffer);\r\n\r\n      return {\r\n        buffer: optimizedBuffer,\r\n        options: {\r\n          tags: ['bulk', userId.toString(), 'upload']\r\n        }\r\n      };\r\n    })\r\n  );\r\n\r\n  // Bulk upload to Cloudinary\r\n  const uploadResults = await cloudinaryBulkUpload(processedFiles, folder);\r\n\r\n  logger.info('Bulk upload completed', {\r\n    userId,\r\n    folder,\r\n    total: files.length,\r\n    successful: uploadResults.length\r\n  });\r\n\r\n  return res.status(201).json({\r\n    success: true,\r\n    data: {\r\n      uploads: uploadResults.map(result => ({\r\n        upload: result,\r\n        sizes: generateCloudinarySizes(result.public_id)\r\n      })),\r\n      summary: {\r\n        total: files.length,\r\n        successful: uploadResults.length,\r\n        failed: files.length - uploadResults.length\r\n      }\r\n    },\r\n    message: `${uploadResults.length} of ${files.length} images uploaded successfully`\r\n  });\r\n});\r\n\r\n/**\r\n * Delete uploaded image\r\n */\r\nexport const deleteUploadedImage = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const { publicId } = req.params;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  if (!publicId) {\r\n    throw new AppError('Public ID is required', 400);\r\n  }\r\n\r\n  // Delete from Cloudinary\r\n  await deleteImage(publicId);\r\n\r\n  logger.info('Image deleted successfully', {\r\n    userId,\r\n    publicId\r\n  });\r\n\r\n  return res.json({\r\n    success: true,\r\n    message: 'Image deleted successfully'\r\n  });\r\n});\r\n\r\n/**\r\n * Generate signed upload URL for direct client uploads\r\n */\r\nexport const generateUploadUrl = catchAsync(async (req: Request, res: Response) => {\r\n  const userId = req.user?._id;\r\n  const { folder = 'lajospaces/direct', tags = [] } = req.body;\r\n\r\n  if (!userId) {\r\n    throw new AppError('User not authenticated', 401);\r\n  }\r\n\r\n  const uploadUrl = generateSignedUploadUrl(\r\n    folder,\r\n    [...tags, userId.toString()]\r\n  );\r\n\r\n  return res.json({\r\n    success: true,\r\n    data: {\r\n      uploadUrl: uploadUrl.url,\r\n      signature: uploadUrl.signature,\r\n      timestamp: uploadUrl.timestamp,\r\n      cloudName: config.CLOUDINARY_CLOUD_NAME,\r\n      apiKey: config.CLOUDINARY_API_KEY\r\n    },\r\n    message: 'Signed upload URL generated successfully'\r\n  });\r\n});\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3fd4d4d545b257e23e7a595abd68ecf6e22bb321"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pcmws8w0z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pcmws8w0z();
cov_2pcmws8w0z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2pcmws8w0z().s[1]++;
exports.generateUploadUrl = exports.deleteUploadedImage = exports.bulkUploadImages = exports.uploadMessageAttachment = exports.uploadPropertyPhotos = exports.uploadAvatar = exports.uploadSingleImage = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[2]++, require("mongoose"));
const catchAsync_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[3]++, require("../utils/catchAsync"));
const appError_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[4]++, require("../utils/appError"));
const logger_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[5]++, require("../utils/logger"));
const environment_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[6]++, require("../config/environment"));
const upload_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[7]++, require("../middleware/upload"));
const imageOptimizationService_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[8]++, require("../services/imageOptimizationService"));
const cloudinaryService_1 =
/* istanbul ignore next */
(cov_2pcmws8w0z().s[9]++, require("../services/cloudinaryService"));
/**
 * Upload single image
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[10]++;
exports.uploadSingleImage = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[0]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[11]++, req.user?._id);
  const file =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[12]++, req.file);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[13]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[0][0]++;
    cov_2pcmws8w0z().s[14]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[0][1]++;
  }
  cov_2pcmws8w0z().s[15]++;
  if (!file) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[1][0]++;
    cov_2pcmws8w0z().s[16]++;
    throw new appError_1.AppError('No file uploaded', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[1][1]++;
  }
  // Validate file
  cov_2pcmws8w0z().s[17]++;
  (0, upload_1.validateUploadedFile)(file, 'image');
  // Security check
  const isSecure =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[18]++, await (0, upload_1.performSecurityCheck)(file));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[19]++;
  if (!isSecure) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[2][0]++;
    cov_2pcmws8w0z().s[20]++;
    throw new appError_1.AppError('File failed security validation', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[2][1]++;
  }
  // Validate image integrity
  const isValid =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[21]++, await (0, imageOptimizationService_1.validateImageIntegrity)(file.buffer));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[22]++;
  if (!isValid) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[3][0]++;
    cov_2pcmws8w0z().s[23]++;
    throw new appError_1.AppError('Invalid or corrupted image file', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[3][1]++;
  }
  // Optimize image
  const optimizedBuffer =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[24]++, await (0, imageOptimizationService_1.compressForWeb)(file.buffer));
  // Upload to Cloudinary
  const uploadResult =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[25]++, await (0, cloudinaryService_1.uploadImage)(optimizedBuffer, {
    folder: 'lajospaces/uploads',
    tags: ['upload', userId.toString()]
  }));
  // Extract metadata
  const metadata =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[26]++, await (0, imageOptimizationService_1.extractImageMetadata)(optimizedBuffer));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[27]++;
  logger_1.logger.info('Single image uploaded successfully', {
    userId,
    publicId: uploadResult.public_id,
    originalSize: file.size,
    optimizedSize: optimizedBuffer.length
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[28]++;
  return res.status(201).json({
    success: true,
    data: {
      upload: uploadResult,
      metadata,
      sizes: (0, cloudinaryService_1.generateImageSizes)(uploadResult.public_id)
    },
    message: 'Image uploaded successfully'
  });
});
/**
 * Upload profile avatar
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[29]++;
exports.uploadAvatar = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[1]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[30]++, req.user?._id);
  const file =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[31]++, req.file);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[32]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[4][0]++;
    cov_2pcmws8w0z().s[33]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[4][1]++;
  }
  cov_2pcmws8w0z().s[34]++;
  if (!file) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[5][0]++;
    cov_2pcmws8w0z().s[35]++;
    throw new appError_1.AppError('No avatar file uploaded', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[5][1]++;
  }
  // Validate file
  cov_2pcmws8w0z().s[36]++;
  (0, upload_1.validateUploadedFile)(file, 'avatar');
  // Security check
  const isSecure =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[37]++, await (0, upload_1.performSecurityCheck)(file));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[38]++;
  if (!isSecure) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[6][0]++;
    cov_2pcmws8w0z().s[39]++;
    throw new appError_1.AppError('Avatar file failed security validation', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[6][1]++;
  }
  // Optimize for avatar (square crop, face detection)
  const optimizedBuffer =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[40]++, await (0, imageOptimizationService_1.optimizeImage)(file.buffer, {
    width: 400,
    height: 400,
    crop: 'cover',
    quality: 85,
    format: 'auto',
    removeMetadata: true
  }));
  // Upload to Cloudinary with avatar-specific settings
  const uploadResult =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[41]++, await (0, cloudinaryService_1.uploadProfilePhoto)(optimizedBuffer, userId.toString(), true));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[42]++;
  logger_1.logger.info('Avatar uploaded successfully', {
    userId,
    publicId: uploadResult.public_id
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[43]++;
  return res.status(201).json({
    success: true,
    data: {
      avatar: uploadResult,
      sizes: (0, cloudinaryService_1.generateImageSizes)(uploadResult.public_id)
    },
    message: 'Avatar uploaded successfully'
  });
});
/**
 * Upload property photos
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[44]++;
exports.uploadPropertyPhotos = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[2]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[45]++, req.user?._id);
  const files =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[46]++, req.files);
  const {
    propertyId
  } =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[47]++, req.body);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[48]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[7][0]++;
    cov_2pcmws8w0z().s[49]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[7][1]++;
  }
  cov_2pcmws8w0z().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_2pcmws8w0z().b[9][0]++, !files) ||
  /* istanbul ignore next */
  (cov_2pcmws8w0z().b[9][1]++, files.length === 0)) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[8][0]++;
    cov_2pcmws8w0z().s[51]++;
    throw new appError_1.AppError('No property photos uploaded', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[8][1]++;
  }
  // Validate files
  cov_2pcmws8w0z().s[52]++;
  (0, upload_1.validateUploadedFiles)(files, 'property');
  // Security check for all files
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[53]++;
  for (const file of files) {
    const isSecure =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().s[54]++, await (0, upload_1.performSecurityCheck)(file));
    /* istanbul ignore next */
    cov_2pcmws8w0z().s[55]++;
    if (!isSecure) {
      /* istanbul ignore next */
      cov_2pcmws8w0z().b[10][0]++;
      cov_2pcmws8w0z().s[56]++;
      throw new appError_1.AppError(`File ${file.originalname} failed security validation`, 400);
    } else
    /* istanbul ignore next */
    {
      cov_2pcmws8w0z().b[10][1]++;
    }
  }
  // Process and upload images
  const uploadPromises =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[57]++, files.map(async (file, index) => {
    /* istanbul ignore next */
    cov_2pcmws8w0z().f[3]++;
    cov_2pcmws8w0z().s[58]++;
    try {
      // Optimize for property photos
      const optimizedBuffer =
      /* istanbul ignore next */
      (cov_2pcmws8w0z().s[59]++, await (0, imageOptimizationService_1.optimizeImage)(file.buffer, {
        width: 1200,
        height: 800,
        crop: 'inside',
        quality: 85,
        format: 'auto',
        removeMetadata: true,
        sharpen: true
      }));
      // Upload to Cloudinary
      const uploadResult =
      /* istanbul ignore next */
      (cov_2pcmws8w0z().s[60]++, await (0, cloudinaryService_1.uploadPropertyPhoto)(optimizedBuffer, userId.toString(), propertyId));
      /* istanbul ignore next */
      cov_2pcmws8w0z().s[61]++;
      return {
        index,
        originalName: file.originalname,
        upload: uploadResult,
        sizes: (0, cloudinaryService_1.generateImageSizes)(uploadResult.public_id)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2pcmws8w0z().s[62]++;
      logger_1.logger.error(`Error uploading property photo ${index}:`, error);
      /* istanbul ignore next */
      cov_2pcmws8w0z().s[63]++;
      return {
        index,
        originalName: file.originalname,
        error: error.message
      };
    }
  }));
  const results =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[64]++, await Promise.all(uploadPromises));
  const successful =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[65]++, results.filter(result => {
    /* istanbul ignore next */
    cov_2pcmws8w0z().f[4]++;
    cov_2pcmws8w0z().s[66]++;
    return !result.error;
  }));
  const failed =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[67]++, results.filter(result => {
    /* istanbul ignore next */
    cov_2pcmws8w0z().f[5]++;
    cov_2pcmws8w0z().s[68]++;
    return result.error;
  }));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[69]++;
  logger_1.logger.info('Property photos upload completed', {
    userId,
    propertyId,
    total: files.length,
    successful: successful.length,
    failed: failed.length
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[70]++;
  return res.status(201).json({
    success: true,
    data: {
      uploads: successful,
      failed: failed.length > 0 ?
      /* istanbul ignore next */
      (cov_2pcmws8w0z().b[11][0]++, failed) :
      /* istanbul ignore next */
      (cov_2pcmws8w0z().b[11][1]++, undefined),
      summary: {
        total: files.length,
        successful: successful.length,
        failed: failed.length
      }
    },
    message: `${successful.length} of ${files.length} property photos uploaded successfully`
  });
});
/**
 * Upload message attachment
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[71]++;
exports.uploadMessageAttachment = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[6]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[72]++, req.user?._id);
  const file =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[73]++, req.file);
  const {
    conversationId
  } =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[74]++, req.body);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[75]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[12][0]++;
    cov_2pcmws8w0z().s[76]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[12][1]++;
  }
  cov_2pcmws8w0z().s[77]++;
  if (!file) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[13][0]++;
    cov_2pcmws8w0z().s[78]++;
    throw new appError_1.AppError('No attachment uploaded', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[13][1]++;
  }
  cov_2pcmws8w0z().s[79]++;
  if (!conversationId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[14][0]++;
    cov_2pcmws8w0z().s[80]++;
    throw new appError_1.AppError('Conversation ID is required', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[14][1]++;
  }
  // Validate conversation ID
  cov_2pcmws8w0z().s[81]++;
  if (!mongoose_1.Types.ObjectId.isValid(conversationId)) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[15][0]++;
    cov_2pcmws8w0z().s[82]++;
    throw new appError_1.AppError('Invalid conversation ID', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[15][1]++;
  }
  // Security check
  const isSecure =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[83]++, await (0, upload_1.performSecurityCheck)(file));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[84]++;
  if (!isSecure) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[16][0]++;
    cov_2pcmws8w0z().s[85]++;
    throw new appError_1.AppError('File failed security validation', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[16][1]++;
  }
  let processedBuffer =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[86]++, file.buffer);
  // Optimize if it's an image
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[87]++;
  if (file.mimetype.startsWith('image/')) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[17][0]++;
    cov_2pcmws8w0z().s[88]++;
    processedBuffer = await (0, imageOptimizationService_1.optimizeImage)(file.buffer, {
      width: 800,
      height: 600,
      crop: 'inside',
      quality: 80,
      format: 'auto',
      removeMetadata: true
    });
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[17][1]++;
  }
  // Upload to Cloudinary
  const uploadResult =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[89]++, await (0, exports.uploadMessageAttachment)(processedBuffer, file.mimetype, userId.toString(), conversationId));
  const metadata =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[90]++, (0, upload_1.extractFileMetadata)(file));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[91]++;
  logger_1.logger.info('Message attachment uploaded successfully', {
    userId,
    conversationId,
    publicId: uploadResult.public_id,
    fileType: file.mimetype
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[92]++;
  return res.status(201).json({
    success: true,
    data: {
      attachment: uploadResult,
      metadata,
      sizes: file.mimetype.startsWith('image/') ?
      /* istanbul ignore next */
      (cov_2pcmws8w0z().b[18][0]++, (0, cloudinaryService_1.generateImageSizes)(uploadResult.public_id)) :
      /* istanbul ignore next */
      (cov_2pcmws8w0z().b[18][1]++, undefined)
    },
    message: 'Attachment uploaded successfully'
  });
});
/**
 * Bulk upload images
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[93]++;
exports.bulkUploadImages = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[7]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[94]++, req.user?._id);
  const files =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[95]++, req.files);
  const {
    folder =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().b[19][0]++, 'lajospaces/bulk')
  } =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[96]++, req.body);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[97]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[20][0]++;
    cov_2pcmws8w0z().s[98]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[20][1]++;
  }
  cov_2pcmws8w0z().s[99]++;
  if (
  /* istanbul ignore next */
  (cov_2pcmws8w0z().b[22][0]++, !files) ||
  /* istanbul ignore next */
  (cov_2pcmws8w0z().b[22][1]++, files.length === 0)) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[21][0]++;
    cov_2pcmws8w0z().s[100]++;
    throw new appError_1.AppError('No files uploaded', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[21][1]++;
  }
  cov_2pcmws8w0z().s[101]++;
  if (files.length > 20) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[23][0]++;
    cov_2pcmws8w0z().s[102]++;
    throw new appError_1.AppError('Maximum 20 files allowed for bulk upload', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[23][1]++;
  }
  // Validate all files
  cov_2pcmws8w0z().s[103]++;
  (0, upload_1.validateUploadedFiles)(files, 'image');
  // Process files for bulk upload
  const processedFiles =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[104]++, await Promise.all(files.map(async file => {
    /* istanbul ignore next */
    cov_2pcmws8w0z().f[8]++;
    // Security check
    const isSecure =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().s[105]++, await (0, upload_1.performSecurityCheck)(file));
    /* istanbul ignore next */
    cov_2pcmws8w0z().s[106]++;
    if (!isSecure) {
      /* istanbul ignore next */
      cov_2pcmws8w0z().b[24][0]++;
      cov_2pcmws8w0z().s[107]++;
      throw new appError_1.AppError(`File ${file.originalname} failed security validation`, 400);
    } else
    /* istanbul ignore next */
    {
      cov_2pcmws8w0z().b[24][1]++;
    }
    // Optimize image
    const optimizedBuffer =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().s[108]++, await (0, imageOptimizationService_1.compressForWeb)(file.buffer));
    /* istanbul ignore next */
    cov_2pcmws8w0z().s[109]++;
    return {
      buffer: optimizedBuffer,
      options: {
        tags: ['bulk', userId.toString(), 'upload']
      }
    };
  })));
  // Bulk upload to Cloudinary
  const uploadResults =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[110]++, await (0, cloudinaryService_1.bulkUploadImages)(processedFiles, folder));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[111]++;
  logger_1.logger.info('Bulk upload completed', {
    userId,
    folder,
    total: files.length,
    successful: uploadResults.length
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[112]++;
  return res.status(201).json({
    success: true,
    data: {
      uploads: uploadResults.map(result => {
        /* istanbul ignore next */
        cov_2pcmws8w0z().f[9]++;
        cov_2pcmws8w0z().s[113]++;
        return {
          upload: result,
          sizes: (0, cloudinaryService_1.generateImageSizes)(result.public_id)
        };
      }),
      summary: {
        total: files.length,
        successful: uploadResults.length,
        failed: files.length - uploadResults.length
      }
    },
    message: `${uploadResults.length} of ${files.length} images uploaded successfully`
  });
});
/**
 * Delete uploaded image
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[114]++;
exports.deleteUploadedImage = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[10]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[115]++, req.user?._id);
  const {
    publicId
  } =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[116]++, req.params);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[117]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[25][0]++;
    cov_2pcmws8w0z().s[118]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[25][1]++;
  }
  cov_2pcmws8w0z().s[119]++;
  if (!publicId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[26][0]++;
    cov_2pcmws8w0z().s[120]++;
    throw new appError_1.AppError('Public ID is required', 400);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[26][1]++;
  }
  // Delete from Cloudinary
  cov_2pcmws8w0z().s[121]++;
  await (0, cloudinaryService_1.deleteImage)(publicId);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[122]++;
  logger_1.logger.info('Image deleted successfully', {
    userId,
    publicId
  });
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[123]++;
  return res.json({
    success: true,
    message: 'Image deleted successfully'
  });
});
/**
 * Generate signed upload URL for direct client uploads
 */
/* istanbul ignore next */
cov_2pcmws8w0z().s[124]++;
exports.generateUploadUrl = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_2pcmws8w0z().f[11]++;
  const userId =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[125]++, req.user?._id);
  const {
    folder =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().b[27][0]++, 'lajospaces/direct'),
    tags =
    /* istanbul ignore next */
    (cov_2pcmws8w0z().b[28][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[126]++, req.body);
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[127]++;
  if (!userId) {
    /* istanbul ignore next */
    cov_2pcmws8w0z().b[29][0]++;
    cov_2pcmws8w0z().s[128]++;
    throw new appError_1.AppError('User not authenticated', 401);
  } else
  /* istanbul ignore next */
  {
    cov_2pcmws8w0z().b[29][1]++;
  }
  const uploadUrl =
  /* istanbul ignore next */
  (cov_2pcmws8w0z().s[129]++, (0, cloudinaryService_1.generateSignedUploadUrl)(folder, [...tags, userId.toString()]));
  /* istanbul ignore next */
  cov_2pcmws8w0z().s[130]++;
  return res.json({
    success: true,
    data: {
      uploadUrl: uploadUrl.url,
      signature: uploadUrl.signature,
      timestamp: uploadUrl.timestamp,
      cloudName: environment_1.config.CLOUDINARY_CLOUD_NAME,
      apiKey: environment_1.config.CLOUDINARY_API_KEY
    },
    message: 'Signed upload URL generated successfully'
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,