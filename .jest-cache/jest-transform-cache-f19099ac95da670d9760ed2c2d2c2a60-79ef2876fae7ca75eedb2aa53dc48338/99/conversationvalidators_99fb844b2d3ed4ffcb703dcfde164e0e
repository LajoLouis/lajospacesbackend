eaa97309e1633730005735ce063947e2
"use strict";

/* istanbul ignore next */
function cov_1w0todfos3() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\conversation.validators.ts";
  var hash = "f23395eaede383f5a7a82a4be9211e904a59098b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\conversation.validators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 440
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "6": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "7": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 140,
          column: 3
        }
      },
      "8": {
        start: {
          line: 144,
          column: 0
        },
        end: {
          line: 155,
          column: 3
        }
      },
      "9": {
        start: {
          line: 159,
          column: 0
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "10": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 175,
          column: 3
        }
      },
      "11": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 186,
          column: 3
        }
      },
      "12": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 210,
          column: 3
        }
      },
      "13": {
        start: {
          line: 214,
          column: 0
        },
        end: {
          line: 242,
          column: 3
        }
      },
      "14": {
        start: {
          line: 246,
          column: 0
        },
        end: {
          line: 283,
          column: 3
        }
      },
      "15": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "16": {
        start: {
          line: 306,
          column: 0
        },
        end: {
          line: 317,
          column: 3
        }
      },
      "17": {
        start: {
          line: 321,
          column: 0
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "18": {
        start: {
          line: 333,
          column: 0
        },
        end: {
          line: 348,
          column: 3
        }
      },
      "19": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 364,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\conversation.validators.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\conversation.validators.ts"],
      sourcesContent: ["import Joi from 'joi';\r\n\r\n/**\r\n * Create conversation validation schema\r\n */\r\nexport const createConversationSchema = Joi.object({\r\n  participantIds: Joi.array()\r\n    .items(Joi.string().pattern(/^[0-9a-fA-F]{24}$/))\r\n    .min(1)\r\n    .max(49)\r\n    .required()\r\n    .messages({\r\n      'array.min': 'At least one participant is required',\r\n      'array.max': 'Maximum 49 participants allowed',\r\n      'string.pattern.base': 'Invalid participant ID format'\r\n    }),\r\n  \r\n  conversationType: Joi.string()\r\n    .valid('direct', 'group', 'support')\r\n    .default('direct')\r\n    .messages({\r\n      'any.only': 'Conversation type must be direct, group, or support'\r\n    }),\r\n  \r\n  title: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(100)\r\n    .when('conversationType', {\r\n      is: 'group',\r\n      then: Joi.required(),\r\n      otherwise: Joi.optional()\r\n    })\r\n    .messages({\r\n      'string.min': 'Title must be at least 1 character',\r\n      'string.max': 'Title cannot exceed 100 characters',\r\n      'any.required': 'Title is required for group conversations'\r\n    }),\r\n  \r\n  description: Joi.string()\r\n    .trim()\r\n    .max(500)\r\n    .optional()\r\n    .messages({\r\n      'string.max': 'Description cannot exceed 500 characters'\r\n    }),\r\n  \r\n  matchId: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid match ID format'\r\n    }),\r\n  \r\n  propertyId: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid property ID format'\r\n    })\r\n});\r\n\r\n/**\r\n * Update conversation validation schema\r\n */\r\nexport const updateConversationSchema = Joi.object({\r\n  title: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(100)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Title must be at least 1 character',\r\n      'string.max': 'Title cannot exceed 100 characters'\r\n    }),\r\n  \r\n  description: Joi.string()\r\n    .trim()\r\n    .max(500)\r\n    .optional()\r\n    .messages({\r\n      'string.max': 'Description cannot exceed 500 characters'\r\n    }),\r\n  \r\n  avatar: Joi.string()\r\n    .uri()\r\n    .optional()\r\n    .messages({\r\n      'string.uri': 'Avatar must be a valid URL'\r\n    }),\r\n  \r\n  settings: Joi.object({\r\n    allowFileSharing: Joi.boolean().optional(),\r\n    allowLocationSharing: Joi.boolean().optional(),\r\n    allowPropertySharing: Joi.boolean().optional(),\r\n    maxParticipants: Joi.number().min(2).max(50).optional(),\r\n    autoDeleteMessages: Joi.boolean().optional(),\r\n    autoDeleteAfterDays: Joi.number().min(1).max(365).optional(),\r\n    requireApprovalForNewMembers: Joi.boolean().optional()\r\n  }).optional()\r\n});\r\n\r\n/**\r\n * Send message validation schema\r\n */\r\nexport const sendMessageSchema = Joi.object({\r\n  content: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(5000)\r\n    .required()\r\n    .messages({\r\n      'string.empty': 'Message content is required',\r\n      'string.min': 'Message must be at least 1 character',\r\n      'string.max': 'Message cannot exceed 5000 characters'\r\n    }),\r\n  \r\n  messageType: Joi.string()\r\n    .valid('text', 'image', 'file', 'location', 'property_share', 'system')\r\n    .default('text')\r\n    .messages({\r\n      'any.only': 'Invalid message type'\r\n    }),\r\n  \r\n  metadata: Joi.object({\r\n    fileName: Joi.string().trim().max(255).optional(),\r\n    fileSize: Joi.number().min(0).max(100 * 1024 * 1024).optional(), // 100MB max\r\n    fileType: Joi.string().trim().max(100).optional(),\r\n    imageUrl: Joi.string().uri().optional(),\r\n    thumbnailUrl: Joi.string().uri().optional(),\r\n    location: Joi.object({\r\n      latitude: Joi.number().min(-90).max(90).required(),\r\n      longitude: Joi.number().min(-180).max(180).required(),\r\n      address: Joi.string().trim().max(500).optional()\r\n    }).optional(),\r\n    propertyId: Joi.string().pattern(/^[0-9a-fA-F]{24}$/).optional(),\r\n    systemMessageType: Joi.string()\r\n      .valid('match_created', 'match_expired', 'user_joined', 'user_left')\r\n      .optional()\r\n  }).optional(),\r\n  \r\n  replyTo: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid reply-to message ID format'\r\n    })\r\n});\r\n\r\n/**\r\n * Edit message validation schema\r\n */\r\nexport const editMessageSchema = Joi.object({\r\n  content: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(5000)\r\n    .required()\r\n    .messages({\r\n      'string.empty': 'Message content is required',\r\n      'string.min': 'Message must be at least 1 character',\r\n      'string.max': 'Message cannot exceed 5000 characters'\r\n    })\r\n});\r\n\r\n/**\r\n * Delete message validation schema\r\n */\r\nexport const deleteMessageSchema = Joi.object({\r\n  deleteForEveryone: Joi.boolean()\r\n    .default(false)\r\n    .optional()\r\n});\r\n\r\n/**\r\n * React to message validation schema\r\n */\r\nexport const reactToMessageSchema = Joi.object({\r\n  reaction: Joi.string()\r\n    .valid('like', 'love', 'laugh', 'wow', 'sad', 'angry')\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Invalid reaction type',\r\n      'any.required': 'Reaction is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Mark messages as read validation schema\r\n */\r\nexport const markAsReadSchema = Joi.object({\r\n  messageIds: Joi.array()\r\n    .items(Joi.string().pattern(/^[0-9a-fA-F]{24}$/))\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid message ID format'\r\n    })\r\n});\r\n\r\n/**\r\n * Conversation query validation schema\r\n */\r\nexport const conversationQuerySchema = Joi.object({\r\n  page: Joi.number().min(1).default(1).optional(),\r\n  limit: Joi.number().min(1).max(100).default(20).optional(),\r\n  status: Joi.string()\r\n    .valid('active', 'archived', 'blocked', 'deleted', 'all')\r\n    .default('active')\r\n    .optional(),\r\n  conversationType: Joi.string()\r\n    .valid('direct', 'group', 'support', 'all')\r\n    .default('all')\r\n    .optional(),\r\n  search: Joi.string()\r\n    .trim()\r\n    .min(2)\r\n    .max(100)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Search query must be at least 2 characters',\r\n      'string.max': 'Search query cannot exceed 100 characters'\r\n    })\r\n});\r\n\r\n/**\r\n * Message query validation schema\r\n */\r\nexport const messageQuerySchema = Joi.object({\r\n  page: Joi.number().min(1).default(1).optional(),\r\n  limit: Joi.number().min(1).max(100).default(50).optional(),\r\n  before: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid message ID format for before parameter'\r\n    }),\r\n  after: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid message ID format for after parameter'\r\n    }),\r\n  messageType: Joi.string()\r\n    .valid('text', 'image', 'file', 'location', 'property_share', 'system', 'all')\r\n    .default('all')\r\n    .optional(),\r\n  search: Joi.string()\r\n    .trim()\r\n    .min(2)\r\n    .max(100)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Search query must be at least 2 characters',\r\n      'string.max': 'Search query cannot exceed 100 characters'\r\n    })\r\n});\r\n\r\n/**\r\n * Search messages validation schema\r\n */\r\nexport const searchMessagesSchema = Joi.object({\r\n  query: Joi.string()\r\n    .trim()\r\n    .min(2)\r\n    .max(100)\r\n    .required()\r\n    .messages({\r\n      'string.empty': 'Search query is required',\r\n      'string.min': 'Search query must be at least 2 characters',\r\n      'string.max': 'Search query cannot exceed 100 characters'\r\n    }),\r\n  \r\n  conversationId: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .optional()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid conversation ID format'\r\n    }),\r\n  \r\n  messageType: Joi.string()\r\n    .valid('text', 'image', 'file', 'location', 'property_share', 'system', 'all')\r\n    .default('all')\r\n    .optional(),\r\n  \r\n  page: Joi.number().min(1).default(1).optional(),\r\n  limit: Joi.number().min(1).max(50).default(20).optional(),\r\n  \r\n  dateFrom: Joi.date()\r\n    .iso()\r\n    .optional()\r\n    .messages({\r\n      'date.format': 'Date from must be in ISO format'\r\n    }),\r\n  \r\n  dateTo: Joi.date()\r\n    .iso()\r\n    .min(Joi.ref('dateFrom'))\r\n    .optional()\r\n    .messages({\r\n      'date.format': 'Date to must be in ISO format',\r\n      'date.min': 'Date to must be after date from'\r\n    })\r\n});\r\n\r\n/**\r\n * Mute conversation validation schema\r\n */\r\nexport const muteConversationSchema = Joi.object({\r\n  isMuted: Joi.boolean()\r\n    .required()\r\n    .messages({\r\n      'any.required': 'Mute status is required',\r\n      'boolean.base': 'Mute status must be a boolean'\r\n    }),\r\n  \r\n  mutedUntil: Joi.date()\r\n    .iso()\r\n    .min('now')\r\n    .optional()\r\n    .messages({\r\n      'date.format': 'Muted until must be in ISO format',\r\n      'date.min': 'Muted until must be in the future'\r\n    })\r\n});\r\n\r\n/**\r\n * Add participant validation schema\r\n */\r\nexport const addParticipantSchema = Joi.object({\r\n  participantIds: Joi.array()\r\n    .items(Joi.string().pattern(/^[0-9a-fA-F]{24}$/))\r\n    .min(1)\r\n    .max(10)\r\n    .required()\r\n    .messages({\r\n      'array.min': 'At least one participant is required',\r\n      'array.max': 'Maximum 10 participants can be added at once',\r\n      'string.pattern.base': 'Invalid participant ID format'\r\n    })\r\n});\r\n\r\n/**\r\n * Remove participant validation schema\r\n */\r\nexport const removeParticipantSchema = Joi.object({\r\n  participantId: Joi.string()\r\n    .pattern(/^[0-9a-fA-F]{24}$/)\r\n    .required()\r\n    .messages({\r\n      'string.pattern.base': 'Invalid participant ID format',\r\n      'any.required': 'Participant ID is required'\r\n    })\r\n});\r\n\r\n/**\r\n * File upload validation schema\r\n */\r\nexport const fileUploadSchema = Joi.object({\r\n  messageType: Joi.string()\r\n    .valid('image', 'file')\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Message type must be image or file',\r\n      'any.required': 'Message type is required'\r\n    }),\r\n  \r\n  caption: Joi.string()\r\n    .trim()\r\n    .max(500)\r\n    .optional()\r\n    .messages({\r\n      'string.max': 'Caption cannot exceed 500 characters'\r\n    })\r\n});\r\n\r\nexport default {\r\n  createConversationSchema,\r\n  updateConversationSchema,\r\n  sendMessageSchema,\r\n  editMessageSchema,\r\n  deleteMessageSchema,\r\n  reactToMessageSchema,\r\n  markAsReadSchema,\r\n  conversationQuerySchema,\r\n  messageQuerySchema,\r\n  searchMessagesSchema,\r\n  muteConversationSchema,\r\n  addParticipantSchema,\r\n  removeParticipantSchema,\r\n  fileUploadSchema\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f23395eaede383f5a7a82a4be9211e904a59098b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1w0todfos3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w0todfos3();
var __importDefault =
/* istanbul ignore next */
(cov_1w0todfos3().s[0]++,
/* istanbul ignore next */
(cov_1w0todfos3().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1w0todfos3().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1w0todfos3().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1w0todfos3().f[0]++;
  cov_1w0todfos3().s[1]++;
  return /* istanbul ignore next */(cov_1w0todfos3().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1w0todfos3().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1w0todfos3().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1w0todfos3().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1w0todfos3().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1w0todfos3().s[3]++;
exports.fileUploadSchema = exports.removeParticipantSchema = exports.addParticipantSchema = exports.muteConversationSchema = exports.searchMessagesSchema = exports.messageQuerySchema = exports.conversationQuerySchema = exports.markAsReadSchema = exports.reactToMessageSchema = exports.deleteMessageSchema = exports.editMessageSchema = exports.sendMessageSchema = exports.updateConversationSchema = exports.createConversationSchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_1w0todfos3().s[4]++, __importDefault(require("joi")));
/**
 * Create conversation validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[5]++;
exports.createConversationSchema = joi_1.default.object({
  participantIds: joi_1.default.array().items(joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/)).min(1).max(49).required().messages({
    'array.min': 'At least one participant is required',
    'array.max': 'Maximum 49 participants allowed',
    'string.pattern.base': 'Invalid participant ID format'
  }),
  conversationType: joi_1.default.string().valid('direct', 'group', 'support').default('direct').messages({
    'any.only': 'Conversation type must be direct, group, or support'
  }),
  title: joi_1.default.string().trim().min(1).max(100).when('conversationType', {
    is: 'group',
    then: joi_1.default.required(),
    otherwise: joi_1.default.optional()
  }).messages({
    'string.min': 'Title must be at least 1 character',
    'string.max': 'Title cannot exceed 100 characters',
    'any.required': 'Title is required for group conversations'
  }),
  description: joi_1.default.string().trim().max(500).optional().messages({
    'string.max': 'Description cannot exceed 500 characters'
  }),
  matchId: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid match ID format'
  }),
  propertyId: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid property ID format'
  })
});
/**
 * Update conversation validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[6]++;
exports.updateConversationSchema = joi_1.default.object({
  title: joi_1.default.string().trim().min(1).max(100).optional().messages({
    'string.min': 'Title must be at least 1 character',
    'string.max': 'Title cannot exceed 100 characters'
  }),
  description: joi_1.default.string().trim().max(500).optional().messages({
    'string.max': 'Description cannot exceed 500 characters'
  }),
  avatar: joi_1.default.string().uri().optional().messages({
    'string.uri': 'Avatar must be a valid URL'
  }),
  settings: joi_1.default.object({
    allowFileSharing: joi_1.default.boolean().optional(),
    allowLocationSharing: joi_1.default.boolean().optional(),
    allowPropertySharing: joi_1.default.boolean().optional(),
    maxParticipants: joi_1.default.number().min(2).max(50).optional(),
    autoDeleteMessages: joi_1.default.boolean().optional(),
    autoDeleteAfterDays: joi_1.default.number().min(1).max(365).optional(),
    requireApprovalForNewMembers: joi_1.default.boolean().optional()
  }).optional()
});
/**
 * Send message validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[7]++;
exports.sendMessageSchema = joi_1.default.object({
  content: joi_1.default.string().trim().min(1).max(5000).required().messages({
    'string.empty': 'Message content is required',
    'string.min': 'Message must be at least 1 character',
    'string.max': 'Message cannot exceed 5000 characters'
  }),
  messageType: joi_1.default.string().valid('text', 'image', 'file', 'location', 'property_share', 'system').default('text').messages({
    'any.only': 'Invalid message type'
  }),
  metadata: joi_1.default.object({
    fileName: joi_1.default.string().trim().max(255).optional(),
    fileSize: joi_1.default.number().min(0).max(100 * 1024 * 1024).optional(),
    // 100MB max
    fileType: joi_1.default.string().trim().max(100).optional(),
    imageUrl: joi_1.default.string().uri().optional(),
    thumbnailUrl: joi_1.default.string().uri().optional(),
    location: joi_1.default.object({
      latitude: joi_1.default.number().min(-90).max(90).required(),
      longitude: joi_1.default.number().min(-180).max(180).required(),
      address: joi_1.default.string().trim().max(500).optional()
    }).optional(),
    propertyId: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional(),
    systemMessageType: joi_1.default.string().valid('match_created', 'match_expired', 'user_joined', 'user_left').optional()
  }).optional(),
  replyTo: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid reply-to message ID format'
  })
});
/**
 * Edit message validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[8]++;
exports.editMessageSchema = joi_1.default.object({
  content: joi_1.default.string().trim().min(1).max(5000).required().messages({
    'string.empty': 'Message content is required',
    'string.min': 'Message must be at least 1 character',
    'string.max': 'Message cannot exceed 5000 characters'
  })
});
/**
 * Delete message validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[9]++;
exports.deleteMessageSchema = joi_1.default.object({
  deleteForEveryone: joi_1.default.boolean().default(false).optional()
});
/**
 * React to message validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[10]++;
exports.reactToMessageSchema = joi_1.default.object({
  reaction: joi_1.default.string().valid('like', 'love', 'laugh', 'wow', 'sad', 'angry').required().messages({
    'any.only': 'Invalid reaction type',
    'any.required': 'Reaction is required'
  })
});
/**
 * Mark messages as read validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[11]++;
exports.markAsReadSchema = joi_1.default.object({
  messageIds: joi_1.default.array().items(joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/)).optional().messages({
    'string.pattern.base': 'Invalid message ID format'
  })
});
/**
 * Conversation query validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[12]++;
exports.conversationQuerySchema = joi_1.default.object({
  page: joi_1.default.number().min(1).default(1).optional(),
  limit: joi_1.default.number().min(1).max(100).default(20).optional(),
  status: joi_1.default.string().valid('active', 'archived', 'blocked', 'deleted', 'all').default('active').optional(),
  conversationType: joi_1.default.string().valid('direct', 'group', 'support', 'all').default('all').optional(),
  search: joi_1.default.string().trim().min(2).max(100).optional().messages({
    'string.min': 'Search query must be at least 2 characters',
    'string.max': 'Search query cannot exceed 100 characters'
  })
});
/**
 * Message query validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[13]++;
exports.messageQuerySchema = joi_1.default.object({
  page: joi_1.default.number().min(1).default(1).optional(),
  limit: joi_1.default.number().min(1).max(100).default(50).optional(),
  before: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid message ID format for before parameter'
  }),
  after: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid message ID format for after parameter'
  }),
  messageType: joi_1.default.string().valid('text', 'image', 'file', 'location', 'property_share', 'system', 'all').default('all').optional(),
  search: joi_1.default.string().trim().min(2).max(100).optional().messages({
    'string.min': 'Search query must be at least 2 characters',
    'string.max': 'Search query cannot exceed 100 characters'
  })
});
/**
 * Search messages validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[14]++;
exports.searchMessagesSchema = joi_1.default.object({
  query: joi_1.default.string().trim().min(2).max(100).required().messages({
    'string.empty': 'Search query is required',
    'string.min': 'Search query must be at least 2 characters',
    'string.max': 'Search query cannot exceed 100 characters'
  }),
  conversationId: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).optional().messages({
    'string.pattern.base': 'Invalid conversation ID format'
  }),
  messageType: joi_1.default.string().valid('text', 'image', 'file', 'location', 'property_share', 'system', 'all').default('all').optional(),
  page: joi_1.default.number().min(1).default(1).optional(),
  limit: joi_1.default.number().min(1).max(50).default(20).optional(),
  dateFrom: joi_1.default.date().iso().optional().messages({
    'date.format': 'Date from must be in ISO format'
  }),
  dateTo: joi_1.default.date().iso().min(joi_1.default.ref('dateFrom')).optional().messages({
    'date.format': 'Date to must be in ISO format',
    'date.min': 'Date to must be after date from'
  })
});
/**
 * Mute conversation validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[15]++;
exports.muteConversationSchema = joi_1.default.object({
  isMuted: joi_1.default.boolean().required().messages({
    'any.required': 'Mute status is required',
    'boolean.base': 'Mute status must be a boolean'
  }),
  mutedUntil: joi_1.default.date().iso().min('now').optional().messages({
    'date.format': 'Muted until must be in ISO format',
    'date.min': 'Muted until must be in the future'
  })
});
/**
 * Add participant validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[16]++;
exports.addParticipantSchema = joi_1.default.object({
  participantIds: joi_1.default.array().items(joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/)).min(1).max(10).required().messages({
    'array.min': 'At least one participant is required',
    'array.max': 'Maximum 10 participants can be added at once',
    'string.pattern.base': 'Invalid participant ID format'
  })
});
/**
 * Remove participant validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[17]++;
exports.removeParticipantSchema = joi_1.default.object({
  participantId: joi_1.default.string().pattern(/^[0-9a-fA-F]{24}$/).required().messages({
    'string.pattern.base': 'Invalid participant ID format',
    'any.required': 'Participant ID is required'
  })
});
/**
 * File upload validation schema
 */
/* istanbul ignore next */
cov_1w0todfos3().s[18]++;
exports.fileUploadSchema = joi_1.default.object({
  messageType: joi_1.default.string().valid('image', 'file').required().messages({
    'any.only': 'Message type must be image or file',
    'any.required': 'Message type is required'
  }),
  caption: joi_1.default.string().trim().max(500).optional().messages({
    'string.max': 'Caption cannot exceed 500 characters'
  })
});
/* istanbul ignore next */
cov_1w0todfos3().s[19]++;
exports.default = {
  createConversationSchema: exports.createConversationSchema,
  updateConversationSchema: exports.updateConversationSchema,
  sendMessageSchema: exports.sendMessageSchema,
  editMessageSchema: exports.editMessageSchema,
  deleteMessageSchema: exports.deleteMessageSchema,
  reactToMessageSchema: exports.reactToMessageSchema,
  markAsReadSchema: exports.markAsReadSchema,
  conversationQuerySchema: exports.conversationQuerySchema,
  messageQuerySchema: exports.messageQuerySchema,
  searchMessagesSchema: exports.searchMessagesSchema,
  muteConversationSchema: exports.muteConversationSchema,
  addParticipantSchema: exports.addParticipantSchema,
  removeParticipantSchema: exports.removeParticipantSchema,
  fileUploadSchema: exports.fileUploadSchema
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,