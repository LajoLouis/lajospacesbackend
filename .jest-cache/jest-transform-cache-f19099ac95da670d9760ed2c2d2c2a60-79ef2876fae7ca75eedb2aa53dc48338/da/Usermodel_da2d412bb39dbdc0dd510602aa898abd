aa13e83af2085ea702af7911313e9cc7
"use strict";

/* istanbul ignore next */
function cov_1yeezh8cfg() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\models\\User.model.ts";
  var hash = "66d8f70469e42842dc8290dd5ebedb51ff9c1df1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\models\\User.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 22
        }
      },
      "39": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "40": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 41,
          column: 55
        }
      },
      "41": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 225,
          column: 2
        }
      },
      "42": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 74
        }
      },
      "43": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "44": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 205,
          column: 64
        }
      },
      "45": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 32
        }
      },
      "46": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 37
        }
      },
      "47": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 46
        }
      },
      "48": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 42
        }
      },
      "49": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 23
        }
      },
      "50": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 227,
          column: 49
        }
      },
      "51": {
        start: {
          line: 228,
          column: 0
        },
        end: {
          line: 228,
          column: 69
        }
      },
      "52": {
        start: {
          line: 229,
          column: 0
        },
        end: {
          line: 229,
          column: 37
        }
      },
      "53": {
        start: {
          line: 230,
          column: 0
        },
        end: {
          line: 230,
          column: 34
        }
      },
      "54": {
        start: {
          line: 231,
          column: 0
        },
        end: {
          line: 231,
          column: 36
        }
      },
      "55": {
        start: {
          line: 232,
          column: 0
        },
        end: {
          line: 232,
          column: 39
        }
      },
      "56": {
        start: {
          line: 234,
          column: 0
        },
        end: {
          line: 236,
          column: 3
        }
      },
      "57": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 48
        }
      },
      "58": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 240,
          column: 3
        }
      },
      "59": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 69
        }
      },
      "60": {
        start: {
          line: 242,
          column: 0
        },
        end: {
          line: 255,
          column: 3
        }
      },
      "61": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 245,
          column: 22
        }
      },
      "62": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 22
        }
      },
      "63": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "64": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "65": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 75
        }
      },
      "66": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "67": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 20
        }
      },
      "68": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 260,
          column: 3
        }
      },
      "69": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 258,
          column: 68
        }
      },
      "70": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "71": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 264,
          column: 2
        }
      },
      "72": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 72
        }
      },
      "73": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 272,
          column: 2
        }
      },
      "74": {
        start: {
          line: 267,
          column: 19
        },
        end: {
          line: 267,
          column: 36
        }
      },
      "75": {
        start: {
          line: 268,
          column: 18
        },
        end: {
          line: 268,
          column: 56
        }
      },
      "76": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 90
        }
      },
      "77": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 79
        }
      },
      "78": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 17
        }
      },
      "79": {
        start: {
          line: 274,
          column: 0
        },
        end: {
          line: 280,
          column: 2
        }
      },
      "80": {
        start: {
          line: 275,
          column: 19
        },
        end: {
          line: 275,
          column: 36
        }
      },
      "81": {
        start: {
          line: 276,
          column: 18
        },
        end: {
          line: 276,
          column: 56
        }
      },
      "82": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 86
        }
      },
      "83": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 70
        }
      },
      "84": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "85": {
        start: {
          line: 282,
          column: 0
        },
        end: {
          line: 308,
          column: 2
        }
      },
      "86": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 17
        }
      },
      "87": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 286,
          column: 20
        }
      },
      "88": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 20
        }
      },
      "89": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 288,
          column: 20
        }
      },
      "90": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 20
        }
      },
      "91": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 290,
          column: 20
        }
      },
      "92": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 20
        }
      },
      "93": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 292,
          column: 20
        }
      },
      "94": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 20
        }
      },
      "95": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 294,
          column: 20
        }
      },
      "96": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 20
        }
      },
      "97": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 297,
          column: 20
        }
      },
      "98": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 20
        }
      },
      "99": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 299,
          column: 20
        }
      },
      "100": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 20
        }
      },
      "101": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 301,
          column: 20
        }
      },
      "102": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 20
        }
      },
      "103": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 304,
          column: 20
        }
      },
      "104": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 20
        }
      },
      "105": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 306,
          column: 20
        }
      },
      "106": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 20
        }
      },
      "107": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 32
        }
      },
      "108": {
        start: {
          line: 310,
          column: 0
        },
        end: {
          line: 312,
          column: 2
        }
      },
      "109": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 48
        }
      },
      "110": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 323,
          column: 2
        }
      },
      "111": {
        start: {
          line: 315,
          column: 18
        },
        end: {
          line: 315,
          column: 28
        }
      },
      "112": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 48
        }
      },
      "113": {
        start: {
          line: 317,
          column: 14
        },
        end: {
          line: 317,
          column: 59
        }
      },
      "114": {
        start: {
          line: 318,
          column: 22
        },
        end: {
          line: 318,
          column: 61
        }
      },
      "115": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "116": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 14
        }
      },
      "117": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 15
        }
      },
      "118": {
        start: {
          line: 325,
          column: 0
        },
        end: {
          line: 325,
          column: 60
        }
      },
      "119": {
        start: {
          line: 326,
          column: 0
        },
        end: {
          line: 326,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 81,
            column: 24
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 81
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 202,
            column: 31
          },
          end: {
            line: 202,
            column: 32
          }
        },
        loc: {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 206,
            column: 21
          }
        },
        line: 202
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 216,
            column: 19
          },
          end: {
            line: 216,
            column: 20
          }
        },
        loc: {
          start: {
            line: 216,
            column: 40
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 216
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 234,
            column: 35
          },
          end: {
            line: 234,
            column: 36
          }
        },
        loc: {
          start: {
            line: 234,
            column: 47
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 234
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 238,
            column: 30
          },
          end: {
            line: 238,
            column: 31
          }
        },
        loc: {
          start: {
            line: 238,
            column: 42
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 238
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 242,
            column: 24
          }
        },
        loc: {
          start: {
            line: 242,
            column: 45
          },
          end: {
            line: 255,
            column: 1
          }
        },
        line: 242
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 257,
            column: 23
          },
          end: {
            line: 257,
            column: 24
          }
        },
        loc: {
          start: {
            line: 257,
            column: 39
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 257
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 262,
            column: 38
          }
        },
        loc: {
          start: {
            line: 262,
            column: 72
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 262
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 266,
            column: 52
          },
          end: {
            line: 266,
            column: 53
          }
        },
        loc: {
          start: {
            line: 266,
            column: 64
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 266
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 274,
            column: 48
          },
          end: {
            line: 274,
            column: 49
          }
        },
        loc: {
          start: {
            line: 274,
            column: 60
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 274
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 282,
            column: 48
          },
          end: {
            line: 282,
            column: 49
          }
        },
        loc: {
          start: {
            line: 282,
            column: 60
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 282
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 310,
            column: 33
          },
          end: {
            line: 310,
            column: 34
          }
        },
        loc: {
          start: {
            line: 310,
            column: 45
          },
          end: {
            line: 312,
            column: 1
          }
        },
        line: 310
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 314,
            column: 28
          },
          end: {
            line: 314,
            column: 29
          }
        },
        loc: {
          start: {
            line: 314,
            column: 40
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 314
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 32
          }
        }, {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 46
          }
        }],
        line: 83
      },
      "21": {
        loc: {
          start: {
            line: 203,
            column: 31
          },
          end: {
            line: 205,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 31
          },
          end: {
            line: 203,
            column: 50
          }
        }, {
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 204,
            column: 45
          }
        }, {
          start: {
            line: 204,
            column: 49
          },
          end: {
            line: 204,
            column: 65
          }
        }, {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 205,
            column: 44
          }
        }, {
          start: {
            line: 205,
            column: 48
          },
          end: {
            line: 205,
            column: 63
          }
        }],
        line: 203
      },
      "22": {
        loc: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 245,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 245,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "23": {
        loc: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 286,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 286,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "24": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 288,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 288,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "25": {
        loc: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 290,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 290,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "26": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 292,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 292,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "27": {
        loc: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 294,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 294,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "28": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 297,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 297,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "29": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 299,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 299,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "30": {
        loc: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 301,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 301,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "31": {
        loc: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 304,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 304,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "32": {
        loc: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 306,
            column: 20
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 306,
            column: 20
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "33": {
        loc: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "34": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 319,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 319,
            column: 21
          }
        }, {
          start: {
            line: 319,
            column: 26
          },
          end: {
            line: 319,
            column: 41
          }
        }, {
          start: {
            line: 319,
            column: 45
          },
          end: {
            line: 319,
            column: 82
          }
        }],
        line: 319
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\models\\User.model.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\models\\User.model.ts"],
      sourcesContent: ["import mongoose, { Document, Schema } from 'mongoose';\r\nimport bcrypt from 'bcryptjs';\r\n\r\n// User interface\r\nexport interface IUser extends Document {\r\n  // Basic Information\r\n  email: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  dateOfBirth: Date;\r\n  gender: 'male' | 'female' | 'non-binary' | 'prefer-not-to-say';\r\n  phoneNumber?: string;\r\n\r\n  // Account Status\r\n  isEmailVerified: boolean;\r\n  isPhoneVerified: boolean;\r\n  isActive: boolean;\r\n  accountType: 'seeker' | 'owner' | 'both';\r\n\r\n  // Authentication\r\n  emailVerificationToken?: string;\r\n  emailVerificationExpires?: Date;\r\n  passwordResetToken?: string;\r\n  passwordResetExpires?: Date;\r\n  refreshTokens: string[];\r\n\r\n  // Profile Completion\r\n  profileCompletionScore: number;\r\n  lastLoginAt?: Date;\r\n  lastActiveAt: Date;\r\n\r\n  // Preferences\r\n  preferences: {\r\n    emailNotifications: boolean;\r\n    pushNotifications: boolean;\r\n    smsNotifications: boolean;\r\n    marketingEmails: boolean;\r\n  };\r\n\r\n  // Location\r\n  location?: {\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n    coordinates?: {\r\n      type: 'Point';\r\n      coordinates: [number, number]; // [longitude, latitude]\r\n    };\r\n  };\r\n\r\n  // Timestamps\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n\r\n  // Methods\r\n  comparePassword(candidatePassword: string): Promise<boolean>;\r\n  generateEmailVerificationToken(): string;\r\n  generatePasswordResetToken(): string;\r\n  calculateProfileCompletion(): number;\r\n  getFullName(): string;\r\n  getAge(): number;\r\n}\r\n\r\n// User Schema\r\nconst UserSchema = new Schema<IUser>({\r\n  // Basic Information\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Email is required'],\r\n    unique: true,\r\n    lowercase: true,\r\n    trim: true,\r\n    match: [\r\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n      'Please provide a valid email address'\r\n    ],\r\n    index: true\r\n  },\r\n  \r\n  password: {\r\n    type: String,\r\n    required: [true, 'Password is required'],\r\n    minlength: [8, 'Password must be at least 8 characters long'],\r\n    select: false // Don't include password in queries by default\r\n  },\r\n  \r\n  firstName: {\r\n    type: String,\r\n    required: [true, 'First name is required'],\r\n    trim: true,\r\n    minlength: [2, 'First name must be at least 2 characters'],\r\n    maxlength: [50, 'First name cannot exceed 50 characters']\r\n  },\r\n  \r\n  lastName: {\r\n    type: String,\r\n    required: [true, 'Last name is required'],\r\n    trim: true,\r\n    minlength: [2, 'Last name must be at least 2 characters'],\r\n    maxlength: [50, 'Last name cannot exceed 50 characters']\r\n  },\r\n  \r\n  dateOfBirth: {\r\n    type: Date,\r\n    required: [true, 'Date of birth is required'],\r\n    validate: {\r\n      validator: function(value: Date) {\r\n        const age = new Date().getFullYear() - value.getFullYear();\r\n        return age >= 18 && age <= 100;\r\n      },\r\n      message: 'You must be between 18 and 100 years old'\r\n    }\r\n  },\r\n  \r\n  gender: {\r\n    type: String,\r\n    required: [true, 'Gender is required'],\r\n    enum: {\r\n      values: ['male', 'female', 'non-binary', 'prefer-not-to-say'],\r\n      message: 'Gender must be one of: male, female, non-binary, prefer-not-to-say'\r\n    }\r\n  },\r\n  \r\n  phoneNumber: {\r\n    type: String,\r\n    trim: true,\r\n    match: [/^\\+?[\\d\\s\\-\\(\\)]+$/, 'Please provide a valid phone number'],\r\n    sparse: true // Allow multiple null values\r\n  },\r\n\r\n  // Account Status\r\n  isEmailVerified: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  \r\n  isPhoneVerified: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  \r\n  isActive: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  \r\n  accountType: {\r\n    type: String,\r\n    required: [true, 'Account type is required'],\r\n    enum: {\r\n      values: ['seeker', 'owner', 'both'],\r\n      message: 'Account type must be one of: seeker, owner, both'\r\n    },\r\n    default: 'seeker'\r\n  },\r\n\r\n  // Authentication\r\n  emailVerificationToken: {\r\n    type: String,\r\n    select: false\r\n  },\r\n  \r\n  emailVerificationExpires: {\r\n    type: Date,\r\n    select: false\r\n  },\r\n  \r\n  passwordResetToken: {\r\n    type: String,\r\n    select: false\r\n  },\r\n  \r\n  passwordResetExpires: {\r\n    type: Date,\r\n    select: false\r\n  },\r\n  \r\n  refreshTokens: [{\r\n    type: String,\r\n    select: false\r\n  }],\r\n\r\n  // Profile Completion\r\n  profileCompletionScore: {\r\n    type: Number,\r\n    default: 0,\r\n    min: 0,\r\n    max: 100\r\n  },\r\n  \r\n  lastLoginAt: {\r\n    type: Date\r\n  },\r\n  \r\n  lastActiveAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n\r\n  // Preferences\r\n  preferences: {\r\n    emailNotifications: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    pushNotifications: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    smsNotifications: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    marketingEmails: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  // Location\r\n  location: {\r\n    city: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    state: {\r\n      type: String,\r\n      trim: true\r\n    },\r\n    country: {\r\n      type: String,\r\n      trim: true,\r\n      default: 'United States'\r\n    },\r\n    coordinates: {\r\n      type: {\r\n        type: String,\r\n        enum: ['Point'],\r\n        default: 'Point'\r\n      },\r\n      coordinates: {\r\n        type: [Number], // [longitude, latitude]\r\n        validate: {\r\n          validator: function(coords: number[]) {\r\n            return coords.length === 2 &&\r\n                   coords[0] >= -180 && coords[0] <= 180 && // longitude\r\n                   coords[1] >= -90 && coords[1] <= 90;     // latitude\r\n          },\r\n          message: 'Coordinates must be [longitude, latitude] with valid ranges'\r\n        }\r\n      }\r\n    }\r\n  }\r\n}, {\r\n  timestamps: true,\r\n  toJSON: { \r\n    virtuals: true,\r\n    transform: function(_doc, ret) {\r\n      delete ret.password;\r\n      delete ret.refreshTokens;\r\n      delete ret.emailVerificationToken;\r\n      delete ret.passwordResetToken;\r\n      return ret;\r\n    }\r\n  },\r\n  toObject: { virtuals: true }\r\n});\r\n\r\n// Indexes for performance\r\nUserSchema.index({ email: 1 }, { unique: true });\r\nUserSchema.index({ 'location.coordinates.coordinates': '2dsphere' });\r\nUserSchema.index({ accountType: 1 });\r\nUserSchema.index({ isActive: 1 });\r\nUserSchema.index({ createdAt: -1 });\r\nUserSchema.index({ lastActiveAt: -1 });\r\n\r\n// Virtual for full name\r\nUserSchema.virtual('fullName').get(function() {\r\n  return `${this.firstName} ${this.lastName}`;\r\n});\r\n\r\n// Virtual for age\r\nUserSchema.virtual('age').get(function() {\r\n  return new Date().getFullYear() - this.dateOfBirth.getFullYear();\r\n});\r\n\r\n// Pre-save middleware to hash password\r\nUserSchema.pre('save', async function(next) {\r\n  // Only hash password if it's modified\r\n  if (!this.isModified('password')) return next();\r\n  \r\n  try {\r\n    // Hash password with cost of 12\r\n    const salt = await bcrypt.genSalt(12);\r\n    this.password = await bcrypt.hash(this.password, salt);\r\n    next();\r\n  } catch (error) {\r\n    next(error as Error);\r\n  }\r\n});\r\n\r\n// Pre-save middleware to calculate profile completion\r\nUserSchema.pre('save', function(next) {\r\n  this.profileCompletionScore = this.calculateProfileCompletion();\r\n  next();\r\n});\r\n\r\n// Instance method to compare password\r\nUserSchema.methods.comparePassword = async function(candidatePassword: string): Promise<boolean> {\r\n  return bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\n// Instance method to generate email verification token\r\nUserSchema.methods.generateEmailVerificationToken = function(): string {\r\n  const crypto = require('crypto');\r\n  const token = crypto.randomBytes(32).toString('hex');\r\n  \r\n  this.emailVerificationToken = crypto.createHash('sha256').update(token).digest('hex');\r\n  this.emailVerificationExpires = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\r\n  \r\n  return token;\r\n};\r\n\r\n// Instance method to generate password reset token\r\nUserSchema.methods.generatePasswordResetToken = function(): string {\r\n  const crypto = require('crypto');\r\n  const token = crypto.randomBytes(32).toString('hex');\r\n  \r\n  this.passwordResetToken = crypto.createHash('sha256').update(token).digest('hex');\r\n  this.passwordResetExpires = new Date(Date.now() + 10 * 60 * 1000); // 10 minutes\r\n  \r\n  return token;\r\n};\r\n\r\n// Instance method to calculate profile completion\r\nUserSchema.methods.calculateProfileCompletion = function(): number {\r\n  let score = 0;\r\n  \r\n  // Basic required fields (10 points each)\r\n  if (this.firstName) score += 10;\r\n  if (this.lastName) score += 10;\r\n  if (this.email) score += 10;\r\n  if (this.dateOfBirth) score += 10;\r\n  if (this.gender) score += 10;\r\n  \r\n  // Optional but important fields (10 points each)\r\n  if (this.phoneNumber) score += 10;\r\n  if (this.location?.city) score += 10;\r\n  if (this.location?.state) score += 10;\r\n  \r\n  // Verification status (10 points each)\r\n  if (this.isEmailVerified) score += 10;\r\n  if (this.isPhoneVerified) score += 10;\r\n  \r\n  return Math.min(score, 100);\r\n};\r\n\r\n// Instance method to get full name\r\nUserSchema.methods.getFullName = function(): string {\r\n  return `${this.firstName} ${this.lastName}`;\r\n};\r\n\r\n// Instance method to get age\r\nUserSchema.methods.getAge = function(): number {\r\n  const today = new Date();\r\n  const birthDate = new Date(this.dateOfBirth);\r\n  let age = today.getFullYear() - birthDate.getFullYear();\r\n  const monthDiff = today.getMonth() - birthDate.getMonth();\r\n  \r\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\r\n    age--;\r\n  }\r\n  \r\n  return age;\r\n};\r\n\r\n// Export the model\r\nexport const User = mongoose.model<IUser>('User', UserSchema);\r\nexport default User;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66d8f70469e42842dc8290dd5ebedb51ff9c1df1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yeezh8cfg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yeezh8cfg();
var __createBinding =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[0]++,
/* istanbul ignore next */
(cov_1yeezh8cfg().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1yeezh8cfg().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1yeezh8cfg().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yeezh8cfg().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[0]++;
  cov_1yeezh8cfg().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[2][0]++;
    cov_1yeezh8cfg().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[5][1]++,
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[3][0]++;
    cov_1yeezh8cfg().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1yeezh8cfg().f[1]++;
        cov_1yeezh8cfg().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[3][1]++;
  }
  cov_1yeezh8cfg().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1yeezh8cfg().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[2]++;
  cov_1yeezh8cfg().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[7][0]++;
    cov_1yeezh8cfg().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[7][1]++;
  }
  cov_1yeezh8cfg().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[11]++,
/* istanbul ignore next */
(cov_1yeezh8cfg().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1yeezh8cfg().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1yeezh8cfg().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yeezh8cfg().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[3]++;
  cov_1yeezh8cfg().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1yeezh8cfg().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[4]++;
  cov_1yeezh8cfg().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[14]++,
/* istanbul ignore next */
(cov_1yeezh8cfg().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1yeezh8cfg().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1yeezh8cfg().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[5]++;
  cov_1yeezh8cfg().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().f[6]++;
    cov_1yeezh8cfg().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1yeezh8cfg().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1yeezh8cfg().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1yeezh8cfg().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1yeezh8cfg().s[17]++, []);
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1yeezh8cfg().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1yeezh8cfg().b[12][0]++;
          cov_1yeezh8cfg().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1yeezh8cfg().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().f[8]++;
    cov_1yeezh8cfg().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1yeezh8cfg().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1yeezh8cfg().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1yeezh8cfg().b[13][0]++;
      cov_1yeezh8cfg().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1yeezh8cfg().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1yeezh8cfg().s[26]++, {});
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1yeezh8cfg().b[15][0]++;
      cov_1yeezh8cfg().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1yeezh8cfg().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1yeezh8cfg().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1yeezh8cfg().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1yeezh8cfg().b[16][0]++;
          cov_1yeezh8cfg().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1yeezh8cfg().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1yeezh8cfg().b[15][1]++;
    }
    cov_1yeezh8cfg().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[35]++,
/* istanbul ignore next */
(cov_1yeezh8cfg().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1yeezh8cfg().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1yeezh8cfg().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[9]++;
  cov_1yeezh8cfg().s[36]++;
  return /* istanbul ignore next */(cov_1yeezh8cfg().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1yeezh8cfg().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[38]++;
exports.User = void 0;
const mongoose_1 =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[39]++, __importStar(require("mongoose")));
const bcryptjs_1 =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[40]++, __importDefault(require("bcryptjs")));
// User Schema
const UserSchema =
/* istanbul ignore next */
(cov_1yeezh8cfg().s[41]++, new mongoose_1.Schema({
  // Basic Information
  email: {
    type: String,
    required: [true, 'Email is required'],
    unique: true,
    lowercase: true,
    trim: true,
    match: [/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/, 'Please provide a valid email address'],
    index: true
  },
  password: {
    type: String,
    required: [true, 'Password is required'],
    minlength: [8, 'Password must be at least 8 characters long'],
    select: false // Don't include password in queries by default
  },
  firstName: {
    type: String,
    required: [true, 'First name is required'],
    trim: true,
    minlength: [2, 'First name must be at least 2 characters'],
    maxlength: [50, 'First name cannot exceed 50 characters']
  },
  lastName: {
    type: String,
    required: [true, 'Last name is required'],
    trim: true,
    minlength: [2, 'Last name must be at least 2 characters'],
    maxlength: [50, 'Last name cannot exceed 50 characters']
  },
  dateOfBirth: {
    type: Date,
    required: [true, 'Date of birth is required'],
    validate: {
      validator: function (value) {
        /* istanbul ignore next */
        cov_1yeezh8cfg().f[10]++;
        const age =
        /* istanbul ignore next */
        (cov_1yeezh8cfg().s[42]++, new Date().getFullYear() - value.getFullYear());
        /* istanbul ignore next */
        cov_1yeezh8cfg().s[43]++;
        return /* istanbul ignore next */(cov_1yeezh8cfg().b[20][0]++, age >= 18) &&
        /* istanbul ignore next */
        (cov_1yeezh8cfg().b[20][1]++, age <= 100);
      },
      message: 'You must be between 18 and 100 years old'
    }
  },
  gender: {
    type: String,
    required: [true, 'Gender is required'],
    enum: {
      values: ['male', 'female', 'non-binary', 'prefer-not-to-say'],
      message: 'Gender must be one of: male, female, non-binary, prefer-not-to-say'
    }
  },
  phoneNumber: {
    type: String,
    trim: true,
    match: [/^\+?[\d\s\-\(\)]+$/, 'Please provide a valid phone number'],
    sparse: true // Allow multiple null values
  },
  // Account Status
  isEmailVerified: {
    type: Boolean,
    default: false
  },
  isPhoneVerified: {
    type: Boolean,
    default: false
  },
  isActive: {
    type: Boolean,
    default: true
  },
  accountType: {
    type: String,
    required: [true, 'Account type is required'],
    enum: {
      values: ['seeker', 'owner', 'both'],
      message: 'Account type must be one of: seeker, owner, both'
    },
    default: 'seeker'
  },
  // Authentication
  emailVerificationToken: {
    type: String,
    select: false
  },
  emailVerificationExpires: {
    type: Date,
    select: false
  },
  passwordResetToken: {
    type: String,
    select: false
  },
  passwordResetExpires: {
    type: Date,
    select: false
  },
  refreshTokens: [{
    type: String,
    select: false
  }],
  // Profile Completion
  profileCompletionScore: {
    type: Number,
    default: 0,
    min: 0,
    max: 100
  },
  lastLoginAt: {
    type: Date
  },
  lastActiveAt: {
    type: Date,
    default: Date.now
  },
  // Preferences
  preferences: {
    emailNotifications: {
      type: Boolean,
      default: true
    },
    pushNotifications: {
      type: Boolean,
      default: true
    },
    smsNotifications: {
      type: Boolean,
      default: false
    },
    marketingEmails: {
      type: Boolean,
      default: false
    }
  },
  // Location
  location: {
    city: {
      type: String,
      trim: true
    },
    state: {
      type: String,
      trim: true
    },
    country: {
      type: String,
      trim: true,
      default: 'United States'
    },
    coordinates: {
      type: {
        type: String,
        enum: ['Point'],
        default: 'Point'
      },
      coordinates: {
        type: [Number],
        // [longitude, latitude]
        validate: {
          validator: function (coords) {
            /* istanbul ignore next */
            cov_1yeezh8cfg().f[11]++;
            cov_1yeezh8cfg().s[44]++;
            return /* istanbul ignore next */(cov_1yeezh8cfg().b[21][0]++, coords.length === 2) &&
            /* istanbul ignore next */
            (cov_1yeezh8cfg().b[21][1]++, coords[0] >= -180) &&
            /* istanbul ignore next */
            (cov_1yeezh8cfg().b[21][2]++, coords[0] <= 180) &&
            /* istanbul ignore next */
            (cov_1yeezh8cfg().b[21][3]++,
            // longitude
            coords[1] >= -90) &&
            /* istanbul ignore next */
            (cov_1yeezh8cfg().b[21][4]++, coords[1] <= 90); // latitude
          },
          message: 'Coordinates must be [longitude, latitude] with valid ranges'
        }
      }
    }
  }
}, {
  timestamps: true,
  toJSON: {
    virtuals: true,
    transform: function (_doc, ret) {
      /* istanbul ignore next */
      cov_1yeezh8cfg().f[12]++;
      cov_1yeezh8cfg().s[45]++;
      delete ret.password;
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[46]++;
      delete ret.refreshTokens;
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[47]++;
      delete ret.emailVerificationToken;
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[48]++;
      delete ret.passwordResetToken;
      /* istanbul ignore next */
      cov_1yeezh8cfg().s[49]++;
      return ret;
    }
  },
  toObject: {
    virtuals: true
  }
}));
// Indexes for performance
/* istanbul ignore next */
cov_1yeezh8cfg().s[50]++;
UserSchema.index({
  email: 1
}, {
  unique: true
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[51]++;
UserSchema.index({
  'location.coordinates.coordinates': '2dsphere'
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[52]++;
UserSchema.index({
  accountType: 1
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[53]++;
UserSchema.index({
  isActive: 1
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[54]++;
UserSchema.index({
  createdAt: -1
});
/* istanbul ignore next */
cov_1yeezh8cfg().s[55]++;
UserSchema.index({
  lastActiveAt: -1
});
// Virtual for full name
/* istanbul ignore next */
cov_1yeezh8cfg().s[56]++;
UserSchema.virtual('fullName').get(function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[13]++;
  cov_1yeezh8cfg().s[57]++;
  return `${this.firstName} ${this.lastName}`;
});
// Virtual for age
/* istanbul ignore next */
cov_1yeezh8cfg().s[58]++;
UserSchema.virtual('age').get(function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[14]++;
  cov_1yeezh8cfg().s[59]++;
  return new Date().getFullYear() - this.dateOfBirth.getFullYear();
});
// Pre-save middleware to hash password
/* istanbul ignore next */
cov_1yeezh8cfg().s[60]++;
UserSchema.pre('save', async function (next) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[15]++;
  cov_1yeezh8cfg().s[61]++;
  // Only hash password if it's modified
  if (!this.isModified('password')) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[22][0]++;
    cov_1yeezh8cfg().s[62]++;
    return next();
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[22][1]++;
  }
  cov_1yeezh8cfg().s[63]++;
  try {
    // Hash password with cost of 12
    const salt =
    /* istanbul ignore next */
    (cov_1yeezh8cfg().s[64]++, await bcryptjs_1.default.genSalt(12));
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[65]++;
    this.password = await bcryptjs_1.default.hash(this.password, salt);
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[66]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().s[67]++;
    next(error);
  }
});
// Pre-save middleware to calculate profile completion
/* istanbul ignore next */
cov_1yeezh8cfg().s[68]++;
UserSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[16]++;
  cov_1yeezh8cfg().s[69]++;
  this.profileCompletionScore = this.calculateProfileCompletion();
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[70]++;
  next();
});
// Instance method to compare password
/* istanbul ignore next */
cov_1yeezh8cfg().s[71]++;
UserSchema.methods.comparePassword = async function (candidatePassword) {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[17]++;
  cov_1yeezh8cfg().s[72]++;
  return bcryptjs_1.default.compare(candidatePassword, this.password);
};
// Instance method to generate email verification token
/* istanbul ignore next */
cov_1yeezh8cfg().s[73]++;
UserSchema.methods.generateEmailVerificationToken = function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[18]++;
  const crypto =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[74]++, require('crypto'));
  const token =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[75]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[76]++;
  this.emailVerificationToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[77]++;
  this.emailVerificationExpires = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[78]++;
  return token;
};
// Instance method to generate password reset token
/* istanbul ignore next */
cov_1yeezh8cfg().s[79]++;
UserSchema.methods.generatePasswordResetToken = function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[19]++;
  const crypto =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[80]++, require('crypto'));
  const token =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[81]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[82]++;
  this.passwordResetToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[83]++;
  this.passwordResetExpires = new Date(Date.now() + 10 * 60 * 1000); // 10 minutes
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[84]++;
  return token;
};
// Instance method to calculate profile completion
/* istanbul ignore next */
cov_1yeezh8cfg().s[85]++;
UserSchema.methods.calculateProfileCompletion = function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[20]++;
  let score =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[86]++, 0);
  // Basic required fields (10 points each)
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[87]++;
  if (this.firstName) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[23][0]++;
    cov_1yeezh8cfg().s[88]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[23][1]++;
  }
  cov_1yeezh8cfg().s[89]++;
  if (this.lastName) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[24][0]++;
    cov_1yeezh8cfg().s[90]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[24][1]++;
  }
  cov_1yeezh8cfg().s[91]++;
  if (this.email) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[25][0]++;
    cov_1yeezh8cfg().s[92]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[25][1]++;
  }
  cov_1yeezh8cfg().s[93]++;
  if (this.dateOfBirth) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[26][0]++;
    cov_1yeezh8cfg().s[94]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[26][1]++;
  }
  cov_1yeezh8cfg().s[95]++;
  if (this.gender) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[27][0]++;
    cov_1yeezh8cfg().s[96]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[27][1]++;
  }
  // Optional but important fields (10 points each)
  cov_1yeezh8cfg().s[97]++;
  if (this.phoneNumber) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[28][0]++;
    cov_1yeezh8cfg().s[98]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[28][1]++;
  }
  cov_1yeezh8cfg().s[99]++;
  if (this.location?.city) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[29][0]++;
    cov_1yeezh8cfg().s[100]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[29][1]++;
  }
  cov_1yeezh8cfg().s[101]++;
  if (this.location?.state) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[30][0]++;
    cov_1yeezh8cfg().s[102]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[30][1]++;
  }
  // Verification status (10 points each)
  cov_1yeezh8cfg().s[103]++;
  if (this.isEmailVerified) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[31][0]++;
    cov_1yeezh8cfg().s[104]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[31][1]++;
  }
  cov_1yeezh8cfg().s[105]++;
  if (this.isPhoneVerified) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[32][0]++;
    cov_1yeezh8cfg().s[106]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[32][1]++;
  }
  cov_1yeezh8cfg().s[107]++;
  return Math.min(score, 100);
};
// Instance method to get full name
/* istanbul ignore next */
cov_1yeezh8cfg().s[108]++;
UserSchema.methods.getFullName = function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[21]++;
  cov_1yeezh8cfg().s[109]++;
  return `${this.firstName} ${this.lastName}`;
};
// Instance method to get age
/* istanbul ignore next */
cov_1yeezh8cfg().s[110]++;
UserSchema.methods.getAge = function () {
  /* istanbul ignore next */
  cov_1yeezh8cfg().f[22]++;
  const today =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[111]++, new Date());
  const birthDate =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[112]++, new Date(this.dateOfBirth));
  let age =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[113]++, today.getFullYear() - birthDate.getFullYear());
  const monthDiff =
  /* istanbul ignore next */
  (cov_1yeezh8cfg().s[114]++, today.getMonth() - birthDate.getMonth());
  /* istanbul ignore next */
  cov_1yeezh8cfg().s[115]++;
  if (
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[34][0]++, monthDiff < 0) ||
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[34][1]++, monthDiff === 0) &&
  /* istanbul ignore next */
  (cov_1yeezh8cfg().b[34][2]++, today.getDate() < birthDate.getDate())) {
    /* istanbul ignore next */
    cov_1yeezh8cfg().b[33][0]++;
    cov_1yeezh8cfg().s[116]++;
    age--;
  } else
  /* istanbul ignore next */
  {
    cov_1yeezh8cfg().b[33][1]++;
  }
  cov_1yeezh8cfg().s[117]++;
  return age;
};
// Export the model
/* istanbul ignore next */
cov_1yeezh8cfg().s[118]++;
exports.User = mongoose_1.default.model('User', UserSchema);
/* istanbul ignore next */
cov_1yeezh8cfg().s[119]++;
exports.default = exports.User;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,