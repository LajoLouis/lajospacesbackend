4c5480529d3d1d97713914c353a3ae94
"use strict";

/* istanbul ignore next */
function cov_25heujrf5c() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\email.validators.ts";
  var hash = "3e8f00359a27bfaff399f80caeddd2e7642e6a28";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\email.validators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 279
        }
      },
      "4": {
        start: {
          line: 7,
          column: 14
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "5": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "6": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "7": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 77,
          column: 3
        }
      },
      "8": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "9": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 54
        }
      },
      "10": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 17
        }
      },
      "11": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 99,
          column: 3
        }
      },
      "12": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 156,
          column: 3
        }
      },
      "13": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "14": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 246,
          column: 3
        }
      },
      "15": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 33
        }
      },
      "16": {
        start: {
          line: 250,
          column: 0
        },
        end: {
          line: 284,
          column: 3
        }
      },
      "17": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 294,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 69,
            column: 10
          },
          end: {
            line: 69,
            column: 11
          }
        },
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 69
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 230,
            column: 17
          },
          end: {
            line: 230,
            column: 18
          }
        },
        loc: {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 230,
            column: 33
          }
        },
        line: 230
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 27
          }
        }, {
          start: {
            line: 71,
            column: 31
          },
          end: {
            line: 71,
            column: 51
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\email.validators.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\validators\\email.validators.ts"],
      sourcesContent: ["import Joi from 'joi';\r\n\r\n/**\r\n * Send verification email validation schema\r\n */\r\nexport const sendVerificationEmailSchema = Joi.object({\r\n  email: Joi.string()\r\n    .email()\r\n    .optional()\r\n    .messages({\r\n      'string.email': 'Please provide a valid email address'\r\n    })\r\n});\r\n\r\n/**\r\n * Send password reset email validation schema\r\n */\r\nexport const sendPasswordResetEmailSchema = Joi.object({\r\n  email: Joi.string()\r\n    .email()\r\n    .required()\r\n    .messages({\r\n      'string.email': 'Please provide a valid email address',\r\n      'any.required': 'Email is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Send custom email validation schema\r\n */\r\nexport const sendCustomEmailSchema = Joi.object({\r\n  recipientEmail: Joi.string()\r\n    .email()\r\n    .required()\r\n    .messages({\r\n      'string.email': 'Please provide a valid recipient email address',\r\n      'any.required': 'Recipient email is required'\r\n    }),\r\n  \r\n  templateType: Joi.string()\r\n    .valid(\r\n      'welcome',\r\n      'email_verification',\r\n      'password_reset',\r\n      'password_changed',\r\n      'new_message',\r\n      'new_match',\r\n      'property_posted',\r\n      'property_approved',\r\n      'system_notification',\r\n      'newsletter',\r\n      'security_alert'\r\n    )\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Invalid template type'\r\n    }),\r\n  \r\n  templateData: Joi.object()\r\n    .optional()\r\n    .default({}),\r\n  \r\n  subject: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(200)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Subject must be at least 1 character',\r\n      'string.max': 'Subject cannot exceed 200 characters'\r\n    }),\r\n  \r\n  customContent: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(50000)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Custom content must be at least 1 character',\r\n      'string.max': 'Custom content cannot exceed 50,000 characters'\r\n    })\r\n}).custom((value, helpers) => {\r\n  // Either templateType or customContent must be provided\r\n  if (!value.templateType && !value.customContent) {\r\n    return helpers.error('custom.missingContent');\r\n  }\r\n  return value;\r\n}).messages({\r\n  'custom.missingContent': 'Either templateType or customContent must be provided'\r\n});\r\n\r\n/**\r\n * Preview email template validation schema\r\n */\r\nexport const previewEmailTemplateSchema = Joi.object({\r\n  templateType: Joi.string()\r\n    .valid(\r\n      'welcome',\r\n      'email_verification',\r\n      'password_reset',\r\n      'password_changed',\r\n      'new_message',\r\n      'new_match',\r\n      'property_posted',\r\n      'property_approved',\r\n      'system_notification',\r\n      'newsletter',\r\n      'security_alert'\r\n    )\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Invalid template type',\r\n      'any.required': 'Template type is required'\r\n    }),\r\n  \r\n  templateData: Joi.object()\r\n    .optional()\r\n    .default({}),\r\n  \r\n  format: Joi.string()\r\n    .valid('html', 'text')\r\n    .default('html')\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Format must be either html or text'\r\n    })\r\n});\r\n\r\n/**\r\n * Email configuration validation schema\r\n */\r\nexport const emailConfigSchema = Joi.object({\r\n  host: Joi.string()\r\n    .hostname()\r\n    .required()\r\n    .messages({\r\n      'string.hostname': 'Please provide a valid SMTP host',\r\n      'any.required': 'SMTP host is required'\r\n    }),\r\n  \r\n  port: Joi.number()\r\n    .integer()\r\n    .min(1)\r\n    .max(65535)\r\n    .required()\r\n    .messages({\r\n      'number.integer': 'Port must be an integer',\r\n      'number.min': 'Port must be at least 1',\r\n      'number.max': 'Port cannot exceed 65535',\r\n      'any.required': 'SMTP port is required'\r\n    }),\r\n  \r\n  secure: Joi.boolean()\r\n    .default(false)\r\n    .optional(),\r\n  \r\n  user: Joi.string()\r\n    .email()\r\n    .required()\r\n    .messages({\r\n      'string.email': 'Please provide a valid email address for SMTP user',\r\n      'any.required': 'SMTP user is required'\r\n    }),\r\n  \r\n  password: Joi.string()\r\n    .min(1)\r\n    .required()\r\n    .messages({\r\n      'string.min': 'SMTP password cannot be empty',\r\n      'any.required': 'SMTP password is required'\r\n    }),\r\n  \r\n  fromName: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(100)\r\n    .default('LajoSpaces')\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'From name must be at least 1 character',\r\n      'string.max': 'From name cannot exceed 100 characters'\r\n    }),\r\n  \r\n  fromAddress: Joi.string()\r\n    .email()\r\n    .required()\r\n    .messages({\r\n      'string.email': 'Please provide a valid from email address',\r\n      'any.required': 'From email address is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Bulk email validation schema\r\n */\r\nexport const bulkEmailSchema = Joi.object({\r\n  recipients: Joi.array()\r\n    .items(\r\n      Joi.object({\r\n        email: Joi.string().email().required(),\r\n        name: Joi.string().trim().min(1).max(100).optional(),\r\n        templateData: Joi.object().optional()\r\n      })\r\n    )\r\n    .min(1)\r\n    .max(1000)\r\n    .required()\r\n    .messages({\r\n      'array.min': 'At least one recipient is required',\r\n      'array.max': 'Maximum 1000 recipients allowed',\r\n      'any.required': 'Recipients list is required'\r\n    }),\r\n  \r\n  templateType: Joi.string()\r\n    .valid(\r\n      'welcome',\r\n      'email_verification',\r\n      'password_reset',\r\n      'password_changed',\r\n      'new_message',\r\n      'new_match',\r\n      'property_posted',\r\n      'property_approved',\r\n      'system_notification',\r\n      'newsletter',\r\n      'security_alert'\r\n    )\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Invalid template type',\r\n      'any.required': 'Template type is required'\r\n    }),\r\n  \r\n  globalTemplateData: Joi.object()\r\n    .optional()\r\n    .default({}),\r\n  \r\n  subject: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .max(200)\r\n    .optional()\r\n    .messages({\r\n      'string.min': 'Subject must be at least 1 character',\r\n      'string.max': 'Subject cannot exceed 200 characters'\r\n    }),\r\n  \r\n  sendAt: Joi.date()\r\n    .iso()\r\n    .min('now')\r\n    .optional()\r\n    .messages({\r\n      'date.min': 'Send date cannot be in the past'\r\n    }),\r\n  \r\n  priority: Joi.string()\r\n    .valid('high', 'normal', 'low')\r\n    .default('normal')\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Priority must be high, normal, or low'\r\n    })\r\n});\r\n\r\n/**\r\n * Email delivery status validation schema\r\n */\r\nexport const emailDeliveryStatusSchema = Joi.object({\r\n  messageId: Joi.string()\r\n    .trim()\r\n    .min(1)\r\n    .required()\r\n    .messages({\r\n      'string.min': 'Message ID cannot be empty',\r\n      'any.required': 'Message ID is required'\r\n    }),\r\n  \r\n  status: Joi.string()\r\n    .valid('sent', 'delivered', 'bounced', 'complained', 'rejected')\r\n    .required()\r\n    .messages({\r\n      'any.only': 'Invalid delivery status',\r\n      'any.required': 'Delivery status is required'\r\n    }),\r\n  \r\n  timestamp: Joi.date()\r\n    .iso()\r\n    .default(() => new Date())\r\n    .optional(),\r\n  \r\n  errorMessage: Joi.string()\r\n    .trim()\r\n    .max(1000)\r\n    .optional()\r\n    .messages({\r\n      'string.max': 'Error message cannot exceed 1000 characters'\r\n    }),\r\n  \r\n  recipientEmail: Joi.string()\r\n    .email()\r\n    .required()\r\n    .messages({\r\n      'string.email': 'Please provide a valid recipient email',\r\n      'any.required': 'Recipient email is required'\r\n    })\r\n});\r\n\r\n/**\r\n * Email analytics query validation schema\r\n */\r\nexport const emailAnalyticsQuerySchema = Joi.object({\r\n  startDate: Joi.date()\r\n    .iso()\r\n    .optional()\r\n    .messages({\r\n      'date.base': 'Start date must be a valid date'\r\n    }),\r\n  \r\n  endDate: Joi.date()\r\n    .iso()\r\n    .min(Joi.ref('startDate'))\r\n    .optional()\r\n    .messages({\r\n      'date.base': 'End date must be a valid date',\r\n      'date.min': 'End date must be after start date'\r\n    }),\r\n  \r\n  templateType: Joi.string()\r\n    .valid(\r\n      'welcome',\r\n      'email_verification',\r\n      'password_reset',\r\n      'password_changed',\r\n      'new_message',\r\n      'new_match',\r\n      'property_posted',\r\n      'property_approved',\r\n      'system_notification',\r\n      'newsletter',\r\n      'security_alert'\r\n    )\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Invalid template type'\r\n    }),\r\n  \r\n  status: Joi.string()\r\n    .valid('sent', 'delivered', 'bounced', 'complained', 'rejected')\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Invalid status filter'\r\n    }),\r\n  \r\n  groupBy: Joi.string()\r\n    .valid('day', 'week', 'month', 'template', 'status')\r\n    .default('day')\r\n    .optional()\r\n    .messages({\r\n      'any.only': 'Group by must be day, week, month, template, or status'\r\n    })\r\n});\r\n\r\nexport default {\r\n  sendVerificationEmailSchema,\r\n  sendPasswordResetEmailSchema,\r\n  sendCustomEmailSchema,\r\n  previewEmailTemplateSchema,\r\n  emailConfigSchema,\r\n  bulkEmailSchema,\r\n  emailDeliveryStatusSchema,\r\n  emailAnalyticsQuerySchema\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e8f00359a27bfaff399f80caeddd2e7642e6a28"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25heujrf5c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25heujrf5c();
var __importDefault =
/* istanbul ignore next */
(cov_25heujrf5c().s[0]++,
/* istanbul ignore next */
(cov_25heujrf5c().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_25heujrf5c().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_25heujrf5c().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_25heujrf5c().f[0]++;
  cov_25heujrf5c().s[1]++;
  return /* istanbul ignore next */(cov_25heujrf5c().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_25heujrf5c().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_25heujrf5c().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_25heujrf5c().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_25heujrf5c().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25heujrf5c().s[3]++;
exports.emailAnalyticsQuerySchema = exports.emailDeliveryStatusSchema = exports.bulkEmailSchema = exports.emailConfigSchema = exports.previewEmailTemplateSchema = exports.sendCustomEmailSchema = exports.sendPasswordResetEmailSchema = exports.sendVerificationEmailSchema = void 0;
const joi_1 =
/* istanbul ignore next */
(cov_25heujrf5c().s[4]++, __importDefault(require("joi")));
/**
 * Send verification email validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[5]++;
exports.sendVerificationEmailSchema = joi_1.default.object({
  email: joi_1.default.string().email().optional().messages({
    'string.email': 'Please provide a valid email address'
  })
});
/**
 * Send password reset email validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[6]++;
exports.sendPasswordResetEmailSchema = joi_1.default.object({
  email: joi_1.default.string().email().required().messages({
    'string.email': 'Please provide a valid email address',
    'any.required': 'Email is required'
  })
});
/**
 * Send custom email validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[7]++;
exports.sendCustomEmailSchema = joi_1.default.object({
  recipientEmail: joi_1.default.string().email().required().messages({
    'string.email': 'Please provide a valid recipient email address',
    'any.required': 'Recipient email is required'
  }),
  templateType: joi_1.default.string().valid('welcome', 'email_verification', 'password_reset', 'password_changed', 'new_message', 'new_match', 'property_posted', 'property_approved', 'system_notification', 'newsletter', 'security_alert').optional().messages({
    'any.only': 'Invalid template type'
  }),
  templateData: joi_1.default.object().optional().default({}),
  subject: joi_1.default.string().trim().min(1).max(200).optional().messages({
    'string.min': 'Subject must be at least 1 character',
    'string.max': 'Subject cannot exceed 200 characters'
  }),
  customContent: joi_1.default.string().trim().min(1).max(50000).optional().messages({
    'string.min': 'Custom content must be at least 1 character',
    'string.max': 'Custom content cannot exceed 50,000 characters'
  })
}).custom((value, helpers) => {
  /* istanbul ignore next */
  cov_25heujrf5c().f[1]++;
  cov_25heujrf5c().s[8]++;
  // Either templateType or customContent must be provided
  if (
  /* istanbul ignore next */
  (cov_25heujrf5c().b[4][0]++, !value.templateType) &&
  /* istanbul ignore next */
  (cov_25heujrf5c().b[4][1]++, !value.customContent)) {
    /* istanbul ignore next */
    cov_25heujrf5c().b[3][0]++;
    cov_25heujrf5c().s[9]++;
    return helpers.error('custom.missingContent');
  } else
  /* istanbul ignore next */
  {
    cov_25heujrf5c().b[3][1]++;
  }
  cov_25heujrf5c().s[10]++;
  return value;
}).messages({
  'custom.missingContent': 'Either templateType or customContent must be provided'
});
/**
 * Preview email template validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[11]++;
exports.previewEmailTemplateSchema = joi_1.default.object({
  templateType: joi_1.default.string().valid('welcome', 'email_verification', 'password_reset', 'password_changed', 'new_message', 'new_match', 'property_posted', 'property_approved', 'system_notification', 'newsletter', 'security_alert').required().messages({
    'any.only': 'Invalid template type',
    'any.required': 'Template type is required'
  }),
  templateData: joi_1.default.object().optional().default({}),
  format: joi_1.default.string().valid('html', 'text').default('html').optional().messages({
    'any.only': 'Format must be either html or text'
  })
});
/**
 * Email configuration validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[12]++;
exports.emailConfigSchema = joi_1.default.object({
  host: joi_1.default.string().hostname().required().messages({
    'string.hostname': 'Please provide a valid SMTP host',
    'any.required': 'SMTP host is required'
  }),
  port: joi_1.default.number().integer().min(1).max(65535).required().messages({
    'number.integer': 'Port must be an integer',
    'number.min': 'Port must be at least 1',
    'number.max': 'Port cannot exceed 65535',
    'any.required': 'SMTP port is required'
  }),
  secure: joi_1.default.boolean().default(false).optional(),
  user: joi_1.default.string().email().required().messages({
    'string.email': 'Please provide a valid email address for SMTP user',
    'any.required': 'SMTP user is required'
  }),
  password: joi_1.default.string().min(1).required().messages({
    'string.min': 'SMTP password cannot be empty',
    'any.required': 'SMTP password is required'
  }),
  fromName: joi_1.default.string().trim().min(1).max(100).default('LajoSpaces').optional().messages({
    'string.min': 'From name must be at least 1 character',
    'string.max': 'From name cannot exceed 100 characters'
  }),
  fromAddress: joi_1.default.string().email().required().messages({
    'string.email': 'Please provide a valid from email address',
    'any.required': 'From email address is required'
  })
});
/**
 * Bulk email validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[13]++;
exports.bulkEmailSchema = joi_1.default.object({
  recipients: joi_1.default.array().items(joi_1.default.object({
    email: joi_1.default.string().email().required(),
    name: joi_1.default.string().trim().min(1).max(100).optional(),
    templateData: joi_1.default.object().optional()
  })).min(1).max(1000).required().messages({
    'array.min': 'At least one recipient is required',
    'array.max': 'Maximum 1000 recipients allowed',
    'any.required': 'Recipients list is required'
  }),
  templateType: joi_1.default.string().valid('welcome', 'email_verification', 'password_reset', 'password_changed', 'new_message', 'new_match', 'property_posted', 'property_approved', 'system_notification', 'newsletter', 'security_alert').required().messages({
    'any.only': 'Invalid template type',
    'any.required': 'Template type is required'
  }),
  globalTemplateData: joi_1.default.object().optional().default({}),
  subject: joi_1.default.string().trim().min(1).max(200).optional().messages({
    'string.min': 'Subject must be at least 1 character',
    'string.max': 'Subject cannot exceed 200 characters'
  }),
  sendAt: joi_1.default.date().iso().min('now').optional().messages({
    'date.min': 'Send date cannot be in the past'
  }),
  priority: joi_1.default.string().valid('high', 'normal', 'low').default('normal').optional().messages({
    'any.only': 'Priority must be high, normal, or low'
  })
});
/**
 * Email delivery status validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[14]++;
exports.emailDeliveryStatusSchema = joi_1.default.object({
  messageId: joi_1.default.string().trim().min(1).required().messages({
    'string.min': 'Message ID cannot be empty',
    'any.required': 'Message ID is required'
  }),
  status: joi_1.default.string().valid('sent', 'delivered', 'bounced', 'complained', 'rejected').required().messages({
    'any.only': 'Invalid delivery status',
    'any.required': 'Delivery status is required'
  }),
  timestamp: joi_1.default.date().iso().default(() => {
    /* istanbul ignore next */
    cov_25heujrf5c().f[2]++;
    cov_25heujrf5c().s[15]++;
    return new Date();
  }).optional(),
  errorMessage: joi_1.default.string().trim().max(1000).optional().messages({
    'string.max': 'Error message cannot exceed 1000 characters'
  }),
  recipientEmail: joi_1.default.string().email().required().messages({
    'string.email': 'Please provide a valid recipient email',
    'any.required': 'Recipient email is required'
  })
});
/**
 * Email analytics query validation schema
 */
/* istanbul ignore next */
cov_25heujrf5c().s[16]++;
exports.emailAnalyticsQuerySchema = joi_1.default.object({
  startDate: joi_1.default.date().iso().optional().messages({
    'date.base': 'Start date must be a valid date'
  }),
  endDate: joi_1.default.date().iso().min(joi_1.default.ref('startDate')).optional().messages({
    'date.base': 'End date must be a valid date',
    'date.min': 'End date must be after start date'
  }),
  templateType: joi_1.default.string().valid('welcome', 'email_verification', 'password_reset', 'password_changed', 'new_message', 'new_match', 'property_posted', 'property_approved', 'system_notification', 'newsletter', 'security_alert').optional().messages({
    'any.only': 'Invalid template type'
  }),
  status: joi_1.default.string().valid('sent', 'delivered', 'bounced', 'complained', 'rejected').optional().messages({
    'any.only': 'Invalid status filter'
  }),
  groupBy: joi_1.default.string().valid('day', 'week', 'month', 'template', 'status').default('day').optional().messages({
    'any.only': 'Group by must be day, week, month, template, or status'
  })
});
/* istanbul ignore next */
cov_25heujrf5c().s[17]++;
exports.default = {
  sendVerificationEmailSchema: exports.sendVerificationEmailSchema,
  sendPasswordResetEmailSchema: exports.sendPasswordResetEmailSchema,
  sendCustomEmailSchema: exports.sendCustomEmailSchema,
  previewEmailTemplateSchema: exports.previewEmailTemplateSchema,
  emailConfigSchema: exports.emailConfigSchema,
  bulkEmailSchema: exports.bulkEmailSchema,
  emailDeliveryStatusSchema: exports.emailDeliveryStatusSchema,
  emailAnalyticsQuerySchema: exports.emailAnalyticsQuerySchema
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,