57af2bbc346bfa69f404c058dffd260a
"use strict";

/* istanbul ignore next */
function cov_1zz9lj91db() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\routes\\match.routes.ts";
  var hash = "c9395f3c06d9801de962f56cdf282bbb9b50bea6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\routes\\match.routes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 18
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 27
        },
        end: {
          line: 4,
          column: 69
        }
      },
      "3": {
        start: {
          line: 5,
          column: 38
        },
        end: {
          line: 5,
          column: 91
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 56
        }
      },
      "6": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 68
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "9": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 87
        }
      },
      "10": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "11": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "12": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 133
        }
      },
      "13": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "14": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 78
        }
      },
      "15": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 168
        }
      },
      "16": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 176
        }
      },
      "17": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 57,
          column: 91
        }
      },
      "18": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 88
        }
      },
      "19": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 69,
          column: 169
        }
      },
      "20": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 174
        }
      },
      "21": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 81,
          column: 94
        }
      },
      "22": {
        start: {
          line: 82,
          column: 0
        },
        end: {
          line: 82,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 23
          }
        },
        loc: {
          start: {
            line: 11,
            column: 37
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\routes\\match.routes.ts",
      mappings: ";;AAAA,qCAAiC;AACjC,sEAKyC;AACzC,4FAQoD;AACpD,6CAAkD;AAClD,yDAA6E;AAC7E,qEAKwC;AAExC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,wBAAwB;AACxB,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;IAClC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC;AAEH,gDAAgD;AAChD,MAAM,CAAC,GAAG,CAAC,mBAAY,CAAC,CAAC;AAEzB;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,GAAG,EACH,6BAAU,CACX,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,IAAI,CACT,QAAQ,EACR,IAAA,4BAAe,EAAC,mCAAgB,EAAE,MAAM,CAAC,EACzC,6BAAU,CACX,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,UAAU,EACV,kCAAe,CAChB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,cAAc,EACd,iDAAmB,CACpB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,cAAc,EACd,IAAA,4BAAe,EAAC,0CAAuB,EAAE,MAAM,CAAC,EAChD,oDAAsB,CACvB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,IAAI,CACT,qBAAqB,EACrB,IAAA,4BAAe,EAAC,0CAAuB,EAAE,MAAM,CAAC,EAChD,oDAAsB,CACvB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,uBAAuB,EACvB,qDAAuB,CACxB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,sBAAsB,EACtB,mDAAqB,CACtB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,IAAI,CACT,4BAA4B,EAC5B,IAAA,4BAAe,EAAC,oCAAiB,EAAE,MAAM,CAAC,EAC1C,4CAAc,CACf,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,CACX,4BAA4B,EAC5B,IAAA,4BAAe,EAAC,oCAAiB,EAAE,MAAM,CAAC,EAC1C,+CAAiB,CAClB,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,GAAG,CACR,MAAM,EACN,IAAA,6BAAgB,EAAC,IAAI,CAAC,EACtB,+BAAY,CACb,CAAC;AAEF,kBAAe,MAAM,CAAC",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\routes\\match.routes.ts"],
      sourcesContent: ["import { Router } from 'express';\r\nimport {\r\n  getMatches,\r\n  swipeMatch,\r\n  getMatchHistory,\r\n  getMatchById\r\n} from '../controllers/match.controller';\r\nimport {\r\n  getMatchPreferences,\r\n  updateMatchPreferences,\r\n  toggleMatchPreferences,\r\n  updatePreferenceSection,\r\n  addDealBreaker,\r\n  removeDealBreaker,\r\n  getPreferencesSummary\r\n} from '../controllers/matchPreferences.controller';\r\nimport { authenticate } from '../middleware/auth';\r\nimport { validateRequest, validateObjectId } from '../middleware/validation';\r\nimport {\r\n  swipeMatchSchema,\r\n  updatePreferencesSchema,\r\n  togglePreferencesSchema,\r\n  dealBreakerSchema\r\n} from '../validators/match.validators';\r\n\r\nconst router = Router();\r\n\r\n// Health check (public)\r\nrouter.get('/health', (_req, res) => {\r\n  res.json({ message: 'Match routes working', timestamp: new Date().toISOString() });\r\n});\r\n\r\n// All other match routes require authentication\r\nrouter.use(authenticate);\r\n\r\n/**\r\n * @route   GET /api/matches\r\n * @desc    Get potential matches for the authenticated user\r\n * @access  Private\r\n */\r\nrouter.get(\r\n  '/',\r\n  getMatches\r\n);\r\n\r\n/**\r\n * @route   POST /api/matches/swipe\r\n * @desc    Swipe on a match (like, pass, super like)\r\n * @access  Private\r\n */\r\nrouter.post(\r\n  '/swipe',\r\n  validateRequest(swipeMatchSchema, 'body'),\r\n  swipeMatch\r\n);\r\n\r\n/**\r\n * @route   GET /api/matches/history\r\n * @desc    Get user's match history\r\n * @access  Private\r\n */\r\nrouter.get(\r\n  '/history',\r\n  getMatchHistory\r\n);\r\n\r\n/**\r\n * @route   GET /api/matches/preferences\r\n * @desc    Get user's match preferences\r\n * @access  Private\r\n */\r\nrouter.get(\r\n  '/preferences',\r\n  getMatchPreferences\r\n);\r\n\r\n/**\r\n * @route   PUT /api/matches/preferences\r\n * @desc    Update user's match preferences\r\n * @access  Private\r\n */\r\nrouter.put(\r\n  '/preferences',\r\n  validateRequest(updatePreferencesSchema, 'body'),\r\n  updateMatchPreferences\r\n);\r\n\r\n/**\r\n * @route   POST /api/matches/preferences/toggle\r\n * @desc    Toggle match preferences active status\r\n * @access  Private\r\n */\r\nrouter.post(\r\n  '/preferences/toggle',\r\n  validateRequest(togglePreferencesSchema, 'body'),\r\n  toggleMatchPreferences\r\n);\r\n\r\n/**\r\n * @route   PUT /api/matches/preferences/:section\r\n * @desc    Update specific preference section\r\n * @access  Private\r\n */\r\nrouter.put(\r\n  '/preferences/:section',\r\n  updatePreferenceSection\r\n);\r\n\r\n/**\r\n * @route   GET /api/matches/preferences/summary\r\n * @desc    Get match preferences summary/stats\r\n * @access  Private\r\n */\r\nrouter.get(\r\n  '/preferences/summary',\r\n  getPreferencesSummary\r\n);\r\n\r\n/**\r\n * @route   POST /api/matches/preferences/deal-breakers\r\n * @desc    Add a deal breaker\r\n * @access  Private\r\n */\r\nrouter.post(\r\n  '/preferences/deal-breakers',\r\n  validateRequest(dealBreakerSchema, 'body'),\r\n  addDealBreaker\r\n);\r\n\r\n/**\r\n * @route   DELETE /api/matches/preferences/deal-breakers\r\n * @desc    Remove a deal breaker\r\n * @access  Private\r\n */\r\nrouter.delete(\r\n  '/preferences/deal-breakers',\r\n  validateRequest(dealBreakerSchema, 'body'),\r\n  removeDealBreaker\r\n);\r\n\r\n/**\r\n * @route   GET /api/matches/:id\r\n * @desc    Get a specific match by ID\r\n * @access  Private\r\n */\r\nrouter.get(\r\n  '/:id',\r\n  validateObjectId('id'),\r\n  getMatchById\r\n);\r\n\r\nexport default router;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9395f3c06d9801de962f56cdf282bbb9b50bea6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zz9lj91db = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zz9lj91db();
cov_1zz9lj91db().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const express_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[1]++, require("express"));
const match_controller_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[2]++, require("../controllers/match.controller"));
const matchPreferences_controller_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[3]++, require("../controllers/matchPreferences.controller"));
const auth_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[4]++, require("../middleware/auth"));
const validation_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[5]++, require("../middleware/validation"));
const match_validators_1 =
/* istanbul ignore next */
(cov_1zz9lj91db().s[6]++, require("../validators/match.validators"));
const router =
/* istanbul ignore next */
(cov_1zz9lj91db().s[7]++, (0, express_1.Router)());
// Health check (public)
/* istanbul ignore next */
cov_1zz9lj91db().s[8]++;
router.get('/health', (_req, res) => {
  /* istanbul ignore next */
  cov_1zz9lj91db().f[0]++;
  cov_1zz9lj91db().s[9]++;
  res.json({
    message: 'Match routes working',
    timestamp: new Date().toISOString()
  });
});
// All other match routes require authentication
/* istanbul ignore next */
cov_1zz9lj91db().s[10]++;
router.use(auth_1.authenticate);
/**
 * @route   GET /api/matches
 * @desc    Get potential matches for the authenticated user
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[11]++;
router.get('/', match_controller_1.getMatches);
/**
 * @route   POST /api/matches/swipe
 * @desc    Swipe on a match (like, pass, super like)
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[12]++;
router.post('/swipe', (0, validation_1.validateRequest)(match_validators_1.swipeMatchSchema, 'body'), match_controller_1.swipeMatch);
/**
 * @route   GET /api/matches/history
 * @desc    Get user's match history
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[13]++;
router.get('/history', match_controller_1.getMatchHistory);
/**
 * @route   GET /api/matches/preferences
 * @desc    Get user's match preferences
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[14]++;
router.get('/preferences', matchPreferences_controller_1.getMatchPreferences);
/**
 * @route   PUT /api/matches/preferences
 * @desc    Update user's match preferences
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[15]++;
router.put('/preferences', (0, validation_1.validateRequest)(match_validators_1.updatePreferencesSchema, 'body'), matchPreferences_controller_1.updateMatchPreferences);
/**
 * @route   POST /api/matches/preferences/toggle
 * @desc    Toggle match preferences active status
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[16]++;
router.post('/preferences/toggle', (0, validation_1.validateRequest)(match_validators_1.togglePreferencesSchema, 'body'), matchPreferences_controller_1.toggleMatchPreferences);
/**
 * @route   PUT /api/matches/preferences/:section
 * @desc    Update specific preference section
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[17]++;
router.put('/preferences/:section', matchPreferences_controller_1.updatePreferenceSection);
/**
 * @route   GET /api/matches/preferences/summary
 * @desc    Get match preferences summary/stats
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[18]++;
router.get('/preferences/summary', matchPreferences_controller_1.getPreferencesSummary);
/**
 * @route   POST /api/matches/preferences/deal-breakers
 * @desc    Add a deal breaker
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[19]++;
router.post('/preferences/deal-breakers', (0, validation_1.validateRequest)(match_validators_1.dealBreakerSchema, 'body'), matchPreferences_controller_1.addDealBreaker);
/**
 * @route   DELETE /api/matches/preferences/deal-breakers
 * @desc    Remove a deal breaker
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[20]++;
router.delete('/preferences/deal-breakers', (0, validation_1.validateRequest)(match_validators_1.dealBreakerSchema, 'body'), matchPreferences_controller_1.removeDealBreaker);
/**
 * @route   GET /api/matches/:id
 * @desc    Get a specific match by ID
 * @access  Private
 */
/* istanbul ignore next */
cov_1zz9lj91db().s[21]++;
router.get('/:id', (0, validation_1.validateObjectId)('id'), match_controller_1.getMatchById);
/* istanbul ignore next */
cov_1zz9lj91db().s[22]++;
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,