bff63afc515aa38ed69bd87eed2e603a
"use strict";

/* istanbul ignore next */
function cov_chg74iw21() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\services\\errorTrackingService.ts";
  var hash = "f9e19ece634051d57033493cd36c747ae09d4e73";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\services\\errorTrackingService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 107
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 43
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 12,
          column: 66
        }
      },
      "5": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 35
        }
      },
      "8": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "9": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "11": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "12": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 47
        }
      },
      "13": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "14": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "15": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "16": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "17": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "18": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 43
        }
      },
      "19": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "20": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 43
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "25": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "26": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "27": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "28": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "29": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "30": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 63
        }
      },
      "31": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 66
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "33": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 68
        }
      },
      "34": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 39
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 49
        }
      },
      "36": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 80,
          column: 48
        }
      },
      "37": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 105
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "39": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "40": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "41": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "42": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "43": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 98,
          column: 74
        }
      },
      "44": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 99,
          column: 94
        }
      },
      "45": {
        start: {
          line: 99,
          column: 63
        },
        end: {
          line: 99,
          column: 93
        }
      },
      "46": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 58
        }
      },
      "47": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "48": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "49": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 97
        }
      },
      "50": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 22
        }
      },
      "51": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 102
        }
      },
      "52": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 22
        }
      },
      "53": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 103
        }
      },
      "54": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 22
        }
      },
      "55": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 100
        }
      },
      "56": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 22
        }
      },
      "57": {
        start: {
          line: 141,
          column: 27
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "58": {
        start: {
          line: 142,
          column: 39
        },
        end: {
          line: 142,
          column: 154
        }
      },
      "59": {
        start: {
          line: 142,
          column: 73
        },
        end: {
          line: 142,
          column: 146
        }
      },
      "60": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "61": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "62": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "63": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "64": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "65": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 173,
          column: 15
        }
      },
      "66": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "67": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 40
        }
      },
      "68": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "69": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 23
        }
      },
      "70": {
        start: {
          line: 196,
          column: 29
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "71": {
        start: {
          line: 204,
          column: 69
        },
        end: {
          line: 204,
          column: 86
        }
      },
      "72": {
        start: {
          line: 205,
          column: 21
        },
        end: {
          line: 205,
          column: 30
        }
      },
      "73": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "74": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 32
        }
      },
      "75": {
        start: {
          line: 209,
          column: 13
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "76": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "77": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "78": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 68
        }
      },
      "79": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 91
        }
      },
      "80": {
        start: {
          line: 225,
          column: 62
        },
        end: {
          line: 225,
          column: 89
        }
      },
      "81": {
        start: {
          line: 229,
          column: 0
        },
        end: {
          line: 229,
          column: 58
        }
      },
      "82": {
        start: {
          line: 231,
          column: 0
        },
        end: {
          line: 250,
          column: 2
        }
      },
      "83": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 114
        }
      },
      "84": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 113
        }
      },
      "85": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 109
        }
      },
      "86": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 108
        }
      },
      "87": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 112
        }
      },
      "88": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 118
        }
      },
      "89": {
        start: {
          line: 251,
          column: 0
        },
        end: {
          line: 251,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 1
          },
          end: {
            line: 7,
            column: 2
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 1
          },
          end: {
            line: 14,
            column: 2
          }
        },
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 102
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 54
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 76
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 25
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 97
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 99,
            column: 54
          },
          end: {
            line: 99,
            column: 55
          }
        },
        loc: {
          start: {
            line: 99,
            column: 63
          },
          end: {
            line: 99,
            column: 93
          }
        },
        line: 99
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 49
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 105
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 38
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 142,
            column: 64
          },
          end: {
            line: 142,
            column: 65
          }
        },
        loc: {
          start: {
            line: 142,
            column: 73
          },
          end: {
            line: 142,
            column: 146
          }
        },
        line: 142
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 51
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 161
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 17
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 179
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 186
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 46
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 194
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 21
          }
        },
        loc: {
          start: {
            line: 196,
            column: 29
          },
          end: {
            line: 196,
            column: 56
          }
        },
        line: 196
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 203
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 14
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 223
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 225,
            column: 53
          },
          end: {
            line: 225,
            column: 54
          }
        },
        loc: {
          start: {
            line: 225,
            column: 62
          },
          end: {
            line: 225,
            column: 89
          }
        },
        line: 225
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 232,
            column: 21
          }
        },
        loc: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 232
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 235,
            column: 19
          },
          end: {
            line: 235,
            column: 20
          }
        },
        loc: {
          start: {
            line: 235,
            column: 44
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 235
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        loc: {
          start: {
            line: 238,
            column: 41
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 238
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 241,
            column: 14
          },
          end: {
            line: 241,
            column: 15
          }
        },
        loc: {
          start: {
            line: 241,
            column: 39
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 241
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 244,
            column: 14
          },
          end: {
            line: 244,
            column: 15
          }
        },
        loc: {
          start: {
            line: 244,
            column: 39
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 244
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 247,
            column: 22
          }
        },
        loc: {
          start: {
            line: 247,
            column: 46
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 247
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 3
          },
          end: {
            line: 12,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 3
          },
          end: {
            line: 12,
            column: 16
          }
        }, {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 63
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 16
          }
        }, {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 63
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 22
          },
          end: {
            line: 44,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 34
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 44,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 67
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 44,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 80
          },
          end: {
            line: 44,
            column: 100
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 52
          }
        }, {
          start: {
            line: 50,
            column: 56
          },
          end: {
            line: 50,
            column: 63
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 81,
            column: 94
          }
        }, {
          start: {
            line: 81,
            column: 98
          },
          end: {
            line: 81,
            column: 99
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 17
          },
          end: {
            line: 85,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 17
          },
          end: {
            line: 85,
            column: 69
          }
        }, {
          start: {
            line: 85,
            column: 73
          },
          end: {
            line: 85,
            column: 74
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 22
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 22
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 22
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 133,
            column: 22
          }
        }],
        line: 121
      },
      "12": {
        loc: {
          start: {
            line: 142,
            column: 73
          },
          end: {
            line: 142,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 73
          },
          end: {
            line: 142,
            column: 101
          }
        }, {
          start: {
            line: 142,
            column: 105
          },
          end: {
            line: 142,
            column: 146
          }
        }],
        line: 142
      },
      "13": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "16": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 47
          }
        }, {
          start: {
            line: 164,
            column: 51
          },
          end: {
            line: 164,
            column: 86
          }
        }],
        line: 164
      },
      "17": {
        loc: {
          start: {
            line: 186,
            column: 20
          },
          end: {
            line: 186,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 30
          }
        }],
        line: 186
      },
      "18": {
        loc: {
          start: {
            line: 194,
            column: 34
          },
          end: {
            line: 194,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 194,
            column: 42
          },
          end: {
            line: 194,
            column: 44
          }
        }],
        line: 194
      },
      "19": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: 209,
            column: 13
          },
          end: {
            line: 211,
            column: 9
          }
        }],
        line: 206
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 206,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 206,
            column: 30
          }
        }, {
          start: {
            line: 206,
            column: 34
          },
          end: {
            line: 206,
            column: 48
          }
        }],
        line: 206
      },
      "21": {
        loc: {
          start: {
            line: 209,
            column: 13
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 13
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "22": {
        loc: {
          start: {
            line: 232,
            column: 28
          },
          end: {
            line: 232,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 232,
            column: 38
          },
          end: {
            line: 232,
            column: 40
          }
        }],
        line: 232
      },
      "23": {
        loc: {
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 37
          },
          end: {
            line: 235,
            column: 39
          }
        }],
        line: 235
      },
      "24": {
        loc: {
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 238,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 34
          },
          end: {
            line: 238,
            column: 36
          }
        }],
        line: 238
      },
      "25": {
        loc: {
          start: {
            line: 241,
            column: 22
          },
          end: {
            line: 241,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 32
          },
          end: {
            line: 241,
            column: 34
          }
        }],
        line: 241
      },
      "26": {
        loc: {
          start: {
            line: 244,
            column: 22
          },
          end: {
            line: 244,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 34
          }
        }],
        line: 244
      },
      "27": {
        loc: {
          start: {
            line: 247,
            column: 29
          },
          end: {
            line: 247,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 247,
            column: 39
          },
          end: {
            line: 247,
            column: 41
          }
        }],
        line: 247
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\services\\errorTrackingService.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\services\\errorTrackingService.ts"],
      sourcesContent: ["import { logger } from '../utils/logger';\r\nimport { config } from '../config/environment';\r\n\r\n/**\r\n * Error Tracking Service for LajoSpaces Backend\r\n * Provides comprehensive error tracking, categorization, and alerting\r\n */\r\n\r\nexport interface ErrorContext {\r\n  userId?: string;\r\n  requestId?: string;\r\n  endpoint?: string;\r\n  method?: string;\r\n  ip?: string;\r\n  userAgent?: string;\r\n  timestamp?: string;\r\n  environment?: string;\r\n  version?: string;\r\n  additionalData?: any;\r\n}\r\n\r\nexport interface ErrorMetrics {\r\n  errorCount: number;\r\n  errorRate: number;\r\n  lastError: Date;\r\n  errorsByType: Record<string, number>;\r\n  errorsByEndpoint: Record<string, number>;\r\n  criticalErrors: number;\r\n}\r\n\r\nexport enum ErrorSeverity {\r\n  LOW = 'low',\r\n  MEDIUM = 'medium',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\nexport enum ErrorCategory {\r\n  AUTHENTICATION = 'authentication',\r\n  AUTHORIZATION = 'authorization',\r\n  VALIDATION = 'validation',\r\n  DATABASE = 'database',\r\n  EXTERNAL_SERVICE = 'external_service',\r\n  NETWORK = 'network',\r\n  SYSTEM = 'system',\r\n  BUSINESS_LOGIC = 'business_logic',\r\n  SECURITY = 'security',\r\n  PERFORMANCE = 'performance'\r\n}\r\n\r\nclass ErrorTrackingService {\r\n  private errorMetrics: ErrorMetrics = {\r\n    errorCount: 0,\r\n    errorRate: 0,\r\n    lastError: new Date(),\r\n    errorsByType: {},\r\n    errorsByEndpoint: {},\r\n    criticalErrors: 0\r\n  };\r\n\r\n  private errorHistory: Array<{\r\n    error: Error;\r\n    context: ErrorContext;\r\n    severity: ErrorSeverity;\r\n    category: ErrorCategory;\r\n    timestamp: Date;\r\n  }> = [];\r\n\r\n  private readonly MAX_HISTORY_SIZE = 1000;\r\n  private readonly CRITICAL_ERROR_THRESHOLD = 10; // per hour\r\n  private readonly ERROR_RATE_WINDOW = 60 * 1000; // 1 minute\r\n\r\n  /**\r\n   * Track an error with context and categorization\r\n   */\r\n  trackError(\r\n    error: Error,\r\n    context: ErrorContext = {},\r\n    severity: ErrorSeverity = ErrorSeverity.MEDIUM,\r\n    category: ErrorCategory = ErrorCategory.SYSTEM\r\n  ): void {\r\n    const timestamp = new Date();\r\n    const enhancedContext: ErrorContext = {\r\n      ...context,\r\n      timestamp: timestamp.toISOString(),\r\n      environment: config.NODE_ENV,\r\n      version: process.env.npm_package_version || '1.0.0'\r\n    };\r\n\r\n    // Add to history\r\n    this.errorHistory.push({\r\n      error,\r\n      context: enhancedContext,\r\n      severity,\r\n      category,\r\n      timestamp\r\n    });\r\n\r\n    // Maintain history size\r\n    if (this.errorHistory.length > this.MAX_HISTORY_SIZE) {\r\n      this.errorHistory.shift();\r\n    }\r\n\r\n    // Update metrics\r\n    this.updateMetrics(error, context, severity, category);\r\n\r\n    // Log the error\r\n    this.logError(error, enhancedContext, severity, category);\r\n\r\n    // Check for critical conditions\r\n    this.checkCriticalConditions(severity);\r\n\r\n    // Send alerts if necessary\r\n    this.sendAlerts(error, enhancedContext, severity, category);\r\n  }\r\n\r\n  /**\r\n   * Update error metrics\r\n   */\r\n  private updateMetrics(\r\n    error: Error,\r\n    context: ErrorContext,\r\n    severity: ErrorSeverity,\r\n    category: ErrorCategory\r\n  ): void {\r\n    this.errorMetrics.errorCount++;\r\n    this.errorMetrics.lastError = new Date();\r\n\r\n    // Count by type\r\n    const errorType = error.constructor.name;\r\n    this.errorMetrics.errorsByType[errorType] = (this.errorMetrics.errorsByType[errorType] || 0) + 1;\r\n\r\n    // Count by endpoint\r\n    if (context.endpoint) {\r\n      this.errorMetrics.errorsByEndpoint[context.endpoint] = \r\n        (this.errorMetrics.errorsByEndpoint[context.endpoint] || 0) + 1;\r\n    }\r\n\r\n    // Count critical errors\r\n    if (severity === ErrorSeverity.CRITICAL) {\r\n      this.errorMetrics.criticalErrors++;\r\n    }\r\n\r\n    // Calculate error rate\r\n    this.calculateErrorRate();\r\n  }\r\n\r\n  /**\r\n   * Calculate error rate per minute\r\n   */\r\n  private calculateErrorRate(): void {\r\n    const oneMinuteAgo = new Date(Date.now() - this.ERROR_RATE_WINDOW);\r\n    const recentErrors = this.errorHistory.filter(\r\n      entry => entry.timestamp > oneMinuteAgo\r\n    );\r\n    this.errorMetrics.errorRate = recentErrors.length;\r\n  }\r\n\r\n  /**\r\n   * Log error with appropriate level\r\n   */\r\n  private logError(\r\n    error: Error,\r\n    context: ErrorContext,\r\n    severity: ErrorSeverity,\r\n    category: ErrorCategory\r\n  ): void {\r\n    const logData = {\r\n      error: {\r\n        name: error.name,\r\n        message: error.message,\r\n        stack: error.stack\r\n      },\r\n      context,\r\n      severity,\r\n      category,\r\n      metrics: {\r\n        totalErrors: this.errorMetrics.errorCount,\r\n        errorRate: this.errorMetrics.errorRate,\r\n        criticalErrors: this.errorMetrics.criticalErrors\r\n      }\r\n    };\r\n\r\n    switch (severity) {\r\n      case ErrorSeverity.CRITICAL:\r\n        logger.error(`CRITICAL ERROR [${category}]: ${error.message}`, logData);\r\n        break;\r\n      case ErrorSeverity.HIGH:\r\n        logger.error(`HIGH SEVERITY ERROR [${category}]: ${error.message}`, logData);\r\n        break;\r\n      case ErrorSeverity.MEDIUM:\r\n        logger.warn(`MEDIUM SEVERITY ERROR [${category}]: ${error.message}`, logData);\r\n        break;\r\n      case ErrorSeverity.LOW:\r\n        logger.info(`LOW SEVERITY ERROR [${category}]: ${error.message}`, logData);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check for critical error conditions\r\n   */\r\n  private checkCriticalConditions(severity: ErrorSeverity): void {\r\n    // Check critical error threshold\r\n    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);\r\n    const criticalErrorsLastHour = this.errorHistory.filter(\r\n      entry => entry.timestamp > oneHourAgo && entry.severity === ErrorSeverity.CRITICAL\r\n    ).length;\r\n\r\n    if (criticalErrorsLastHour >= this.CRITICAL_ERROR_THRESHOLD) {\r\n      logger.error('ALERT: Critical error threshold exceeded', {\r\n        criticalErrorsLastHour,\r\n        threshold: this.CRITICAL_ERROR_THRESHOLD,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n    // Check error rate spike\r\n    if (this.errorMetrics.errorRate > 50) { // More than 50 errors per minute\r\n      logger.error('ALERT: High error rate detected', {\r\n        errorRate: this.errorMetrics.errorRate,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send alerts for critical errors\r\n   */\r\n  private sendAlerts(\r\n    error: Error,\r\n    context: ErrorContext,\r\n    severity: ErrorSeverity,\r\n    category: ErrorCategory\r\n  ): void {\r\n    // In production, this would integrate with alerting services\r\n    // For now, we'll use enhanced logging\r\n    if (severity === ErrorSeverity.CRITICAL || category === ErrorCategory.SECURITY) {\r\n      logger.error('ALERT TRIGGERED', {\r\n        alertType: 'critical_error',\r\n        error: error.message,\r\n        severity,\r\n        category,\r\n        context,\r\n        timestamp: new Date().toISOString(),\r\n        requiresImmediateAttention: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get error metrics\r\n   */\r\n  getMetrics(): ErrorMetrics {\r\n    this.calculateErrorRate();\r\n    return { ...this.errorMetrics };\r\n  }\r\n\r\n  /**\r\n   * Get recent errors\r\n   */\r\n  getRecentErrors(limit: number = 50): Array<{\r\n    error: Error;\r\n    context: ErrorContext;\r\n    severity: ErrorSeverity;\r\n    category: ErrorCategory;\r\n    timestamp: Date;\r\n  }> {\r\n    return this.errorHistory\r\n      .slice(-limit)\r\n      .reverse(); // Most recent first\r\n  }\r\n\r\n  /**\r\n   * Get errors by category\r\n   */\r\n  getErrorsByCategory(category: ErrorCategory, limit: number = 20): Array<any> {\r\n    return this.errorHistory\r\n      .filter(entry => entry.category === category)\r\n      .slice(-limit)\r\n      .reverse();\r\n  }\r\n\r\n  /**\r\n   * Get error summary for health checks\r\n   */\r\n  getHealthSummary(): {\r\n    status: 'healthy' | 'warning' | 'critical';\r\n    errorCount: number;\r\n    errorRate: number;\r\n    criticalErrors: number;\r\n    lastError: Date;\r\n  } {\r\n    const { errorCount, errorRate, criticalErrors, lastError } = this.errorMetrics;\r\n    \r\n    let status: 'healthy' | 'warning' | 'critical' = 'healthy';\r\n    \r\n    if (criticalErrors > 0 || errorRate > 50) {\r\n      status = 'critical';\r\n    } else if (errorRate > 20) {\r\n      status = 'warning';\r\n    }\r\n\r\n    return {\r\n      status,\r\n      errorCount,\r\n      errorRate,\r\n      criticalErrors,\r\n      lastError\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clear old error history (cleanup)\r\n   */\r\n  cleanup(): void {\r\n    const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\r\n    this.errorHistory = this.errorHistory.filter(\r\n      entry => entry.timestamp > oneDayAgo\r\n    );\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const errorTrackingService = new ErrorTrackingService();\r\n\r\n// Helper functions for common error scenarios\r\nexport const trackError = {\r\n  authentication: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.HIGH,\r\n      ErrorCategory.AUTHENTICATION\r\n    );\r\n  },\r\n\r\n  authorization: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.HIGH,\r\n      ErrorCategory.AUTHORIZATION\r\n    );\r\n  },\r\n\r\n  validation: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.LOW,\r\n      ErrorCategory.VALIDATION\r\n    );\r\n  },\r\n\r\n  database: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.HIGH,\r\n      ErrorCategory.DATABASE\r\n    );\r\n  },\r\n\r\n  security: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.CRITICAL,\r\n      ErrorCategory.SECURITY\r\n    );\r\n  },\r\n\r\n  externalService: (error: Error, context: ErrorContext = {}) => {\r\n    errorTrackingService.trackError(\r\n      error,\r\n      context,\r\n      ErrorSeverity.MEDIUM,\r\n      ErrorCategory.EXTERNAL_SERVICE\r\n    );\r\n  }\r\n};\r\n\r\nexport default errorTrackingService;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9e19ece634051d57033493cd36c747ae09d4e73"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_chg74iw21 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_chg74iw21();
cov_chg74iw21().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_chg74iw21().s[1]++;
exports.trackError = exports.errorTrackingService = exports.ErrorCategory = exports.ErrorSeverity = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_chg74iw21().s[2]++, require("../utils/logger"));
const environment_1 =
/* istanbul ignore next */
(cov_chg74iw21().s[3]++, require("../config/environment"));
var ErrorSeverity;
/* istanbul ignore next */
cov_chg74iw21().s[4]++;
(function (ErrorSeverity) {
  /* istanbul ignore next */
  cov_chg74iw21().f[0]++;
  cov_chg74iw21().s[5]++;
  ErrorSeverity["LOW"] = "low";
  /* istanbul ignore next */
  cov_chg74iw21().s[6]++;
  ErrorSeverity["MEDIUM"] = "medium";
  /* istanbul ignore next */
  cov_chg74iw21().s[7]++;
  ErrorSeverity["HIGH"] = "high";
  /* istanbul ignore next */
  cov_chg74iw21().s[8]++;
  ErrorSeverity["CRITICAL"] = "critical";
})(
/* istanbul ignore next */
(cov_chg74iw21().b[0][0]++, ErrorSeverity) ||
/* istanbul ignore next */
(cov_chg74iw21().b[0][1]++, exports.ErrorSeverity = ErrorSeverity = {}));
var ErrorCategory;
/* istanbul ignore next */
cov_chg74iw21().s[9]++;
(function (ErrorCategory) {
  /* istanbul ignore next */
  cov_chg74iw21().f[1]++;
  cov_chg74iw21().s[10]++;
  ErrorCategory["AUTHENTICATION"] = "authentication";
  /* istanbul ignore next */
  cov_chg74iw21().s[11]++;
  ErrorCategory["AUTHORIZATION"] = "authorization";
  /* istanbul ignore next */
  cov_chg74iw21().s[12]++;
  ErrorCategory["VALIDATION"] = "validation";
  /* istanbul ignore next */
  cov_chg74iw21().s[13]++;
  ErrorCategory["DATABASE"] = "database";
  /* istanbul ignore next */
  cov_chg74iw21().s[14]++;
  ErrorCategory["EXTERNAL_SERVICE"] = "external_service";
  /* istanbul ignore next */
  cov_chg74iw21().s[15]++;
  ErrorCategory["NETWORK"] = "network";
  /* istanbul ignore next */
  cov_chg74iw21().s[16]++;
  ErrorCategory["SYSTEM"] = "system";
  /* istanbul ignore next */
  cov_chg74iw21().s[17]++;
  ErrorCategory["BUSINESS_LOGIC"] = "business_logic";
  /* istanbul ignore next */
  cov_chg74iw21().s[18]++;
  ErrorCategory["SECURITY"] = "security";
  /* istanbul ignore next */
  cov_chg74iw21().s[19]++;
  ErrorCategory["PERFORMANCE"] = "performance";
})(
/* istanbul ignore next */
(cov_chg74iw21().b[1][0]++, ErrorCategory) ||
/* istanbul ignore next */
(cov_chg74iw21().b[1][1]++, exports.ErrorCategory = ErrorCategory = {}));
class ErrorTrackingService {
  constructor() {
    /* istanbul ignore next */
    cov_chg74iw21().f[2]++;
    cov_chg74iw21().s[20]++;
    this.errorMetrics = {
      errorCount: 0,
      errorRate: 0,
      lastError: new Date(),
      errorsByType: {},
      errorsByEndpoint: {},
      criticalErrors: 0
    };
    /* istanbul ignore next */
    cov_chg74iw21().s[21]++;
    this.errorHistory = [];
    /* istanbul ignore next */
    cov_chg74iw21().s[22]++;
    this.MAX_HISTORY_SIZE = 1000;
    /* istanbul ignore next */
    cov_chg74iw21().s[23]++;
    this.CRITICAL_ERROR_THRESHOLD = 10; // per hour
    /* istanbul ignore next */
    cov_chg74iw21().s[24]++;
    this.ERROR_RATE_WINDOW = 60 * 1000; // 1 minute
  }
  /**
   * Track an error with context and categorization
   */
  trackError(error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[2][0]++, {}), severity =
  /* istanbul ignore next */
  (cov_chg74iw21().b[3][0]++, ErrorSeverity.MEDIUM), category =
  /* istanbul ignore next */
  (cov_chg74iw21().b[4][0]++, ErrorCategory.SYSTEM)) {
    /* istanbul ignore next */
    cov_chg74iw21().f[3]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_chg74iw21().s[25]++, new Date());
    const enhancedContext =
    /* istanbul ignore next */
    (cov_chg74iw21().s[26]++, {
      ...context,
      timestamp: timestamp.toISOString(),
      environment: environment_1.config.NODE_ENV,
      version:
      /* istanbul ignore next */
      (cov_chg74iw21().b[5][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_chg74iw21().b[5][1]++, '1.0.0')
    });
    // Add to history
    /* istanbul ignore next */
    cov_chg74iw21().s[27]++;
    this.errorHistory.push({
      error,
      context: enhancedContext,
      severity,
      category,
      timestamp
    });
    // Maintain history size
    /* istanbul ignore next */
    cov_chg74iw21().s[28]++;
    if (this.errorHistory.length > this.MAX_HISTORY_SIZE) {
      /* istanbul ignore next */
      cov_chg74iw21().b[6][0]++;
      cov_chg74iw21().s[29]++;
      this.errorHistory.shift();
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[6][1]++;
    }
    // Update metrics
    cov_chg74iw21().s[30]++;
    this.updateMetrics(error, context, severity, category);
    // Log the error
    /* istanbul ignore next */
    cov_chg74iw21().s[31]++;
    this.logError(error, enhancedContext, severity, category);
    // Check for critical conditions
    /* istanbul ignore next */
    cov_chg74iw21().s[32]++;
    this.checkCriticalConditions(severity);
    // Send alerts if necessary
    /* istanbul ignore next */
    cov_chg74iw21().s[33]++;
    this.sendAlerts(error, enhancedContext, severity, category);
  }
  /**
   * Update error metrics
   */
  updateMetrics(error, context, severity, category) {
    /* istanbul ignore next */
    cov_chg74iw21().f[4]++;
    cov_chg74iw21().s[34]++;
    this.errorMetrics.errorCount++;
    /* istanbul ignore next */
    cov_chg74iw21().s[35]++;
    this.errorMetrics.lastError = new Date();
    // Count by type
    const errorType =
    /* istanbul ignore next */
    (cov_chg74iw21().s[36]++, error.constructor.name);
    /* istanbul ignore next */
    cov_chg74iw21().s[37]++;
    this.errorMetrics.errorsByType[errorType] = (
    /* istanbul ignore next */
    (cov_chg74iw21().b[7][0]++, this.errorMetrics.errorsByType[errorType]) ||
    /* istanbul ignore next */
    (cov_chg74iw21().b[7][1]++, 0)) + 1;
    // Count by endpoint
    /* istanbul ignore next */
    cov_chg74iw21().s[38]++;
    if (context.endpoint) {
      /* istanbul ignore next */
      cov_chg74iw21().b[8][0]++;
      cov_chg74iw21().s[39]++;
      this.errorMetrics.errorsByEndpoint[context.endpoint] = (
      /* istanbul ignore next */
      (cov_chg74iw21().b[9][0]++, this.errorMetrics.errorsByEndpoint[context.endpoint]) ||
      /* istanbul ignore next */
      (cov_chg74iw21().b[9][1]++, 0)) + 1;
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[8][1]++;
    }
    // Count critical errors
    cov_chg74iw21().s[40]++;
    if (severity === ErrorSeverity.CRITICAL) {
      /* istanbul ignore next */
      cov_chg74iw21().b[10][0]++;
      cov_chg74iw21().s[41]++;
      this.errorMetrics.criticalErrors++;
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[10][1]++;
    }
    // Calculate error rate
    cov_chg74iw21().s[42]++;
    this.calculateErrorRate();
  }
  /**
   * Calculate error rate per minute
   */
  calculateErrorRate() {
    /* istanbul ignore next */
    cov_chg74iw21().f[5]++;
    const oneMinuteAgo =
    /* istanbul ignore next */
    (cov_chg74iw21().s[43]++, new Date(Date.now() - this.ERROR_RATE_WINDOW));
    const recentErrors =
    /* istanbul ignore next */
    (cov_chg74iw21().s[44]++, this.errorHistory.filter(entry => {
      /* istanbul ignore next */
      cov_chg74iw21().f[6]++;
      cov_chg74iw21().s[45]++;
      return entry.timestamp > oneMinuteAgo;
    }));
    /* istanbul ignore next */
    cov_chg74iw21().s[46]++;
    this.errorMetrics.errorRate = recentErrors.length;
  }
  /**
   * Log error with appropriate level
   */
  logError(error, context, severity, category) {
    /* istanbul ignore next */
    cov_chg74iw21().f[7]++;
    const logData =
    /* istanbul ignore next */
    (cov_chg74iw21().s[47]++, {
      error: {
        name: error.name,
        message: error.message,
        stack: error.stack
      },
      context,
      severity,
      category,
      metrics: {
        totalErrors: this.errorMetrics.errorCount,
        errorRate: this.errorMetrics.errorRate,
        criticalErrors: this.errorMetrics.criticalErrors
      }
    });
    /* istanbul ignore next */
    cov_chg74iw21().s[48]++;
    switch (severity) {
      case ErrorSeverity.CRITICAL:
        /* istanbul ignore next */
        cov_chg74iw21().b[11][0]++;
        cov_chg74iw21().s[49]++;
        logger_1.logger.error(`CRITICAL ERROR [${category}]: ${error.message}`, logData);
        /* istanbul ignore next */
        cov_chg74iw21().s[50]++;
        break;
      case ErrorSeverity.HIGH:
        /* istanbul ignore next */
        cov_chg74iw21().b[11][1]++;
        cov_chg74iw21().s[51]++;
        logger_1.logger.error(`HIGH SEVERITY ERROR [${category}]: ${error.message}`, logData);
        /* istanbul ignore next */
        cov_chg74iw21().s[52]++;
        break;
      case ErrorSeverity.MEDIUM:
        /* istanbul ignore next */
        cov_chg74iw21().b[11][2]++;
        cov_chg74iw21().s[53]++;
        logger_1.logger.warn(`MEDIUM SEVERITY ERROR [${category}]: ${error.message}`, logData);
        /* istanbul ignore next */
        cov_chg74iw21().s[54]++;
        break;
      case ErrorSeverity.LOW:
        /* istanbul ignore next */
        cov_chg74iw21().b[11][3]++;
        cov_chg74iw21().s[55]++;
        logger_1.logger.info(`LOW SEVERITY ERROR [${category}]: ${error.message}`, logData);
        /* istanbul ignore next */
        cov_chg74iw21().s[56]++;
        break;
    }
  }
  /**
   * Check for critical error conditions
   */
  checkCriticalConditions(severity) {
    /* istanbul ignore next */
    cov_chg74iw21().f[8]++;
    // Check critical error threshold
    const oneHourAgo =
    /* istanbul ignore next */
    (cov_chg74iw21().s[57]++, new Date(Date.now() - 60 * 60 * 1000));
    const criticalErrorsLastHour =
    /* istanbul ignore next */
    (cov_chg74iw21().s[58]++, this.errorHistory.filter(entry => {
      /* istanbul ignore next */
      cov_chg74iw21().f[9]++;
      cov_chg74iw21().s[59]++;
      return /* istanbul ignore next */(cov_chg74iw21().b[12][0]++, entry.timestamp > oneHourAgo) &&
      /* istanbul ignore next */
      (cov_chg74iw21().b[12][1]++, entry.severity === ErrorSeverity.CRITICAL);
    }).length);
    /* istanbul ignore next */
    cov_chg74iw21().s[60]++;
    if (criticalErrorsLastHour >= this.CRITICAL_ERROR_THRESHOLD) {
      /* istanbul ignore next */
      cov_chg74iw21().b[13][0]++;
      cov_chg74iw21().s[61]++;
      logger_1.logger.error('ALERT: Critical error threshold exceeded', {
        criticalErrorsLastHour,
        threshold: this.CRITICAL_ERROR_THRESHOLD,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[13][1]++;
    }
    // Check error rate spike
    cov_chg74iw21().s[62]++;
    if (this.errorMetrics.errorRate > 50) {
      /* istanbul ignore next */
      cov_chg74iw21().b[14][0]++;
      cov_chg74iw21().s[63]++;
      // More than 50 errors per minute
      logger_1.logger.error('ALERT: High error rate detected', {
        errorRate: this.errorMetrics.errorRate,
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[14][1]++;
    }
  }
  /**
   * Send alerts for critical errors
   */
  sendAlerts(error, context, severity, category) {
    /* istanbul ignore next */
    cov_chg74iw21().f[10]++;
    cov_chg74iw21().s[64]++;
    // In production, this would integrate with alerting services
    // For now, we'll use enhanced logging
    if (
    /* istanbul ignore next */
    (cov_chg74iw21().b[16][0]++, severity === ErrorSeverity.CRITICAL) ||
    /* istanbul ignore next */
    (cov_chg74iw21().b[16][1]++, category === ErrorCategory.SECURITY)) {
      /* istanbul ignore next */
      cov_chg74iw21().b[15][0]++;
      cov_chg74iw21().s[65]++;
      logger_1.logger.error('ALERT TRIGGERED', {
        alertType: 'critical_error',
        error: error.message,
        severity,
        category,
        context,
        timestamp: new Date().toISOString(),
        requiresImmediateAttention: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_chg74iw21().b[15][1]++;
    }
  }
  /**
   * Get error metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_chg74iw21().f[11]++;
    cov_chg74iw21().s[66]++;
    this.calculateErrorRate();
    /* istanbul ignore next */
    cov_chg74iw21().s[67]++;
    return {
      ...this.errorMetrics
    };
  }
  /**
   * Get recent errors
   */
  getRecentErrors(limit =
  /* istanbul ignore next */
  (cov_chg74iw21().b[17][0]++, 50)) {
    /* istanbul ignore next */
    cov_chg74iw21().f[12]++;
    cov_chg74iw21().s[68]++;
    return this.errorHistory.slice(-limit).reverse(); // Most recent first
  }
  /**
   * Get errors by category
   */
  getErrorsByCategory(category, limit =
  /* istanbul ignore next */
  (cov_chg74iw21().b[18][0]++, 20)) {
    /* istanbul ignore next */
    cov_chg74iw21().f[13]++;
    cov_chg74iw21().s[69]++;
    return this.errorHistory.filter(entry => {
      /* istanbul ignore next */
      cov_chg74iw21().f[14]++;
      cov_chg74iw21().s[70]++;
      return entry.category === category;
    }).slice(-limit).reverse();
  }
  /**
   * Get error summary for health checks
   */
  getHealthSummary() {
    /* istanbul ignore next */
    cov_chg74iw21().f[15]++;
    const {
      errorCount,
      errorRate,
      criticalErrors,
      lastError
    } =
    /* istanbul ignore next */
    (cov_chg74iw21().s[71]++, this.errorMetrics);
    let status =
    /* istanbul ignore next */
    (cov_chg74iw21().s[72]++, 'healthy');
    /* istanbul ignore next */
    cov_chg74iw21().s[73]++;
    if (
    /* istanbul ignore next */
    (cov_chg74iw21().b[20][0]++, criticalErrors > 0) ||
    /* istanbul ignore next */
    (cov_chg74iw21().b[20][1]++, errorRate > 50)) {
      /* istanbul ignore next */
      cov_chg74iw21().b[19][0]++;
      cov_chg74iw21().s[74]++;
      status = 'critical';
    } else {
      /* istanbul ignore next */
      cov_chg74iw21().b[19][1]++;
      cov_chg74iw21().s[75]++;
      if (errorRate > 20) {
        /* istanbul ignore next */
        cov_chg74iw21().b[21][0]++;
        cov_chg74iw21().s[76]++;
        status = 'warning';
      } else
      /* istanbul ignore next */
      {
        cov_chg74iw21().b[21][1]++;
      }
    }
    /* istanbul ignore next */
    cov_chg74iw21().s[77]++;
    return {
      status,
      errorCount,
      errorRate,
      criticalErrors,
      lastError
    };
  }
  /**
   * Clear old error history (cleanup)
   */
  cleanup() {
    /* istanbul ignore next */
    cov_chg74iw21().f[16]++;
    const oneDayAgo =
    /* istanbul ignore next */
    (cov_chg74iw21().s[78]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
    /* istanbul ignore next */
    cov_chg74iw21().s[79]++;
    this.errorHistory = this.errorHistory.filter(entry => {
      /* istanbul ignore next */
      cov_chg74iw21().f[17]++;
      cov_chg74iw21().s[80]++;
      return entry.timestamp > oneDayAgo;
    });
  }
}
// Create singleton instance
/* istanbul ignore next */
cov_chg74iw21().s[81]++;
exports.errorTrackingService = new ErrorTrackingService();
// Helper functions for common error scenarios
/* istanbul ignore next */
cov_chg74iw21().s[82]++;
exports.trackError = {
  authentication: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[22][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[18]++;
    cov_chg74iw21().s[83]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.HIGH, ErrorCategory.AUTHENTICATION);
  },
  authorization: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[23][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[19]++;
    cov_chg74iw21().s[84]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.HIGH, ErrorCategory.AUTHORIZATION);
  },
  validation: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[24][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[20]++;
    cov_chg74iw21().s[85]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.LOW, ErrorCategory.VALIDATION);
  },
  database: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[25][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[21]++;
    cov_chg74iw21().s[86]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.HIGH, ErrorCategory.DATABASE);
  },
  security: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[26][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[22]++;
    cov_chg74iw21().s[87]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.CRITICAL, ErrorCategory.SECURITY);
  },
  externalService: (error, context =
  /* istanbul ignore next */
  (cov_chg74iw21().b[27][0]++, {})) => {
    /* istanbul ignore next */
    cov_chg74iw21().f[23]++;
    cov_chg74iw21().s[88]++;
    exports.errorTrackingService.trackError(error, context, ErrorSeverity.MEDIUM, ErrorCategory.EXTERNAL_SERVICE);
  }
};
/* istanbul ignore next */
cov_chg74iw21().s[89]++;
exports.default = exports.errorTrackingService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,