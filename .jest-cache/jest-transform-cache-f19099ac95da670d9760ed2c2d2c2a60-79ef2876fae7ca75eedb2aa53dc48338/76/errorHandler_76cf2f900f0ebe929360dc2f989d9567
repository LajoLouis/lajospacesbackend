ea69cd0303ced08c26480d9999c253c5
"use strict";

/* istanbul ignore next */
function cov_1vly55lmil() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\middleware\\errorHandler.ts";
  var hash = "0b8fd95a55a54f7375fdb63c6b1e8bbe5c5bbecc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\middleware\\errorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "6": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "12": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "13": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "14": {
        start: {
          line: 24,
          column: 60
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "15": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "17": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "18": {
        start: {
          line: 33,
          column: 18
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "19": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 95
        }
      },
      "20": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 67
        }
      },
      "21": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "22": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "23": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 91
        }
      },
      "24": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 100
        }
      },
      "25": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "26": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "27": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "28": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "29": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "30": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 62
        }
      },
      "31": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "32": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "33": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "34": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 32
        }
      },
      "35": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "36": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "37": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 43
        }
      },
      "38": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "39": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 45
        }
      },
      "40": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "41": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 37
        }
      },
      "42": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "43": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 33
        }
      },
      "44": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "45": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 40
        }
      },
      "46": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "47": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 76
        }
      },
      "48": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "49": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 84
        }
      },
      "50": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 47
        }
      },
      "51": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 90
        }
      },
      "52": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "53": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 38
        }
      },
      "54": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 39
        }
      },
      "55": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "56": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 56
        }
      },
      "57": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 57
        }
      },
      "58": {
        start: {
          line: 183,
          column: 0
        },
        end: {
          line: 183,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 65
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "handleValidationError",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 30
          }
        },
        loc: {
          start: {
            line: 23,
            column: 38
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 52
          }
        },
        loc: {
          start: {
            line: 24,
            column: 60
          },
          end: {
            line: 24,
            column: 71
          }
        },
        line: 24
      },
      "3": {
        name: "handleDuplicateKeyError",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 32
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "handleCastError",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 24
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 40
      },
      "5": {
        name: "handleJWTError",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 23
          }
        },
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 47
      },
      "6": {
        name: "handleJWTExpiredError",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 30
          }
        },
        loc: {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 53
      },
      "7": {
        name: "sendErrorDev",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 59
      },
      "8": {
        name: "sendErrorProd",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 22
          }
        },
        loc: {
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 78
      },
      "9": {
        name: "errorHandler",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 21
          }
        },
        loc: {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 113
      },
      "10": {
        name: "catchAsync",
        decl: {
          start: {
            line: 172,
            column: 9
          },
          end: {
            line: 172,
            column: 19
          }
        },
        loc: {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 172
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 173,
            column: 11
          },
          end: {
            line: 173,
            column: 12
          }
        },
        loc: {
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 173
      },
      "12": {
        name: "createError",
        decl: {
          start: {
            line: 180,
            column: 9
          },
          end: {
            line: 180,
            column: 20
          }
        },
        loc: {
          start: {
            line: 180,
            column: 48
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 180
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 37
          },
          end: {
            line: 11,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 53
          },
          end: {
            line: 11,
            column: 57
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 108,
            column: 5
          }
        }],
        line: 80
      },
      "2": {
        loc: {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 117,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 117,
            column: 49
          }
        }, {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 56
          }
        }],
        line: 117
      },
      "3": {
        loc: {
          start: {
            line: 129,
            column: 14
          },
          end: {
            line: 129,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 129,
            column: 67
          }
        }, {
          start: {
            line: 129,
            column: 70
          },
          end: {
            line: 129,
            column: 74
          }
        }],
        line: 129
      },
      "4": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "11": {
        loc: {
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 39
          }
        }, {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 46
          }
        }],
        line: 159
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 160,
            column: 81
          }
        }, {
          start: {
            line: 160,
            column: 84
          },
          end: {
            line: 160,
            column: 89
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 167,
            column: 5
          }
        }],
        line: 162
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\middleware\\errorHandler.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\middleware\\errorHandler.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\r\nimport { logger } from '../utils/logger';\r\nimport { config } from '../config/environment';\r\n\r\n// Custom error class\r\nexport class AppError extends Error {\r\n  public statusCode: number;\r\n  public isOperational: boolean;\r\n  public code: string | undefined;\r\n\r\n  constructor(message: string, statusCode: number, isOperational = true, code?: string) {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.isOperational = isOperational;\r\n    this.code = code;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\n// Error response interface\r\ninterface ErrorResponse {\r\n  success: false;\r\n  error: {\r\n    message: string;\r\n    code?: string | undefined;\r\n    statusCode: number;\r\n    timestamp: string;\r\n    path: string;\r\n    method: string;\r\n    stack?: string | undefined;\r\n    details?: any;\r\n  };\r\n}\r\n\r\n/**\r\n * Handle MongoDB validation errors\r\n */\r\nfunction handleValidationError(error: any): AppError {\r\n  const errors = Object.values(error.errors).map((err: any) => err.message);\r\n  const message = `Validation Error: ${errors.join('. ')}`;\r\n  return new AppError(message, 400, true, 'VALIDATION_ERROR');\r\n}\r\n\r\n/**\r\n * Handle MongoDB duplicate key errors\r\n */\r\nfunction handleDuplicateKeyError(error: any): AppError {\r\n  const field = Object.keys(error.keyValue)[0];\r\n  const value = error.keyValue[field];\r\n  const message = `Duplicate value for field '${field}': ${value}. Please use another value.`;\r\n  return new AppError(message, 409, true, 'DUPLICATE_KEY_ERROR');\r\n}\r\n\r\n/**\r\n * Handle MongoDB cast errors\r\n */\r\nfunction handleCastError(error: any): AppError {\r\n  const message = `Invalid ${error.path}: ${error.value}`;\r\n  return new AppError(message, 400, true, 'CAST_ERROR');\r\n}\r\n\r\n/**\r\n * Handle JWT errors\r\n */\r\nfunction handleJWTError(): AppError {\r\n  return new AppError('Invalid token. Please log in again.', 401, true, 'INVALID_TOKEN');\r\n}\r\n\r\n/**\r\n * Handle JWT expired errors\r\n */\r\nfunction handleJWTExpiredError(): AppError {\r\n  return new AppError('Your token has expired. Please log in again.', 401, true, 'TOKEN_EXPIRED');\r\n}\r\n\r\n/**\r\n * Send error response in development\r\n */\r\nfunction sendErrorDev(err: AppError, req: Request, res: Response): void {\r\n  const errorResponse: ErrorResponse = {\r\n    success: false,\r\n    error: {\r\n      message: err.message,\r\n      code: err.code,\r\n      statusCode: err.statusCode,\r\n      timestamp: new Date().toISOString(),\r\n      path: req.path,\r\n      method: req.method,\r\n      stack: err.stack,\r\n      details: err\r\n    }\r\n  };\r\n\r\n  res.status(err.statusCode).json(errorResponse);\r\n}\r\n\r\n/**\r\n * Send error response in production\r\n */\r\nfunction sendErrorProd(err: AppError, req: Request, res: Response): void {\r\n  // Operational, trusted error: send message to client\r\n  if (err.isOperational) {\r\n    const errorResponse: ErrorResponse = {\r\n      success: false,\r\n      error: {\r\n        message: err.message,\r\n        code: err.code,\r\n        statusCode: err.statusCode,\r\n        timestamp: new Date().toISOString(),\r\n        path: req.path,\r\n        method: req.method\r\n      }\r\n    };\r\n\r\n    res.status(err.statusCode).json(errorResponse);\r\n  } else {\r\n    // Programming or other unknown error: don't leak error details\r\n    logger.error('Unknown error occurred:', err);\r\n\r\n    const errorResponse: ErrorResponse = {\r\n      success: false,\r\n      error: {\r\n        message: 'Something went wrong!',\r\n        statusCode: 500,\r\n        timestamp: new Date().toISOString(),\r\n        path: req.path,\r\n        method: req.method\r\n      }\r\n    };\r\n\r\n    res.status(500).json(errorResponse);\r\n  }\r\n}\r\n\r\n/**\r\n * Global error handling middleware\r\n */\r\nexport function errorHandler(\r\n  err: any,\r\n  req: Request,\r\n  res: Response,\r\n  _next: NextFunction\r\n): void {\r\n  let error = { ...err };\r\n  error.message = err.message;\r\n\r\n  // Log error\r\n  logger.error(`Error ${err.statusCode || 500}: ${err.message}`, {\r\n    error: {\r\n      name: err.name,\r\n      message: err.message,\r\n      stack: err.stack\r\n    },\r\n    request: {\r\n      method: req.method,\r\n      url: req.url,\r\n      ip: req.ip,\r\n      userAgent: req.get('User-Agent')\r\n    },\r\n    user: (req as any).user ? { id: (req as any).user.id, email: (req as any).user.email } : null\r\n  });\r\n\r\n  // MongoDB validation error\r\n  if (err.name === 'ValidationError') {\r\n    error = handleValidationError(err);\r\n  }\r\n\r\n  // MongoDB duplicate key error\r\n  if (err.code === 11000) {\r\n    error = handleDuplicateKeyError(err);\r\n  }\r\n\r\n  // MongoDB cast error\r\n  if (err.name === 'CastError') {\r\n    error = handleCastError(err);\r\n  }\r\n\r\n  // JWT invalid signature\r\n  if (err.name === 'JsonWebTokenError') {\r\n    error = handleJWTError();\r\n  }\r\n\r\n  // JWT expired\r\n  if (err.name === 'TokenExpiredError') {\r\n    error = handleJWTExpiredError();\r\n  }\r\n\r\n  // Multer file upload errors\r\n  if (err.code === 'LIMIT_FILE_SIZE') {\r\n    error = new AppError('File too large', 413, true, 'FILE_TOO_LARGE');\r\n  }\r\n\r\n  if (err.code === 'LIMIT_UNEXPECTED_FILE') {\r\n    error = new AppError('Unexpected file field', 400, true, 'UNEXPECTED_FILE');\r\n  }\r\n\r\n  // Set default values\r\n  error.statusCode = error.statusCode || 500;\r\n  error.isOperational = error.isOperational !== undefined ? error.isOperational : false;\r\n\r\n  // Send error response\r\n  if (config.NODE_ENV === 'development') {\r\n    sendErrorDev(error, req, res);\r\n  } else {\r\n    sendErrorProd(error, req, res);\r\n  }\r\n}\r\n\r\n/**\r\n * Catch async errors wrapper\r\n */\r\nexport function catchAsync(fn: Function) {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    Promise.resolve(fn(req, res, next)).catch(next);\r\n  };\r\n}\r\n\r\n/**\r\n * Create operational error\r\n */\r\nexport function createError(message: string, statusCode: number, code?: string): AppError {\r\n  return new AppError(message, statusCode, true, code);\r\n}\r\n\r\nexport default errorHandler;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b8fd95a55a54f7375fdb63c6b1e8bbe5c5bbecc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vly55lmil = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vly55lmil();
cov_1vly55lmil().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1vly55lmil().s[1]++;
exports.AppError = void 0;
/* istanbul ignore next */
cov_1vly55lmil().s[2]++;
exports.errorHandler = errorHandler;
/* istanbul ignore next */
cov_1vly55lmil().s[3]++;
exports.catchAsync = catchAsync;
/* istanbul ignore next */
cov_1vly55lmil().s[4]++;
exports.createError = createError;
const logger_1 =
/* istanbul ignore next */
(cov_1vly55lmil().s[5]++, require("../utils/logger"));
const environment_1 =
/* istanbul ignore next */
(cov_1vly55lmil().s[6]++, require("../config/environment"));
// Custom error class
class AppError extends Error {
  constructor(message, statusCode, isOperational =
  /* istanbul ignore next */
  (cov_1vly55lmil().b[0][0]++, true), code) {
    /* istanbul ignore next */
    cov_1vly55lmil().f[0]++;
    cov_1vly55lmil().s[7]++;
    super(message);
    /* istanbul ignore next */
    cov_1vly55lmil().s[8]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_1vly55lmil().s[9]++;
    this.isOperational = isOperational;
    /* istanbul ignore next */
    cov_1vly55lmil().s[10]++;
    this.code = code;
    /* istanbul ignore next */
    cov_1vly55lmil().s[11]++;
    Error.captureStackTrace(this, this.constructor);
  }
}
/* istanbul ignore next */
cov_1vly55lmil().s[12]++;
exports.AppError = AppError;
/**
 * Handle MongoDB validation errors
 */
function handleValidationError(error) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[1]++;
  const errors =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[13]++, Object.values(error.errors).map(err => {
    /* istanbul ignore next */
    cov_1vly55lmil().f[2]++;
    cov_1vly55lmil().s[14]++;
    return err.message;
  }));
  const message =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[15]++, `Validation Error: ${errors.join('. ')}`);
  /* istanbul ignore next */
  cov_1vly55lmil().s[16]++;
  return new AppError(message, 400, true, 'VALIDATION_ERROR');
}
/**
 * Handle MongoDB duplicate key errors
 */
function handleDuplicateKeyError(error) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[3]++;
  const field =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[17]++, Object.keys(error.keyValue)[0]);
  const value =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[18]++, error.keyValue[field]);
  const message =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[19]++, `Duplicate value for field '${field}': ${value}. Please use another value.`);
  /* istanbul ignore next */
  cov_1vly55lmil().s[20]++;
  return new AppError(message, 409, true, 'DUPLICATE_KEY_ERROR');
}
/**
 * Handle MongoDB cast errors
 */
function handleCastError(error) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[4]++;
  const message =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[21]++, `Invalid ${error.path}: ${error.value}`);
  /* istanbul ignore next */
  cov_1vly55lmil().s[22]++;
  return new AppError(message, 400, true, 'CAST_ERROR');
}
/**
 * Handle JWT errors
 */
function handleJWTError() {
  /* istanbul ignore next */
  cov_1vly55lmil().f[5]++;
  cov_1vly55lmil().s[23]++;
  return new AppError('Invalid token. Please log in again.', 401, true, 'INVALID_TOKEN');
}
/**
 * Handle JWT expired errors
 */
function handleJWTExpiredError() {
  /* istanbul ignore next */
  cov_1vly55lmil().f[6]++;
  cov_1vly55lmil().s[24]++;
  return new AppError('Your token has expired. Please log in again.', 401, true, 'TOKEN_EXPIRED');
}
/**
 * Send error response in development
 */
function sendErrorDev(err, req, res) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[7]++;
  const errorResponse =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[25]++, {
    success: false,
    error: {
      message: err.message,
      code: err.code,
      statusCode: err.statusCode,
      timestamp: new Date().toISOString(),
      path: req.path,
      method: req.method,
      stack: err.stack,
      details: err
    }
  });
  /* istanbul ignore next */
  cov_1vly55lmil().s[26]++;
  res.status(err.statusCode).json(errorResponse);
}
/**
 * Send error response in production
 */
function sendErrorProd(err, req, res) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[8]++;
  cov_1vly55lmil().s[27]++;
  // Operational, trusted error: send message to client
  if (err.isOperational) {
    /* istanbul ignore next */
    cov_1vly55lmil().b[1][0]++;
    const errorResponse =
    /* istanbul ignore next */
    (cov_1vly55lmil().s[28]++, {
      success: false,
      error: {
        message: err.message,
        code: err.code,
        statusCode: err.statusCode,
        timestamp: new Date().toISOString(),
        path: req.path,
        method: req.method
      }
    });
    /* istanbul ignore next */
    cov_1vly55lmil().s[29]++;
    res.status(err.statusCode).json(errorResponse);
  } else {
    /* istanbul ignore next */
    cov_1vly55lmil().b[1][1]++;
    cov_1vly55lmil().s[30]++;
    // Programming or other unknown error: don't leak error details
    logger_1.logger.error('Unknown error occurred:', err);
    const errorResponse =
    /* istanbul ignore next */
    (cov_1vly55lmil().s[31]++, {
      success: false,
      error: {
        message: 'Something went wrong!',
        statusCode: 500,
        timestamp: new Date().toISOString(),
        path: req.path,
        method: req.method
      }
    });
    /* istanbul ignore next */
    cov_1vly55lmil().s[32]++;
    res.status(500).json(errorResponse);
  }
}
/**
 * Global error handling middleware
 */
function errorHandler(err, req, res, _next) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[9]++;
  let error =
  /* istanbul ignore next */
  (cov_1vly55lmil().s[33]++, {
    ...err
  });
  /* istanbul ignore next */
  cov_1vly55lmil().s[34]++;
  error.message = err.message;
  // Log error
  /* istanbul ignore next */
  cov_1vly55lmil().s[35]++;
  logger_1.logger.error(`Error ${
  /* istanbul ignore next */
  (cov_1vly55lmil().b[2][0]++, err.statusCode) ||
  /* istanbul ignore next */
  (cov_1vly55lmil().b[2][1]++, 500)}: ${err.message}`, {
    error: {
      name: err.name,
      message: err.message,
      stack: err.stack
    },
    request: {
      method: req.method,
      url: req.url,
      ip: req.ip,
      userAgent: req.get('User-Agent')
    },
    user: req.user ?
    /* istanbul ignore next */
    (cov_1vly55lmil().b[3][0]++, {
      id: req.user.id,
      email: req.user.email
    }) :
    /* istanbul ignore next */
    (cov_1vly55lmil().b[3][1]++, null)
  });
  // MongoDB validation error
  /* istanbul ignore next */
  cov_1vly55lmil().s[36]++;
  if (err.name === 'ValidationError') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[4][0]++;
    cov_1vly55lmil().s[37]++;
    error = handleValidationError(err);
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[4][1]++;
  }
  // MongoDB duplicate key error
  cov_1vly55lmil().s[38]++;
  if (err.code === 11000) {
    /* istanbul ignore next */
    cov_1vly55lmil().b[5][0]++;
    cov_1vly55lmil().s[39]++;
    error = handleDuplicateKeyError(err);
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[5][1]++;
  }
  // MongoDB cast error
  cov_1vly55lmil().s[40]++;
  if (err.name === 'CastError') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[6][0]++;
    cov_1vly55lmil().s[41]++;
    error = handleCastError(err);
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[6][1]++;
  }
  // JWT invalid signature
  cov_1vly55lmil().s[42]++;
  if (err.name === 'JsonWebTokenError') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[7][0]++;
    cov_1vly55lmil().s[43]++;
    error = handleJWTError();
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[7][1]++;
  }
  // JWT expired
  cov_1vly55lmil().s[44]++;
  if (err.name === 'TokenExpiredError') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[8][0]++;
    cov_1vly55lmil().s[45]++;
    error = handleJWTExpiredError();
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[8][1]++;
  }
  // Multer file upload errors
  cov_1vly55lmil().s[46]++;
  if (err.code === 'LIMIT_FILE_SIZE') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[9][0]++;
    cov_1vly55lmil().s[47]++;
    error = new AppError('File too large', 413, true, 'FILE_TOO_LARGE');
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[9][1]++;
  }
  cov_1vly55lmil().s[48]++;
  if (err.code === 'LIMIT_UNEXPECTED_FILE') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[10][0]++;
    cov_1vly55lmil().s[49]++;
    error = new AppError('Unexpected file field', 400, true, 'UNEXPECTED_FILE');
  } else
  /* istanbul ignore next */
  {
    cov_1vly55lmil().b[10][1]++;
  }
  // Set default values
  cov_1vly55lmil().s[50]++;
  error.statusCode =
  /* istanbul ignore next */
  (cov_1vly55lmil().b[11][0]++, error.statusCode) ||
  /* istanbul ignore next */
  (cov_1vly55lmil().b[11][1]++, 500);
  /* istanbul ignore next */
  cov_1vly55lmil().s[51]++;
  error.isOperational = error.isOperational !== undefined ?
  /* istanbul ignore next */
  (cov_1vly55lmil().b[12][0]++, error.isOperational) :
  /* istanbul ignore next */
  (cov_1vly55lmil().b[12][1]++, false);
  // Send error response
  /* istanbul ignore next */
  cov_1vly55lmil().s[52]++;
  if (environment_1.config.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1vly55lmil().b[13][0]++;
    cov_1vly55lmil().s[53]++;
    sendErrorDev(error, req, res);
  } else {
    /* istanbul ignore next */
    cov_1vly55lmil().b[13][1]++;
    cov_1vly55lmil().s[54]++;
    sendErrorProd(error, req, res);
  }
}
/**
 * Catch async errors wrapper
 */
function catchAsync(fn) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[10]++;
  cov_1vly55lmil().s[55]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_1vly55lmil().f[11]++;
    cov_1vly55lmil().s[56]++;
    Promise.resolve(fn(req, res, next)).catch(next);
  };
}
/**
 * Create operational error
 */
function createError(message, statusCode, code) {
  /* istanbul ignore next */
  cov_1vly55lmil().f[12]++;
  cov_1vly55lmil().s[57]++;
  return new AppError(message, statusCode, true, code);
}
/* istanbul ignore next */
cov_1vly55lmil().s[58]++;
exports.default = errorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,