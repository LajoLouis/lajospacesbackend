9cbfee09389ec6eae6d6779df2fda247
"use strict";

/* istanbul ignore next */
function cov_1gm27qx9hf() {
  var path = "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\propertySearch.controller.ts";
  var hash = "8db544275573d3b6d35b32d8f67d1bcb0428fc51";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\propertySearch.controller.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 200
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 48
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 51
        }
      },
      "6": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "7": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 257,
          column: 3
        }
      },
      "8": {
        start: {
          line: 13,
          column: 323
        },
        end: {
          line: 13,
          column: 331
        }
      },
      "9": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "15": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "23": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 64
        }
      },
      "24": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "29": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "30": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "32": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "33": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 44
        }
      },
      "34": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "35": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "37": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "38": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "39": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "40": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "41": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "42": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "43": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "44": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 84
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "46": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 59
        }
      },
      "47": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "48": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 84
        }
      },
      "49": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "50": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "51": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "52": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "53": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "54": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 59
        }
      },
      "55": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "56": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "57": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "58": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 59
        }
      },
      "59": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "60": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 70
        }
      },
      "61": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "62": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "63": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "64": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "65": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 101
        }
      },
      "66": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "67": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "68": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 109
        }
      },
      "69": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "70": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 109
        }
      },
      "71": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "72": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 44
        }
      },
      "73": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "74": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "75": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "76": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 46
        }
      },
      "77": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "78": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 42
        }
      },
      "79": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "80": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "81": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "82": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 64
        }
      },
      "83": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "84": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 65
        }
      },
      "85": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "86": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 35
        }
      },
      "87": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 166,
          column: 64
        }
      },
      "88": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 64
        }
      },
      "89": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "90": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "91": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 34
        }
      },
      "92": {
        start: {
          line: 172,
          column: 21
        },
        end: {
          line: 172,
          column: 36
        }
      },
      "93": {
        start: {
          line: 173,
          column: 17
        },
        end: {
          line: 173,
          column: 41
        }
      },
      "94": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 26
        }
      },
      "95": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "96": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 51
        }
      },
      "97": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 56
        }
      },
      "98": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "99": {
        start: {
          line: 183,
          column: 41
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "100": {
        start: {
          line: 193,
          column: 36
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "101": {
        start: {
          line: 193,
          column: 64
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "102": {
        start: {
          line: 212,
          column: 55
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "103": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "104": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "105": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "106": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 63
        }
      },
      "107": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 60
        }
      },
      "108": {
        start: {
          line: 261,
          column: 0
        },
        end: {
          line: 360,
          column: 3
        }
      },
      "109": {
        start: {
          line: 262,
          column: 131
        },
        end: {
          line: 262,
          column: 140
        }
      },
      "110": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "111": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "112": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "113": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 61
        }
      },
      "114": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 52
        }
      },
      "115": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "116": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "117": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 59
        }
      },
      "118": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 50
        }
      },
      "119": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "120": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 49
        }
      },
      "121": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 297,
          column: 74
        }
      },
      "122": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 74
        }
      },
      "123": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 299,
          column: 74
        }
      },
      "124": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 74
        }
      },
      "125": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 302,
          column: 26
        }
      },
      "126": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "127": {
        start: {
          line: 306,
          column: 9
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "128": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 48
        }
      },
      "129": {
        start: {
          line: 309,
          column: 9
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "130": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "131": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 33
        }
      },
      "132": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "133": {
        start: {
          line: 316,
          column: 27
        },
        end: {
          line: 320,
          column: 19
        }
      },
      "134": {
        start: {
          line: 321,
          column: 36
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "135": {
        start: {
          line: 321,
          column: 64
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "136": {
        start: {
          line: 337,
          column: 55
        },
        end: {
          line: 337,
          column: 66
        }
      },
      "137": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 354,
          column: 11
        }
      },
      "138": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 72
        }
      },
      "139": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 67
        }
      },
      "140": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 444,
          column: 3
        }
      },
      "141": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "142": {
        start: {
          line: 368,
          column: 70
        },
        end: {
          line: 385,
          column: 10
        }
      },
      "143": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "144": {
        start: {
          line: 395,
          column: 29
        },
        end: {
          line: 395,
          column: 43
        }
      },
      "145": {
        start: {
          line: 400,
          column: 29
        },
        end: {
          line: 400,
          column: 43
        }
      },
      "146": {
        start: {
          line: 406,
          column: 51
        },
        end: {
          line: 406,
          column: 56
        }
      },
      "147": {
        start: {
          line: 407,
          column: 53
        },
        end: {
          line: 407,
          column: 58
        }
      },
      "148": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      },
      "149": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 68
        }
      },
      "150": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 68
        }
      },
      "151": {
        start: {
          line: 448,
          column: 0
        },
        end: {
          line: 507,
          column: 3
        }
      },
      "152": {
        start: {
          line: 449,
          column: 48
        },
        end: {
          line: 449,
          column: 57
        }
      },
      "153": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 455,
          column: 5
        }
      },
      "154": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 454,
          column: 11
        }
      },
      "155": {
        start: {
          line: 456,
          column: 22
        },
        end: {
          line: 456,
          column: 27
        }
      },
      "156": {
        start: {
          line: 457,
          column: 24
        },
        end: {
          line: 457,
          column: 26
        }
      },
      "157": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 506,
          column: 5
        }
      },
      "158": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "159": {
        start: {
          line: 461,
          column: 30
        },
        end: {
          line: 480,
          column: 14
        }
      },
      "160": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 485,
          column: 14
        }
      },
      "161": {
        start: {
          line: 482,
          column: 63
        },
        end: {
          line: 482,
          column: 123
        }
      },
      "162": {
        start: {
          line: 483,
          column: 64
        },
        end: {
          line: 483,
          column: 126
        }
      },
      "163": {
        start: {
          line: 484,
          column: 61
        },
        end: {
          line: 484,
          column: 121
        }
      },
      "164": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "165": {
        start: {
          line: 489,
          column: 31
        },
        end: {
          line: 495,
          column: 23
        }
      },
      "166": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 66
        }
      },
      "167": {
        start: {
          line: 496,
          column: 57
        },
        end: {
          line: 496,
          column: 64
        }
      },
      "168": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 501,
          column: 11
        }
      },
      "169": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 66
        }
      },
      "170": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 505,
          column: 72
        }
      },
      "171": {
        start: {
          line: 511,
          column: 0
        },
        end: {
          line: 529,
          column: 3
        }
      },
      "172": {
        start: {
          line: 512,
          column: 80
        },
        end: {
          line: 512,
          column: 88
        }
      },
      "173": {
        start: {
          line: 513,
          column: 19
        },
        end: {
          line: 513,
          column: 32
        }
      },
      "174": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 528,
          column: 7
        }
      },
      "175": {
        start: {
          line: 533,
          column: 0
        },
        end: {
          line: 544,
          column: 3
        }
      },
      "176": {
        start: {
          line: 537,
          column: 4
        },
        end: {
          line: 543,
          column: 7
        }
      },
      "177": {
        start: {
          line: 548,
          column: 0
        },
        end: {
          line: 557,
          column: 3
        }
      },
      "178": {
        start: {
          line: 553,
          column: 4
        },
        end: {
          line: 556,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 56
          },
          end: {
            line: 12,
            column: 57
          }
        },
        loc: {
          start: {
            line: 12,
            column: 76
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 100,
            column: 39
          },
          end: {
            line: 100,
            column: 40
          }
        },
        loc: {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 100
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 36
          }
        },
        loc: {
          start: {
            line: 108,
            column: 43
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 108
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 193,
            column: 51
          },
          end: {
            line: 193,
            column: 52
          }
        },
        loc: {
          start: {
            line: 193,
            column: 64
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 193
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 212,
            column: 48
          },
          end: {
            line: 212,
            column: 49
          }
        },
        loc: {
          start: {
            line: 212,
            column: 55
          },
          end: {
            line: 212,
            column: 66
          }
        },
        line: 212
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 261,
            column: 59
          },
          end: {
            line: 261,
            column: 60
          }
        },
        loc: {
          start: {
            line: 261,
            column: 79
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 261
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 321,
            column: 52
          }
        },
        loc: {
          start: {
            line: 321,
            column: 64
          },
          end: {
            line: 342,
            column: 9
          }
        },
        line: 321
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 337,
            column: 48
          },
          end: {
            line: 337,
            column: 49
          }
        },
        loc: {
          start: {
            line: 337,
            column: 55
          },
          end: {
            line: 337,
            column: 66
          }
        },
        line: 337
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 364,
            column: 59
          }
        },
        loc: {
          start: {
            line: 364,
            column: 79
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 364
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 395,
            column: 21
          },
          end: {
            line: 395,
            column: 22
          }
        },
        loc: {
          start: {
            line: 395,
            column: 29
          },
          end: {
            line: 395,
            column: 43
          }
        },
        line: 395
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 400,
            column: 21
          },
          end: {
            line: 400,
            column: 22
          }
        },
        loc: {
          start: {
            line: 400,
            column: 29
          },
          end: {
            line: 400,
            column: 43
          }
        },
        line: 400
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 406,
            column: 41
          },
          end: {
            line: 406,
            column: 42
          }
        },
        loc: {
          start: {
            line: 406,
            column: 51
          },
          end: {
            line: 406,
            column: 56
          }
        },
        line: 406
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 407,
            column: 43
          },
          end: {
            line: 407,
            column: 44
          }
        },
        loc: {
          start: {
            line: 407,
            column: 53
          },
          end: {
            line: 407,
            column: 58
          }
        },
        line: 407
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 448,
            column: 60
          },
          end: {
            line: 448,
            column: 61
          }
        },
        loc: {
          start: {
            line: 448,
            column: 80
          },
          end: {
            line: 507,
            column: 1
          }
        },
        line: 448
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 482,
            column: 53
          },
          end: {
            line: 482,
            column: 54
          }
        },
        loc: {
          start: {
            line: 482,
            column: 63
          },
          end: {
            line: 482,
            column: 123
          }
        },
        line: 482
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 483,
            column: 53
          },
          end: {
            line: 483,
            column: 54
          }
        },
        loc: {
          start: {
            line: 483,
            column: 64
          },
          end: {
            line: 483,
            column: 126
          }
        },
        line: 483
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 484,
            column: 51
          },
          end: {
            line: 484,
            column: 52
          }
        },
        loc: {
          start: {
            line: 484,
            column: 61
          },
          end: {
            line: 484,
            column: 121
          }
        },
        line: 484
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 496,
            column: 52
          },
          end: {
            line: 496,
            column: 53
          }
        },
        loc: {
          start: {
            line: 496,
            column: 57
          },
          end: {
            line: 496,
            column: 64
          }
        },
        line: 496
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 511,
            column: 50
          },
          end: {
            line: 511,
            column: 51
          }
        },
        loc: {
          start: {
            line: 511,
            column: 70
          },
          end: {
            line: 529,
            column: 1
          }
        },
        line: 511
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 533,
            column: 56
          },
          end: {
            line: 533,
            column: 57
          }
        },
        loc: {
          start: {
            line: 533,
            column: 77
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 533
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 548,
            column: 57
          },
          end: {
            line: 548,
            column: 58
          }
        },
        loc: {
          start: {
            line: 548,
            column: 78
          },
          end: {
            line: 557,
            column: 1
          }
        },
        line: 548
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 164
          },
          end: {
            line: 13,
            column: 172
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 171
          },
          end: {
            line: 13,
            column: 172
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 174
          },
          end: {
            line: 13,
            column: 184
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 182
          },
          end: {
            line: 13,
            column: 184
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 186
          },
          end: {
            line: 13,
            column: 206
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 195
          },
          end: {
            line: 13,
            column: 206
          }
        }],
        line: 13
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 208
          },
          end: {
            line: 13,
            column: 226
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 220
          },
          end: {
            line: 13,
            column: 226
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: 28,
            column: 13
          },
          end: {
            line: 30,
            column: 9
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 39,
            column: 9
          }
        }],
        line: 34
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 16
          }
        }, {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 42,
            column: 28
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 58,
            column: 13
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 40
          }
        }, {
          start: {
            line: 51,
            column: 45
          },
          end: {
            line: 51,
            column: 57
          }
        }, {
          start: {
            line: 51,
            column: 61
          },
          end: {
            line: 51,
            column: 73
          }
        }],
        line: 51
      },
      "16": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 54,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 54,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "17": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 56,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 56,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "18": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "19": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: 71,
            column: 13
          },
          end: {
            line: 73,
            column: 9
          }
        }],
        line: 64
      },
      "20": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 41
          }
        }, {
          start: {
            line: 64,
            column: 46
          },
          end: {
            line: 64,
            column: 59
          }
        }, {
          start: {
            line: 64,
            column: 63
          },
          end: {
            line: 64,
            column: 76
          }
        }],
        line: 64
      },
      "21": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 67,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 67,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "22": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 69,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 69,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "23": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "24": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "25": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "26": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "27": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "28": {
        loc: {
          start: {
            line: 93,
            column: 34
          },
          end: {
            line: 93,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 34
          },
          end: {
            line: 93,
            column: 61
          }
        }, {
          start: {
            line: 93,
            column: 65
          },
          end: {
            line: 93,
            column: 69
          }
        }],
        line: 93
      },
      "29": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "30": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "31": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "32": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "33": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "34": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "35": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "36": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 27
          }
        }, {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 57
          }
        }],
        line: 125
      },
      "37": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "38": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 38
          }
        }, {
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 78
          }
        }],
        line: 126
      },
      "39": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "40": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "41": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "42": {
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "43": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "44": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: 147,
            column: 13
          },
          end: {
            line: 149,
            column: 9
          }
        }],
        line: 144
      },
      "45": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "46": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "47": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 20
          }
        }, {
          start: {
            line: 156,
            column: 24
          },
          end: {
            line: 156,
            column: 37
          }
        }],
        line: 156
      },
      "48": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "49": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 161,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 161,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "50": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "51": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 163,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 163,
            column: 20
          }
        }, {
          start: {
            line: 163,
            column: 24
          },
          end: {
            line: 163,
            column: 37
          }
        }],
        line: 163
      },
      "52": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 166,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "53": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "54": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "55": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: 176,
            column: 17
          },
          end: {
            line: 176,
            column: 24
          }
        }],
        line: 176
      },
      "56": {
        loc: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 180,
            column: 51
          }
        }, {
          start: {
            line: 180,
            column: 54
          },
          end: {
            line: 180,
            column: 55
          }
        }],
        line: 180
      },
      "57": {
        loc: {
          start: {
            line: 196,
            column: 67
          },
          end: {
            line: 196,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 103
          },
          end: {
            line: 196,
            column: 108
          }
        }, {
          start: {
            line: 196,
            column: 111
          },
          end: {
            line: 196,
            column: 113
          }
        }],
        line: 196
      },
      "58": {
        loc: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 67
          }
        }, {
          start: {
            line: 212,
            column: 71
          },
          end: {
            line: 212,
            column: 91
          }
        }, {
          start: {
            line: 212,
            column: 95
          },
          end: {
            line: 212,
            column: 99
          }
        }],
        line: 212
      },
      "59": {
        loc: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 213,
            column: 47
          }
        }, {
          start: {
            line: 213,
            column: 51
          },
          end: {
            line: 213,
            column: 52
          }
        }],
        line: 213
      },
      "60": {
        loc: {
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 23
          },
          end: {
            line: 217,
            column: 48
          }
        }, {
          start: {
            line: 217,
            column: 52
          },
          end: {
            line: 217,
            column: 53
          }
        }],
        line: 217
      },
      "61": {
        loc: {
          start: {
            line: 218,
            column: 27
          },
          end: {
            line: 218,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 27
          },
          end: {
            line: 218,
            column: 56
          }
        }, {
          start: {
            line: 218,
            column: 60
          },
          end: {
            line: 218,
            column: 61
          }
        }],
        line: 218
      },
      "62": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "63": {
        loc: {
          start: {
            line: 247,
            column: 29
          },
          end: {
            line: 247,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 29
          },
          end: {
            line: 247,
            column: 34
          }
        }, {
          start: {
            line: 247,
            column: 38
          },
          end: {
            line: 247,
            column: 55
          }
        }],
        line: 247
      },
      "64": {
        loc: {
          start: {
            line: 262,
            column: 33
          },
          end: {
            line: 262,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 42
          },
          end: {
            line: 262,
            column: 46
          }
        }],
        line: 262
      },
      "65": {
        loc: {
          start: {
            line: 262,
            column: 95
          },
          end: {
            line: 262,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 103
          },
          end: {
            line: 262,
            column: 105
          }
        }],
        line: 262
      },
      "66": {
        loc: {
          start: {
            line: 262,
            column: 107
          },
          end: {
            line: 262,
            column: 126
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 116
          },
          end: {
            line: 262,
            column: 126
          }
        }],
        line: 262
      },
      "67": {
        loc: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "68": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        }, {
          start: {
            line: 282,
            column: 13
          },
          end: {
            line: 284,
            column: 9
          }
        }],
        line: 279
      },
      "69": {
        loc: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "70": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: 290,
            column: 13
          },
          end: {
            line: 292,
            column: 9
          }
        }],
        line: 287
      },
      "71": {
        loc: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "72": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 16
          }
        }, {
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 294,
            column: 28
          }
        }],
        line: 294
      },
      "73": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 297,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 297,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "74": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "75": {
        loc: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: 306,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        }],
        line: 303
      },
      "76": {
        loc: {
          start: {
            line: 306,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: 309,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        }],
        line: 306
      },
      "77": {
        loc: {
          start: {
            line: 309,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: 312,
            column: 9
          },
          end: {
            line: 314,
            column: 5
          }
        }],
        line: 309
      },
      "78": {
        loc: {
          start: {
            line: 337,
            column: 26
          },
          end: {
            line: 337,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 26
          },
          end: {
            line: 337,
            column: 67
          }
        }, {
          start: {
            line: 337,
            column: 71
          },
          end: {
            line: 337,
            column: 91
          }
        }, {
          start: {
            line: 337,
            column: 95
          },
          end: {
            line: 337,
            column: 99
          }
        }],
        line: 337
      },
      "79": {
        loc: {
          start: {
            line: 340,
            column: 23
          },
          end: {
            line: 340,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 23
          },
          end: {
            line: 340,
            column: 48
          }
        }, {
          start: {
            line: 340,
            column: 52
          },
          end: {
            line: 340,
            column: 53
          }
        }],
        line: 340
      },
      "80": {
        loc: {
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 405,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 405,
            column: 38
          }
        }, {
          start: {
            line: 405,
            column: 42
          },
          end: {
            line: 405,
            column: 94
          }
        }],
        line: 405
      },
      "81": {
        loc: {
          start: {
            line: 449,
            column: 19
          },
          end: {
            line: 449,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 449,
            column: 26
          },
          end: {
            line: 449,
            column: 31
          }
        }],
        line: 449
      },
      "82": {
        loc: {
          start: {
            line: 449,
            column: 33
          },
          end: {
            line: 449,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 449,
            column: 41
          },
          end: {
            line: 449,
            column: 43
          }
        }],
        line: 449
      },
      "83": {
        loc: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "84": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 450,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 450,
            column: 14
          }
        }, {
          start: {
            line: 450,
            column: 18
          },
          end: {
            line: 450,
            column: 34
          }
        }],
        line: 450
      },
      "85": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "86": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 459,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 459,
            column: 26
          }
        }, {
          start: {
            line: 459,
            column: 30
          },
          end: {
            line: 459,
            column: 50
          }
        }],
        line: 459
      },
      "87": {
        loc: {
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 150
          }
        }, {
          start: {
            line: 482,
            column: 154
          },
          end: {
            line: 482,
            column: 156
          }
        }],
        line: 482
      },
      "88": {
        loc: {
          start: {
            line: 482,
            column: 63
          },
          end: {
            line: 482,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 63
          },
          end: {
            line: 482,
            column: 67
          }
        }, {
          start: {
            line: 482,
            column: 71
          },
          end: {
            line: 482,
            column: 123
          }
        }],
        line: 482
      },
      "89": {
        loc: {
          start: {
            line: 483,
            column: 24
          },
          end: {
            line: 483,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 483,
            column: 24
          },
          end: {
            line: 483,
            column: 153
          }
        }, {
          start: {
            line: 483,
            column: 157
          },
          end: {
            line: 483,
            column: 159
          }
        }],
        line: 483
      },
      "90": {
        loc: {
          start: {
            line: 483,
            column: 64
          },
          end: {
            line: 483,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 483,
            column: 64
          },
          end: {
            line: 483,
            column: 69
          }
        }, {
          start: {
            line: 483,
            column: 73
          },
          end: {
            line: 483,
            column: 126
          }
        }],
        line: 483
      },
      "91": {
        loc: {
          start: {
            line: 484,
            column: 23
          },
          end: {
            line: 484,
            column: 154
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 23
          },
          end: {
            line: 484,
            column: 148
          }
        }, {
          start: {
            line: 484,
            column: 152
          },
          end: {
            line: 484,
            column: 154
          }
        }],
        line: 484
      },
      "92": {
        loc: {
          start: {
            line: 484,
            column: 61
          },
          end: {
            line: 484,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 61
          },
          end: {
            line: 484,
            column: 65
          }
        }, {
          start: {
            line: 484,
            column: 69
          },
          end: {
            line: 484,
            column: 121
          }
        }],
        line: 484
      },
      "93": {
        loc: {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "94": {
        loc: {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 26
          }
        }, {
          start: {
            line: 487,
            column: 30
          },
          end: {
            line: 487,
            column: 51
          }
        }],
        line: 487
      },
      "95": {
        loc: {
          start: {
            line: 512,
            column: 34
          },
          end: {
            line: 512,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 512,
            column: 51
          },
          end: {
            line: 512,
            column: 58
          }
        }],
        line: 512
      },
      "96": {
        loc: {
          start: {
            line: 512,
            column: 60
          },
          end: {
            line: 512,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 512,
            column: 71
          },
          end: {
            line: 512,
            column: 75
          }
        }],
        line: 512
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0],
      "65": [0],
      "66": [0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0],
      "82": [0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0],
      "96": [0]
    },
    inputSourceMap: {
      file: "C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\propertySearch.controller.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\MY PC\\Desktop\\lajospaces\\lajospacesbackend\\src\\controllers\\propertySearch.controller.ts"],
      sourcesContent: ["import { Request, Response } from 'express';\r\nimport { Property } from '../models/Property';\r\nimport { logger } from '../utils/logger';\r\nimport { AppError } from '../utils/appError';\r\nimport { catchAsync } from '../utils/catchAsync';\r\nimport { Types } from 'mongoose';\r\n\r\n/**\r\n * Advanced property search with filters\r\n */\r\nexport const searchProperties = catchAsync(async (req: Request, res: Response) => {\r\n  const {\r\n    query,\r\n    propertyType,\r\n    listingType,\r\n    minPrice,\r\n    maxPrice,\r\n    bedrooms,\r\n    bathrooms,\r\n    location,\r\n    amenities,\r\n    rules,\r\n    availableFrom,\r\n    availableTo,\r\n    roommatePreferences,\r\n    page = 1,\r\n    limit = 20,\r\n    sortBy = 'createdAt',\r\n    sortOrder = 'desc',\r\n    isVerified,\r\n    hasPhotos,\r\n    ownerType,\r\n    createdAfter,\r\n    createdBefore,\r\n    updatedAfter,\r\n    updatedBefore\r\n  } = req.body;\r\n\r\n  // Build search query\r\n  const searchQuery: any = {\r\n    status: 'active',\r\n    isAvailable: true\r\n  };\r\n\r\n  // Text search\r\n  if (query) {\r\n    searchQuery.$text = { $search: query };\r\n  }\r\n\r\n  // Property type filter\r\n  if (propertyType) {\r\n    if (Array.isArray(propertyType)) {\r\n      searchQuery.propertyType = { $in: propertyType };\r\n    } else {\r\n      searchQuery.propertyType = propertyType;\r\n    }\r\n  }\r\n\r\n  // Listing type filter\r\n  if (listingType) {\r\n    if (Array.isArray(listingType)) {\r\n      searchQuery.listingType = { $in: listingType };\r\n    } else {\r\n      searchQuery.listingType = listingType;\r\n    }\r\n  }\r\n\r\n  // Price range filter\r\n  if (minPrice || maxPrice) {\r\n    searchQuery['pricing.rentPerMonth'] = {};\r\n    if (minPrice) searchQuery['pricing.rentPerMonth'].$gte = minPrice;\r\n    if (maxPrice) searchQuery['pricing.rentPerMonth'].$lte = maxPrice;\r\n  }\r\n\r\n  // Bedroom filter\r\n  if (bedrooms) {\r\n    if (typeof bedrooms === 'object' && (bedrooms.min || bedrooms.max)) {\r\n      searchQuery.bedrooms = {};\r\n      if (bedrooms.min) searchQuery.bedrooms.$gte = bedrooms.min;\r\n      if (bedrooms.max) searchQuery.bedrooms.$lte = bedrooms.max;\r\n    } else {\r\n      searchQuery.bedrooms = bedrooms;\r\n    }\r\n  }\r\n\r\n  // Bathroom filter\r\n  if (bathrooms) {\r\n    if (typeof bathrooms === 'object' && (bathrooms.min || bathrooms.max)) {\r\n      searchQuery.bathrooms = {};\r\n      if (bathrooms.min) searchQuery.bathrooms.$gte = bathrooms.min;\r\n      if (bathrooms.max) searchQuery.bathrooms.$lte = bathrooms.max;\r\n    } else {\r\n      searchQuery.bathrooms = bathrooms;\r\n    }\r\n  }\r\n\r\n  // Location filters\r\n  if (location) {\r\n    if (location.city) {\r\n      searchQuery['location.city'] = { $regex: location.city, $options: 'i' };\r\n    }\r\n    if (location.state) {\r\n      searchQuery['location.state'] = location.state;\r\n    }\r\n    if (location.area) {\r\n      searchQuery['location.area'] = { $regex: location.area, $options: 'i' };\r\n    }\r\n    if (location.coordinates) {\r\n      searchQuery['location.coordinates'] = {\r\n        $near: {\r\n          $geometry: {\r\n            type: 'Point',\r\n            coordinates: [location.coordinates.longitude, location.coordinates.latitude]\r\n          },\r\n          $maxDistance: location.coordinates.radius || 5000\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  // Amenities filters\r\n  if (amenities) {\r\n    Object.keys(amenities).forEach(amenity => {\r\n      if (amenities[amenity] === true) {\r\n        searchQuery[`amenities.${amenity}`] = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Rules filters\r\n  if (rules) {\r\n    Object.keys(rules).forEach(rule => {\r\n      if (typeof rules[rule] === 'boolean') {\r\n        searchQuery[`rules.${rule}`] = rules[rule];\r\n      }\r\n    });\r\n  }\r\n\r\n  // Availability filters\r\n  if (availableFrom) {\r\n    searchQuery.availableFrom = { $lte: new Date(availableFrom) };\r\n  }\r\n  if (availableTo) {\r\n    searchQuery.$or = [\r\n      { availableTo: { $exists: false } },\r\n      { availableTo: { $gte: new Date(availableTo) } }\r\n    ];\r\n  }\r\n\r\n  // Roommate preferences (for roommate listings)\r\n  if (roommatePreferences && listingType === 'roommate') {\r\n    if (roommatePreferences.gender && roommatePreferences.gender !== 'any') {\r\n      searchQuery['roommatePreferences.gender'] = { $in: [roommatePreferences.gender, 'any'] };\r\n    }\r\n    if (roommatePreferences.ageRange) {\r\n      if (roommatePreferences.ageRange.min) {\r\n        searchQuery['roommatePreferences.ageRange.max'] = { $gte: roommatePreferences.ageRange.min };\r\n      }\r\n      if (roommatePreferences.ageRange.max) {\r\n        searchQuery['roommatePreferences.ageRange.min'] = { $lte: roommatePreferences.ageRange.max };\r\n      }\r\n    }\r\n  }\r\n\r\n  // Verification filter\r\n  if (isVerified !== undefined) {\r\n    searchQuery.isVerified = isVerified;\r\n  }\r\n\r\n  // Photos filter\r\n  if (hasPhotos !== undefined) {\r\n    if (hasPhotos) {\r\n      searchQuery['photos.0'] = { $exists: true };\r\n    } else {\r\n      searchQuery.photos = { $size: 0 };\r\n    }\r\n  }\r\n\r\n  // Owner type filter\r\n  if (ownerType) {\r\n    searchQuery.ownerType = ownerType;\r\n  }\r\n\r\n  // Date filters\r\n  if (createdAfter || createdBefore) {\r\n    searchQuery.createdAt = {};\r\n    if (createdAfter) searchQuery.createdAt.$gte = new Date(createdAfter);\r\n    if (createdBefore) searchQuery.createdAt.$lte = new Date(createdBefore);\r\n  }\r\n\r\n  if (updatedAfter || updatedBefore) {\r\n    searchQuery.updatedAt = {};\r\n    if (updatedAfter) searchQuery.updatedAt.$gte = new Date(updatedAfter);\r\n    if (updatedBefore) searchQuery.updatedAt.$lte = new Date(updatedBefore);\r\n  }\r\n\r\n  // Pagination\r\n  const pageNum = parseInt(page as string);\r\n  const limitNum = parseInt(limit as string);\r\n  const skip = (pageNum - 1) * limitNum;\r\n\r\n  // Sort options\r\n  const sortOptions: any = {};\r\n  if (query && !sortBy) {\r\n    // If text search, sort by relevance score first\r\n    sortOptions.score = { $meta: 'textScore' };\r\n  }\r\n  sortOptions[sortBy] = sortOrder === 'desc' ? -1 : 1;\r\n\r\n  try {\r\n    // Execute search\r\n    const [properties, totalCount] = await Promise.all([\r\n      Property.find(searchQuery)\r\n        .populate('ownerId', 'firstName lastName email accountType isEmailVerified phoneNumber')\r\n        .sort(sortOptions)\r\n        .skip(skip)\r\n        .limit(limitNum)\r\n        .lean(),\r\n      Property.countDocuments(searchQuery)\r\n    ]);\r\n\r\n    // Format results\r\n    const formattedProperties = properties.map(property => ({\r\n      id: property._id,\r\n      title: property.title,\r\n      description: property.description.substring(0, 200) + (property.description.length > 200 ? '...' : ''),\r\n      propertyType: property.propertyType,\r\n      listingType: property.listingType,\r\n      bedrooms: property.bedrooms,\r\n      bathrooms: property.bathrooms,\r\n      location: {\r\n        city: property.location.city,\r\n        state: property.location.state,\r\n        area: property.location.area,\r\n        address: property.location.address\r\n      },\r\n      pricing: {\r\n        rentPerMonth: property.pricing.rentPerMonth,\r\n        securityDeposit: property.pricing.securityDeposit\r\n      },\r\n      amenities: property.amenities,\r\n      primaryPhoto: property.photos?.find((p: any) => p.isPrimary) || property.photos?.[0] || null,\r\n      photoCount: property.photos?.length || 0,\r\n      isVerified: property.isVerified,\r\n      availableFrom: property.availableFrom,\r\n      analytics: {\r\n        views: property.analytics?.views || 0,\r\n        favorites: property.analytics?.favorites || 0\r\n      },\r\n      owner: {\r\n        id: (property.ownerId as any)._id,\r\n        name: `${(property.ownerId as any).firstName} ${(property.ownerId as any).lastName}`,\r\n        accountType: (property.ownerId as any).accountType,\r\n        isEmailVerified: (property.ownerId as any).isEmailVerified\r\n      },\r\n      createdAt: property.createdAt,\r\n      updatedAt: property.updatedAt\r\n    }));\r\n\r\n    // Log search activity\r\n    if (req.user) {\r\n      logger.info(`Property search by user ${req.user._id}`, {\r\n        query: searchQuery,\r\n        resultsCount: properties.length,\r\n        userId: req.user._id\r\n      });\r\n    }\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: {\r\n        properties: formattedProperties,\r\n        pagination: {\r\n          page: pageNum,\r\n          limit: limitNum,\r\n          total: totalCount,\r\n          pages: Math.ceil(totalCount / limitNum)\r\n        },\r\n        searchQuery: query || 'Advanced search',\r\n        filtersApplied: Object.keys(req.body).length - 3, // Exclude page, limit, sortBy\r\n        totalResults: totalCount\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Property search error:', error);\r\n    throw new AppError('Search failed', 500);\r\n  }\r\n});\r\n\r\n/**\r\n * Find properties near a location\r\n */\r\nexport const getNearbyProperties = catchAsync(async (req: Request, res: Response) => {\r\n  const {\r\n    latitude,\r\n    longitude,\r\n    radius = 5000,\r\n    propertyType,\r\n    listingType,\r\n    minPrice,\r\n    maxPrice,\r\n    limit = 20,\r\n    sortBy = 'distance'\r\n  } = req.query;\r\n\r\n  // Build query\r\n  const searchQuery: any = {\r\n    status: 'active',\r\n    isAvailable: true,\r\n    'location.coordinates': {\r\n      $near: {\r\n        $geometry: {\r\n          type: 'Point',\r\n          coordinates: [parseFloat(longitude as string), parseFloat(latitude as string)]\r\n        },\r\n        $maxDistance: parseInt(radius as string)\r\n      }\r\n    }\r\n  };\r\n\r\n  // Additional filters\r\n  if (propertyType) {\r\n    if (Array.isArray(propertyType)) {\r\n      searchQuery.propertyType = { $in: propertyType };\r\n    } else {\r\n      searchQuery.propertyType = propertyType;\r\n    }\r\n  }\r\n\r\n  if (listingType) {\r\n    if (Array.isArray(listingType)) {\r\n      searchQuery.listingType = { $in: listingType };\r\n    } else {\r\n      searchQuery.listingType = listingType;\r\n    }\r\n  }\r\n\r\n  if (minPrice || maxPrice) {\r\n    searchQuery['pricing.rentPerMonth'] = {};\r\n    if (minPrice) searchQuery['pricing.rentPerMonth'].$gte = parseInt(minPrice as string);\r\n    if (maxPrice) searchQuery['pricing.rentPerMonth'].$lte = parseInt(maxPrice as string);\r\n  }\r\n\r\n  // Sort options\r\n  const sortOptions: any = {};\r\n  if (sortBy === 'distance') {\r\n    // Default sort by distance (already handled by $near)\r\n  } else if (sortBy === 'price') {\r\n    sortOptions['pricing.rentPerMonth'] = 1;\r\n  } else if (sortBy === 'views') {\r\n    sortOptions['analytics.views'] = -1;\r\n  } else {\r\n    sortOptions[sortBy as string] = -1;\r\n  }\r\n\r\n  try {\r\n    const properties = await Property.find(searchQuery)\r\n      .populate('ownerId', 'firstName lastName accountType')\r\n      .sort(sortOptions)\r\n      .limit(parseInt(limit as string))\r\n      .lean();\r\n\r\n    const formattedProperties = properties.map(property => ({\r\n      id: property._id,\r\n      title: property.title,\r\n      propertyType: property.propertyType,\r\n      listingType: property.listingType,\r\n      bedrooms: property.bedrooms,\r\n      bathrooms: property.bathrooms,\r\n      location: {\r\n        city: property.location.city,\r\n        state: property.location.state,\r\n        area: property.location.area,\r\n        coordinates: property.location.coordinates\r\n      },\r\n      pricing: {\r\n        rentPerMonth: property.pricing.rentPerMonth\r\n      },\r\n      primaryPhoto: property.photos?.find((p: any) => p.isPrimary) || property.photos?.[0] || null,\r\n      isVerified: property.isVerified,\r\n      analytics: {\r\n        views: property.analytics?.views || 0\r\n      }\r\n    }));\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: {\r\n        properties: formattedProperties,\r\n        searchCenter: {\r\n          latitude: parseFloat(latitude as string),\r\n          longitude: parseFloat(longitude as string)\r\n        },\r\n        radius: parseInt(radius as string),\r\n        totalResults: properties.length\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Nearby properties search error:', error);\r\n    throw new AppError('Nearby search failed', 500);\r\n  }\r\n});\r\n\r\n/**\r\n * Get available search filters and their options\r\n */\r\nexport const getPropertyFilters = catchAsync(async (_req: Request, res: Response) => {\r\n  try {\r\n    // Get dynamic filter options from database\r\n    const [\r\n      _propertyTypes, // Not used directly, but kept for potential future use\r\n      cities,\r\n      states,\r\n      priceRanges,\r\n      bedroomCounts,\r\n      bathroomCounts\r\n    ] = await Promise.all([\r\n      Property.distinct('propertyType', { status: 'active' }),\r\n      Property.distinct('location.city', { status: 'active' }),\r\n      Property.distinct('location.state', { status: 'active' }),\r\n      Property.aggregate([\r\n        { $match: { status: 'active' } },\r\n        {\r\n          $group: {\r\n            _id: null,\r\n            minPrice: { $min: '$pricing.rentPerMonth' },\r\n            maxPrice: { $max: '$pricing.rentPerMonth' },\r\n            avgPrice: { $avg: '$pricing.rentPerMonth' }\r\n          }\r\n        }\r\n      ]),\r\n      Property.distinct('bedrooms', { status: 'active' }),\r\n      Property.distinct('bathrooms', { status: 'active' })\r\n    ]);\r\n\r\n    const filters = {\r\n      propertyTypes: [\r\n        { value: 'apartment', label: 'Apartment', count: await Property.countDocuments({ propertyType: 'apartment', status: 'active' }) },\r\n        { value: 'house', label: 'House', count: await Property.countDocuments({ propertyType: 'house', status: 'active' }) },\r\n        { value: 'condo', label: 'Condo', count: await Property.countDocuments({ propertyType: 'condo', status: 'active' }) },\r\n        { value: 'studio', label: 'Studio', count: await Property.countDocuments({ propertyType: 'studio', status: 'active' }) },\r\n        { value: 'duplex', label: 'Duplex', count: await Property.countDocuments({ propertyType: 'duplex', status: 'active' }) },\r\n        { value: 'bungalow', label: 'Bungalow', count: await Property.countDocuments({ propertyType: 'bungalow', status: 'active' }) },\r\n        { value: 'mansion', label: 'Mansion', count: await Property.countDocuments({ propertyType: 'mansion', status: 'active' }) }\r\n      ].filter(type => type.count > 0),\r\n\r\n      listingTypes: [\r\n        { value: 'rent', label: 'For Rent', count: await Property.countDocuments({ listingType: 'rent', status: 'active' }) },\r\n        { value: 'roommate', label: 'Roommate', count: await Property.countDocuments({ listingType: 'roommate', status: 'active' }) },\r\n        { value: 'sublet', label: 'Sublet', count: await Property.countDocuments({ listingType: 'sublet', status: 'active' }) }\r\n      ].filter(type => type.count > 0),\r\n\r\n      locations: {\r\n        cities: cities.sort(),\r\n        states: states.sort()\r\n      },\r\n\r\n      priceRange: priceRanges[0] || { minPrice: 0, maxPrice: 1000000, avgPrice: 100000 },\r\n\r\n      bedrooms: bedroomCounts.sort((a, b) => a - b),\r\n      bathrooms: bathroomCounts.sort((a, b) => a - b),\r\n\r\n      amenities: [\r\n        { key: 'wifi', label: 'WiFi' },\r\n        { key: 'parking', label: 'Parking' },\r\n        { key: 'security', label: 'Security' },\r\n        { key: 'generator', label: 'Generator' },\r\n        { key: 'borehole', label: 'Borehole' },\r\n        { key: 'airConditioning', label: 'Air Conditioning' },\r\n        { key: 'kitchen', label: 'Kitchen' },\r\n        { key: 'refrigerator', label: 'Refrigerator' },\r\n        { key: 'furnished', label: 'Furnished' },\r\n        { key: 'tv', label: 'TV' },\r\n        { key: 'washingMachine', label: 'Washing Machine' },\r\n        { key: 'elevator', label: 'Elevator' },\r\n        { key: 'gym', label: 'Gym' },\r\n        { key: 'swimmingPool', label: 'Swimming Pool' },\r\n        { key: 'playground', label: 'Playground' },\r\n        { key: 'prepaidMeter', label: 'Prepaid Meter' },\r\n        { key: 'cableTV', label: 'Cable TV' },\r\n        { key: 'cleaningService', label: 'Cleaning Service' }\r\n      ],\r\n\r\n      sortOptions: [\r\n        { value: 'createdAt', label: 'Newest First' },\r\n        { value: 'pricing.rentPerMonth', label: 'Price: Low to High' },\r\n        { value: 'analytics.views', label: 'Most Popular' },\r\n        { value: 'title', label: 'Alphabetical' }\r\n      ]\r\n    };\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: { filters }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Get property filters error:', error);\r\n    throw new AppError('Failed to get filters', 500);\r\n  }\r\n});\r\n\r\n/**\r\n * Get search suggestions based on query\r\n */\r\nexport const getSearchSuggestions = catchAsync(async (req: Request, res: Response) => {\r\n  const { query, type = 'all', limit = 10 } = req.query;\r\n\r\n  if (!query || (query as string).length < 2) {\r\n    return res.json({\r\n      success: true,\r\n      data: { suggestions: [] }\r\n    });\r\n  }\r\n\r\n  const searchStr = query as string;\r\n  const suggestions: any = {};\r\n\r\n  try {\r\n    if (type === 'all' || type === 'locations') {\r\n      // Location suggestions\r\n      const locations = await Property.aggregate([\r\n        {\r\n          $match: {\r\n            status: 'active',\r\n            $or: [\r\n              { 'location.city': { $regex: searchStr, $options: 'i' } },\r\n              { 'location.state': { $regex: searchStr, $options: 'i' } },\r\n              { 'location.area': { $regex: searchStr, $options: 'i' } }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          $group: {\r\n            _id: null,\r\n            cities: { $addToSet: '$location.city' },\r\n            states: { $addToSet: '$location.state' },\r\n            areas: { $addToSet: '$location.area' }\r\n          }\r\n        }\r\n      ]);\r\n\r\n      suggestions.locations = {\r\n        cities: locations[0]?.cities?.filter((city: string) =>\r\n          city && city.toLowerCase().includes(searchStr.toLowerCase())\r\n        ).slice(0, parseInt(limit as string)) || [],\r\n        states: locations[0]?.states?.filter((state: string) =>\r\n          state && state.toLowerCase().includes(searchStr.toLowerCase())\r\n        ).slice(0, parseInt(limit as string)) || [],\r\n        areas: locations[0]?.areas?.filter((area: string) =>\r\n          area && area.toLowerCase().includes(searchStr.toLowerCase())\r\n        ).slice(0, parseInt(limit as string)) || []\r\n      };\r\n    }\r\n\r\n    if (type === 'all' || type === 'properties') {\r\n      // Property title suggestions\r\n      const properties = await Property.find({\r\n        status: 'active',\r\n        title: { $regex: searchStr, $options: 'i' }\r\n      })\r\n      .select('title')\r\n      .limit(parseInt(limit as string))\r\n      .lean();\r\n\r\n      suggestions.properties = properties.map(p => p.title);\r\n    }\r\n\r\n    return res.json({\r\n      success: true,\r\n      data: { suggestions }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error('Search suggestions error:', error);\r\n    throw new AppError('Failed to get suggestions', 500);\r\n  }\r\n});\r\n\r\n/**\r\n * Save a search query for later\r\n */\r\nexport const saveSearch = catchAsync(async (req: Request, res: Response) => {\r\n  const { name, searchCriteria, alertFrequency = 'never', isActive = true } = req.body;\r\n  const userId = req.user?._id;\r\n\r\n  // TODO: Implement SavedSearch model and logic\r\n  // For now, return a placeholder response\r\n\r\n  return res.json({\r\n    success: true,\r\n    message: 'Search saved successfully',\r\n    data: {\r\n      id: new Types.ObjectId(),\r\n      name,\r\n      searchCriteria,\r\n      alertFrequency,\r\n      isActive,\r\n      userId,\r\n      createdAt: new Date()\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * Get user's saved searches\r\n */\r\nexport const getSavedSearches = catchAsync(async (_req: Request, res: Response) => {\r\n  // const userId = req.user?._id; // Will be needed when SavedSearch model is implemented\r\n\r\n  // TODO: Implement SavedSearch model and logic\r\n  // For now, return empty array\r\n\r\n  return res.json({\r\n    success: true,\r\n    data: {\r\n      savedSearches: [],\r\n      total: 0\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * Delete a saved search\r\n */\r\nexport const deleteSavedSearch = catchAsync(async (_req: Request, res: Response) => {\r\n  // const { id } = req.params; // Will be needed when SavedSearch model is implemented\r\n  // const userId = req.user?._id; // Will be needed when SavedSearch model is implemented\r\n\r\n  // TODO: Implement SavedSearch model and logic\r\n  // For now, return success response\r\n\r\n  return res.json({\r\n    success: true,\r\n    message: 'Saved search deleted successfully'\r\n  });\r\n});\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8db544275573d3b6d35b32d8f67d1bcb0428fc51"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gm27qx9hf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gm27qx9hf();
cov_1gm27qx9hf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gm27qx9hf().s[1]++;
exports.deleteSavedSearch = exports.getSavedSearches = exports.saveSearch = exports.getSearchSuggestions = exports.getPropertyFilters = exports.getNearbyProperties = exports.searchProperties = void 0;
const Property_1 =
/* istanbul ignore next */
(cov_1gm27qx9hf().s[2]++, require("../models/Property"));
const logger_1 =
/* istanbul ignore next */
(cov_1gm27qx9hf().s[3]++, require("../utils/logger"));
const appError_1 =
/* istanbul ignore next */
(cov_1gm27qx9hf().s[4]++, require("../utils/appError"));
const catchAsync_1 =
/* istanbul ignore next */
(cov_1gm27qx9hf().s[5]++, require("../utils/catchAsync"));
const mongoose_1 =
/* istanbul ignore next */
(cov_1gm27qx9hf().s[6]++, require("mongoose"));
/**
 * Advanced property search with filters
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[7]++;
exports.searchProperties = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[0]++;
  const {
    query,
    propertyType,
    listingType,
    minPrice,
    maxPrice,
    bedrooms,
    bathrooms,
    location,
    amenities,
    rules,
    availableFrom,
    availableTo,
    roommatePreferences,
    page =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[0][0]++, 1),
    limit =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[1][0]++, 20),
    sortBy =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[2][0]++, 'createdAt'),
    sortOrder =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[3][0]++, 'desc'),
    isVerified,
    hasPhotos,
    ownerType,
    createdAfter,
    createdBefore,
    updatedAfter,
    updatedBefore
  } =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[8]++, req.body);
  // Build search query
  const searchQuery =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[9]++, {
    status: 'active',
    isAvailable: true
  });
  // Text search
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[10]++;
  if (query) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[4][0]++;
    cov_1gm27qx9hf().s[11]++;
    searchQuery.$text = {
      $search: query
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[4][1]++;
  }
  // Property type filter
  cov_1gm27qx9hf().s[12]++;
  if (propertyType) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[5][0]++;
    cov_1gm27qx9hf().s[13]++;
    if (Array.isArray(propertyType)) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[6][0]++;
      cov_1gm27qx9hf().s[14]++;
      searchQuery.propertyType = {
        $in: propertyType
      };
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[6][1]++;
      cov_1gm27qx9hf().s[15]++;
      searchQuery.propertyType = propertyType;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[5][1]++;
  }
  // Listing type filter
  cov_1gm27qx9hf().s[16]++;
  if (listingType) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[7][0]++;
    cov_1gm27qx9hf().s[17]++;
    if (Array.isArray(listingType)) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[8][0]++;
      cov_1gm27qx9hf().s[18]++;
      searchQuery.listingType = {
        $in: listingType
      };
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[8][1]++;
      cov_1gm27qx9hf().s[19]++;
      searchQuery.listingType = listingType;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[7][1]++;
  }
  // Price range filter
  cov_1gm27qx9hf().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[10][0]++, minPrice) ||
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[10][1]++, maxPrice)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[9][0]++;
    cov_1gm27qx9hf().s[21]++;
    searchQuery['pricing.rentPerMonth'] = {};
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[22]++;
    if (minPrice) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[11][0]++;
      cov_1gm27qx9hf().s[23]++;
      searchQuery['pricing.rentPerMonth'].$gte = minPrice;
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[11][1]++;
    }
    cov_1gm27qx9hf().s[24]++;
    if (maxPrice) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[12][0]++;
      cov_1gm27qx9hf().s[25]++;
      searchQuery['pricing.rentPerMonth'].$lte = maxPrice;
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[12][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[9][1]++;
  }
  // Bedroom filter
  cov_1gm27qx9hf().s[26]++;
  if (bedrooms) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[13][0]++;
    cov_1gm27qx9hf().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[15][0]++, typeof bedrooms === 'object') && (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[15][1]++, bedrooms.min) ||
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[15][2]++, bedrooms.max))) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[14][0]++;
      cov_1gm27qx9hf().s[28]++;
      searchQuery.bedrooms = {};
      /* istanbul ignore next */
      cov_1gm27qx9hf().s[29]++;
      if (bedrooms.min) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[16][0]++;
        cov_1gm27qx9hf().s[30]++;
        searchQuery.bedrooms.$gte = bedrooms.min;
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[16][1]++;
      }
      cov_1gm27qx9hf().s[31]++;
      if (bedrooms.max) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[17][0]++;
        cov_1gm27qx9hf().s[32]++;
        searchQuery.bedrooms.$lte = bedrooms.max;
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[17][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[14][1]++;
      cov_1gm27qx9hf().s[33]++;
      searchQuery.bedrooms = bedrooms;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[13][1]++;
  }
  // Bathroom filter
  cov_1gm27qx9hf().s[34]++;
  if (bathrooms) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[18][0]++;
    cov_1gm27qx9hf().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[20][0]++, typeof bathrooms === 'object') && (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[20][1]++, bathrooms.min) ||
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[20][2]++, bathrooms.max))) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[19][0]++;
      cov_1gm27qx9hf().s[36]++;
      searchQuery.bathrooms = {};
      /* istanbul ignore next */
      cov_1gm27qx9hf().s[37]++;
      if (bathrooms.min) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[21][0]++;
        cov_1gm27qx9hf().s[38]++;
        searchQuery.bathrooms.$gte = bathrooms.min;
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[21][1]++;
      }
      cov_1gm27qx9hf().s[39]++;
      if (bathrooms.max) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[22][0]++;
        cov_1gm27qx9hf().s[40]++;
        searchQuery.bathrooms.$lte = bathrooms.max;
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[22][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[19][1]++;
      cov_1gm27qx9hf().s[41]++;
      searchQuery.bathrooms = bathrooms;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[18][1]++;
  }
  // Location filters
  cov_1gm27qx9hf().s[42]++;
  if (location) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[23][0]++;
    cov_1gm27qx9hf().s[43]++;
    if (location.city) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[24][0]++;
      cov_1gm27qx9hf().s[44]++;
      searchQuery['location.city'] = {
        $regex: location.city,
        $options: 'i'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[24][1]++;
    }
    cov_1gm27qx9hf().s[45]++;
    if (location.state) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[25][0]++;
      cov_1gm27qx9hf().s[46]++;
      searchQuery['location.state'] = location.state;
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[25][1]++;
    }
    cov_1gm27qx9hf().s[47]++;
    if (location.area) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[26][0]++;
      cov_1gm27qx9hf().s[48]++;
      searchQuery['location.area'] = {
        $regex: location.area,
        $options: 'i'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[26][1]++;
    }
    cov_1gm27qx9hf().s[49]++;
    if (location.coordinates) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[27][0]++;
      cov_1gm27qx9hf().s[50]++;
      searchQuery['location.coordinates'] = {
        $near: {
          $geometry: {
            type: 'Point',
            coordinates: [location.coordinates.longitude, location.coordinates.latitude]
          },
          $maxDistance:
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[28][0]++, location.coordinates.radius) ||
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[28][1]++, 5000)
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[27][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[23][1]++;
  }
  // Amenities filters
  cov_1gm27qx9hf().s[51]++;
  if (amenities) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[29][0]++;
    cov_1gm27qx9hf().s[52]++;
    Object.keys(amenities).forEach(amenity => {
      /* istanbul ignore next */
      cov_1gm27qx9hf().f[1]++;
      cov_1gm27qx9hf().s[53]++;
      if (amenities[amenity] === true) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[30][0]++;
        cov_1gm27qx9hf().s[54]++;
        searchQuery[`amenities.${amenity}`] = true;
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[30][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[29][1]++;
  }
  // Rules filters
  cov_1gm27qx9hf().s[55]++;
  if (rules) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[31][0]++;
    cov_1gm27qx9hf().s[56]++;
    Object.keys(rules).forEach(rule => {
      /* istanbul ignore next */
      cov_1gm27qx9hf().f[2]++;
      cov_1gm27qx9hf().s[57]++;
      if (typeof rules[rule] === 'boolean') {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[32][0]++;
        cov_1gm27qx9hf().s[58]++;
        searchQuery[`rules.${rule}`] = rules[rule];
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[32][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[31][1]++;
  }
  // Availability filters
  cov_1gm27qx9hf().s[59]++;
  if (availableFrom) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[33][0]++;
    cov_1gm27qx9hf().s[60]++;
    searchQuery.availableFrom = {
      $lte: new Date(availableFrom)
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[33][1]++;
  }
  cov_1gm27qx9hf().s[61]++;
  if (availableTo) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[34][0]++;
    cov_1gm27qx9hf().s[62]++;
    searchQuery.$or = [{
      availableTo: {
        $exists: false
      }
    }, {
      availableTo: {
        $gte: new Date(availableTo)
      }
    }];
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[34][1]++;
  }
  // Roommate preferences (for roommate listings)
  cov_1gm27qx9hf().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[36][0]++, roommatePreferences) &&
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[36][1]++, listingType === 'roommate')) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[35][0]++;
    cov_1gm27qx9hf().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[38][0]++, roommatePreferences.gender) &&
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[38][1]++, roommatePreferences.gender !== 'any')) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[37][0]++;
      cov_1gm27qx9hf().s[65]++;
      searchQuery['roommatePreferences.gender'] = {
        $in: [roommatePreferences.gender, 'any']
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[37][1]++;
    }
    cov_1gm27qx9hf().s[66]++;
    if (roommatePreferences.ageRange) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[39][0]++;
      cov_1gm27qx9hf().s[67]++;
      if (roommatePreferences.ageRange.min) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[40][0]++;
        cov_1gm27qx9hf().s[68]++;
        searchQuery['roommatePreferences.ageRange.max'] = {
          $gte: roommatePreferences.ageRange.min
        };
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[40][1]++;
      }
      cov_1gm27qx9hf().s[69]++;
      if (roommatePreferences.ageRange.max) {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[41][0]++;
        cov_1gm27qx9hf().s[70]++;
        searchQuery['roommatePreferences.ageRange.min'] = {
          $lte: roommatePreferences.ageRange.max
        };
      } else
      /* istanbul ignore next */
      {
        cov_1gm27qx9hf().b[41][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[39][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[35][1]++;
  }
  // Verification filter
  cov_1gm27qx9hf().s[71]++;
  if (isVerified !== undefined) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[42][0]++;
    cov_1gm27qx9hf().s[72]++;
    searchQuery.isVerified = isVerified;
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[42][1]++;
  }
  // Photos filter
  cov_1gm27qx9hf().s[73]++;
  if (hasPhotos !== undefined) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[43][0]++;
    cov_1gm27qx9hf().s[74]++;
    if (hasPhotos) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[44][0]++;
      cov_1gm27qx9hf().s[75]++;
      searchQuery['photos.0'] = {
        $exists: true
      };
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[44][1]++;
      cov_1gm27qx9hf().s[76]++;
      searchQuery.photos = {
        $size: 0
      };
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[43][1]++;
  }
  // Owner type filter
  cov_1gm27qx9hf().s[77]++;
  if (ownerType) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[45][0]++;
    cov_1gm27qx9hf().s[78]++;
    searchQuery.ownerType = ownerType;
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[45][1]++;
  }
  // Date filters
  cov_1gm27qx9hf().s[79]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[47][0]++, createdAfter) ||
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[47][1]++, createdBefore)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[46][0]++;
    cov_1gm27qx9hf().s[80]++;
    searchQuery.createdAt = {};
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[81]++;
    if (createdAfter) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[48][0]++;
      cov_1gm27qx9hf().s[82]++;
      searchQuery.createdAt.$gte = new Date(createdAfter);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[48][1]++;
    }
    cov_1gm27qx9hf().s[83]++;
    if (createdBefore) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[49][0]++;
      cov_1gm27qx9hf().s[84]++;
      searchQuery.createdAt.$lte = new Date(createdBefore);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[49][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[46][1]++;
  }
  cov_1gm27qx9hf().s[85]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[51][0]++, updatedAfter) ||
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[51][1]++, updatedBefore)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[50][0]++;
    cov_1gm27qx9hf().s[86]++;
    searchQuery.updatedAt = {};
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[87]++;
    if (updatedAfter) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[52][0]++;
      cov_1gm27qx9hf().s[88]++;
      searchQuery.updatedAt.$gte = new Date(updatedAfter);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[52][1]++;
    }
    cov_1gm27qx9hf().s[89]++;
    if (updatedBefore) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[53][0]++;
      cov_1gm27qx9hf().s[90]++;
      searchQuery.updatedAt.$lte = new Date(updatedBefore);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[53][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[50][1]++;
  }
  // Pagination
  const pageNum =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[91]++, parseInt(page));
  const limitNum =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[92]++, parseInt(limit));
  const skip =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[93]++, (pageNum - 1) * limitNum);
  // Sort options
  const sortOptions =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[94]++, {});
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[95]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[55][0]++, query) &&
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[55][1]++, !sortBy)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[54][0]++;
    cov_1gm27qx9hf().s[96]++;
    // If text search, sort by relevance score first
    sortOptions.score = {
      $meta: 'textScore'
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[54][1]++;
  }
  cov_1gm27qx9hf().s[97]++;
  sortOptions[sortBy] = sortOrder === 'desc' ?
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[56][0]++, -1) :
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[56][1]++, 1);
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[98]++;
  try {
    // Execute search
    const [properties, totalCount] =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[99]++, await Promise.all([Property_1.Property.find(searchQuery).populate('ownerId', 'firstName lastName email accountType isEmailVerified phoneNumber').sort(sortOptions).skip(skip).limit(limitNum).lean(), Property_1.Property.countDocuments(searchQuery)]));
    // Format results
    const formattedProperties =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[100]++, properties.map(property => {
      /* istanbul ignore next */
      cov_1gm27qx9hf().f[3]++;
      cov_1gm27qx9hf().s[101]++;
      return {
        id: property._id,
        title: property.title,
        description: property.description.substring(0, 200) + (property.description.length > 200 ?
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[57][0]++, '...') :
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[57][1]++, '')),
        propertyType: property.propertyType,
        listingType: property.listingType,
        bedrooms: property.bedrooms,
        bathrooms: property.bathrooms,
        location: {
          city: property.location.city,
          state: property.location.state,
          area: property.location.area,
          address: property.location.address
        },
        pricing: {
          rentPerMonth: property.pricing.rentPerMonth,
          securityDeposit: property.pricing.securityDeposit
        },
        amenities: property.amenities,
        primaryPhoto:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[58][0]++, property.photos?.find(p => {
          /* istanbul ignore next */
          cov_1gm27qx9hf().f[4]++;
          cov_1gm27qx9hf().s[102]++;
          return p.isPrimary;
        })) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[58][1]++, property.photos?.[0]) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[58][2]++, null),
        photoCount:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[59][0]++, property.photos?.length) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[59][1]++, 0),
        isVerified: property.isVerified,
        availableFrom: property.availableFrom,
        analytics: {
          views:
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[60][0]++, property.analytics?.views) ||
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[60][1]++, 0),
          favorites:
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[61][0]++, property.analytics?.favorites) ||
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[61][1]++, 0)
        },
        owner: {
          id: property.ownerId._id,
          name: `${property.ownerId.firstName} ${property.ownerId.lastName}`,
          accountType: property.ownerId.accountType,
          isEmailVerified: property.ownerId.isEmailVerified
        },
        createdAt: property.createdAt,
        updatedAt: property.updatedAt
      };
    }));
    // Log search activity
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[103]++;
    if (req.user) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[62][0]++;
      cov_1gm27qx9hf().s[104]++;
      logger_1.logger.info(`Property search by user ${req.user._id}`, {
        query: searchQuery,
        resultsCount: properties.length,
        userId: req.user._id
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[62][1]++;
    }
    cov_1gm27qx9hf().s[105]++;
    return res.json({
      success: true,
      data: {
        properties: formattedProperties,
        pagination: {
          page: pageNum,
          limit: limitNum,
          total: totalCount,
          pages: Math.ceil(totalCount / limitNum)
        },
        searchQuery:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[63][0]++, query) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[63][1]++, 'Advanced search'),
        filtersApplied: Object.keys(req.body).length - 3,
        // Exclude page, limit, sortBy
        totalResults: totalCount
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[106]++;
    logger_1.logger.error('Property search error:', error);
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[107]++;
    throw new appError_1.AppError('Search failed', 500);
  }
});
/**
 * Find properties near a location
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[108]++;
exports.getNearbyProperties = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[5]++;
  const {
    latitude,
    longitude,
    radius =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[64][0]++, 5000),
    propertyType,
    listingType,
    minPrice,
    maxPrice,
    limit =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[65][0]++, 20),
    sortBy =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[66][0]++, 'distance')
  } =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[109]++, req.query);
  // Build query
  const searchQuery =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[110]++, {
    status: 'active',
    isAvailable: true,
    'location.coordinates': {
      $near: {
        $geometry: {
          type: 'Point',
          coordinates: [parseFloat(longitude), parseFloat(latitude)]
        },
        $maxDistance: parseInt(radius)
      }
    }
  });
  // Additional filters
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[111]++;
  if (propertyType) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[67][0]++;
    cov_1gm27qx9hf().s[112]++;
    if (Array.isArray(propertyType)) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[68][0]++;
      cov_1gm27qx9hf().s[113]++;
      searchQuery.propertyType = {
        $in: propertyType
      };
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[68][1]++;
      cov_1gm27qx9hf().s[114]++;
      searchQuery.propertyType = propertyType;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[67][1]++;
  }
  cov_1gm27qx9hf().s[115]++;
  if (listingType) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[69][0]++;
    cov_1gm27qx9hf().s[116]++;
    if (Array.isArray(listingType)) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[70][0]++;
      cov_1gm27qx9hf().s[117]++;
      searchQuery.listingType = {
        $in: listingType
      };
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[70][1]++;
      cov_1gm27qx9hf().s[118]++;
      searchQuery.listingType = listingType;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[69][1]++;
  }
  cov_1gm27qx9hf().s[119]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[72][0]++, minPrice) ||
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[72][1]++, maxPrice)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[71][0]++;
    cov_1gm27qx9hf().s[120]++;
    searchQuery['pricing.rentPerMonth'] = {};
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[121]++;
    if (minPrice) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[73][0]++;
      cov_1gm27qx9hf().s[122]++;
      searchQuery['pricing.rentPerMonth'].$gte = parseInt(minPrice);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[73][1]++;
    }
    cov_1gm27qx9hf().s[123]++;
    if (maxPrice) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[74][0]++;
      cov_1gm27qx9hf().s[124]++;
      searchQuery['pricing.rentPerMonth'].$lte = parseInt(maxPrice);
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[74][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[71][1]++;
  }
  // Sort options
  const sortOptions =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[125]++, {});
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[126]++;
  if (sortBy === 'distance') {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[75][0]++;
  } // Default sort by distance (already handled by $near)
  else {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[75][1]++;
    cov_1gm27qx9hf().s[127]++;
    if (sortBy === 'price') {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[76][0]++;
      cov_1gm27qx9hf().s[128]++;
      sortOptions['pricing.rentPerMonth'] = 1;
    } else {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[76][1]++;
      cov_1gm27qx9hf().s[129]++;
      if (sortBy === 'views') {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[77][0]++;
        cov_1gm27qx9hf().s[130]++;
        sortOptions['analytics.views'] = -1;
      } else {
        /* istanbul ignore next */
        cov_1gm27qx9hf().b[77][1]++;
        cov_1gm27qx9hf().s[131]++;
        sortOptions[sortBy] = -1;
      }
    }
  }
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[132]++;
  try {
    const properties =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[133]++, await Property_1.Property.find(searchQuery).populate('ownerId', 'firstName lastName accountType').sort(sortOptions).limit(parseInt(limit)).lean());
    const formattedProperties =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[134]++, properties.map(property => {
      /* istanbul ignore next */
      cov_1gm27qx9hf().f[6]++;
      cov_1gm27qx9hf().s[135]++;
      return {
        id: property._id,
        title: property.title,
        propertyType: property.propertyType,
        listingType: property.listingType,
        bedrooms: property.bedrooms,
        bathrooms: property.bathrooms,
        location: {
          city: property.location.city,
          state: property.location.state,
          area: property.location.area,
          coordinates: property.location.coordinates
        },
        pricing: {
          rentPerMonth: property.pricing.rentPerMonth
        },
        primaryPhoto:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[78][0]++, property.photos?.find(p => {
          /* istanbul ignore next */
          cov_1gm27qx9hf().f[7]++;
          cov_1gm27qx9hf().s[136]++;
          return p.isPrimary;
        })) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[78][1]++, property.photos?.[0]) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[78][2]++, null),
        isVerified: property.isVerified,
        analytics: {
          views:
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[79][0]++, property.analytics?.views) ||
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[79][1]++, 0)
        }
      };
    }));
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[137]++;
    return res.json({
      success: true,
      data: {
        properties: formattedProperties,
        searchCenter: {
          latitude: parseFloat(latitude),
          longitude: parseFloat(longitude)
        },
        radius: parseInt(radius),
        totalResults: properties.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[138]++;
    logger_1.logger.error('Nearby properties search error:', error);
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[139]++;
    throw new appError_1.AppError('Nearby search failed', 500);
  }
});
/**
 * Get available search filters and their options
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[140]++;
exports.getPropertyFilters = (0, catchAsync_1.catchAsync)(async (_req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[8]++;
  cov_1gm27qx9hf().s[141]++;
  try {
    // Get dynamic filter options from database
    const [_propertyTypes,
    // Not used directly, but kept for potential future use
    cities, states, priceRanges, bedroomCounts, bathroomCounts] =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[142]++, await Promise.all([Property_1.Property.distinct('propertyType', {
      status: 'active'
    }), Property_1.Property.distinct('location.city', {
      status: 'active'
    }), Property_1.Property.distinct('location.state', {
      status: 'active'
    }), Property_1.Property.aggregate([{
      $match: {
        status: 'active'
      }
    }, {
      $group: {
        _id: null,
        minPrice: {
          $min: '$pricing.rentPerMonth'
        },
        maxPrice: {
          $max: '$pricing.rentPerMonth'
        },
        avgPrice: {
          $avg: '$pricing.rentPerMonth'
        }
      }
    }]), Property_1.Property.distinct('bedrooms', {
      status: 'active'
    }), Property_1.Property.distinct('bathrooms', {
      status: 'active'
    })]));
    const filters =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().s[143]++, {
      propertyTypes: [{
        value: 'apartment',
        label: 'Apartment',
        count: await Property_1.Property.countDocuments({
          propertyType: 'apartment',
          status: 'active'
        })
      }, {
        value: 'house',
        label: 'House',
        count: await Property_1.Property.countDocuments({
          propertyType: 'house',
          status: 'active'
        })
      }, {
        value: 'condo',
        label: 'Condo',
        count: await Property_1.Property.countDocuments({
          propertyType: 'condo',
          status: 'active'
        })
      }, {
        value: 'studio',
        label: 'Studio',
        count: await Property_1.Property.countDocuments({
          propertyType: 'studio',
          status: 'active'
        })
      }, {
        value: 'duplex',
        label: 'Duplex',
        count: await Property_1.Property.countDocuments({
          propertyType: 'duplex',
          status: 'active'
        })
      }, {
        value: 'bungalow',
        label: 'Bungalow',
        count: await Property_1.Property.countDocuments({
          propertyType: 'bungalow',
          status: 'active'
        })
      }, {
        value: 'mansion',
        label: 'Mansion',
        count: await Property_1.Property.countDocuments({
          propertyType: 'mansion',
          status: 'active'
        })
      }].filter(type => {
        /* istanbul ignore next */
        cov_1gm27qx9hf().f[9]++;
        cov_1gm27qx9hf().s[144]++;
        return type.count > 0;
      }),
      listingTypes: [{
        value: 'rent',
        label: 'For Rent',
        count: await Property_1.Property.countDocuments({
          listingType: 'rent',
          status: 'active'
        })
      }, {
        value: 'roommate',
        label: 'Roommate',
        count: await Property_1.Property.countDocuments({
          listingType: 'roommate',
          status: 'active'
        })
      }, {
        value: 'sublet',
        label: 'Sublet',
        count: await Property_1.Property.countDocuments({
          listingType: 'sublet',
          status: 'active'
        })
      }].filter(type => {
        /* istanbul ignore next */
        cov_1gm27qx9hf().f[10]++;
        cov_1gm27qx9hf().s[145]++;
        return type.count > 0;
      }),
      locations: {
        cities: cities.sort(),
        states: states.sort()
      },
      priceRange:
      /* istanbul ignore next */
      (cov_1gm27qx9hf().b[80][0]++, priceRanges[0]) ||
      /* istanbul ignore next */
      (cov_1gm27qx9hf().b[80][1]++, {
        minPrice: 0,
        maxPrice: 1000000,
        avgPrice: 100000
      }),
      bedrooms: bedroomCounts.sort((a, b) => {
        /* istanbul ignore next */
        cov_1gm27qx9hf().f[11]++;
        cov_1gm27qx9hf().s[146]++;
        return a - b;
      }),
      bathrooms: bathroomCounts.sort((a, b) => {
        /* istanbul ignore next */
        cov_1gm27qx9hf().f[12]++;
        cov_1gm27qx9hf().s[147]++;
        return a - b;
      }),
      amenities: [{
        key: 'wifi',
        label: 'WiFi'
      }, {
        key: 'parking',
        label: 'Parking'
      }, {
        key: 'security',
        label: 'Security'
      }, {
        key: 'generator',
        label: 'Generator'
      }, {
        key: 'borehole',
        label: 'Borehole'
      }, {
        key: 'airConditioning',
        label: 'Air Conditioning'
      }, {
        key: 'kitchen',
        label: 'Kitchen'
      }, {
        key: 'refrigerator',
        label: 'Refrigerator'
      }, {
        key: 'furnished',
        label: 'Furnished'
      }, {
        key: 'tv',
        label: 'TV'
      }, {
        key: 'washingMachine',
        label: 'Washing Machine'
      }, {
        key: 'elevator',
        label: 'Elevator'
      }, {
        key: 'gym',
        label: 'Gym'
      }, {
        key: 'swimmingPool',
        label: 'Swimming Pool'
      }, {
        key: 'playground',
        label: 'Playground'
      }, {
        key: 'prepaidMeter',
        label: 'Prepaid Meter'
      }, {
        key: 'cableTV',
        label: 'Cable TV'
      }, {
        key: 'cleaningService',
        label: 'Cleaning Service'
      }],
      sortOptions: [{
        value: 'createdAt',
        label: 'Newest First'
      }, {
        value: 'pricing.rentPerMonth',
        label: 'Price: Low to High'
      }, {
        value: 'analytics.views',
        label: 'Most Popular'
      }, {
        value: 'title',
        label: 'Alphabetical'
      }]
    });
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[148]++;
    return res.json({
      success: true,
      data: {
        filters
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[149]++;
    logger_1.logger.error('Get property filters error:', error);
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[150]++;
    throw new appError_1.AppError('Failed to get filters', 500);
  }
});
/**
 * Get search suggestions based on query
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[151]++;
exports.getSearchSuggestions = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[13]++;
  const {
    query,
    type =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[81][0]++, 'all'),
    limit =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[82][0]++, 10)
  } =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[152]++, req.query);
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[153]++;
  if (
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[84][0]++, !query) ||
  /* istanbul ignore next */
  (cov_1gm27qx9hf().b[84][1]++, query.length < 2)) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().b[83][0]++;
    cov_1gm27qx9hf().s[154]++;
    return res.json({
      success: true,
      data: {
        suggestions: []
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gm27qx9hf().b[83][1]++;
  }
  const searchStr =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[155]++, query);
  const suggestions =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[156]++, {});
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[157]++;
  try {
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[158]++;
    if (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[86][0]++, type === 'all') ||
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[86][1]++, type === 'locations')) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[85][0]++;
      // Location suggestions
      const locations =
      /* istanbul ignore next */
      (cov_1gm27qx9hf().s[159]++, await Property_1.Property.aggregate([{
        $match: {
          status: 'active',
          $or: [{
            'location.city': {
              $regex: searchStr,
              $options: 'i'
            }
          }, {
            'location.state': {
              $regex: searchStr,
              $options: 'i'
            }
          }, {
            'location.area': {
              $regex: searchStr,
              $options: 'i'
            }
          }]
        }
      }, {
        $group: {
          _id: null,
          cities: {
            $addToSet: '$location.city'
          },
          states: {
            $addToSet: '$location.state'
          },
          areas: {
            $addToSet: '$location.area'
          }
        }
      }]));
      /* istanbul ignore next */
      cov_1gm27qx9hf().s[160]++;
      suggestions.locations = {
        cities:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[87][0]++, locations[0]?.cities?.filter(city => {
          /* istanbul ignore next */
          cov_1gm27qx9hf().f[14]++;
          cov_1gm27qx9hf().s[161]++;
          return /* istanbul ignore next */(cov_1gm27qx9hf().b[88][0]++, city) &&
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[88][1]++, city.toLowerCase().includes(searchStr.toLowerCase()));
        }).slice(0, parseInt(limit))) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[87][1]++, []),
        states:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[89][0]++, locations[0]?.states?.filter(state => {
          /* istanbul ignore next */
          cov_1gm27qx9hf().f[15]++;
          cov_1gm27qx9hf().s[162]++;
          return /* istanbul ignore next */(cov_1gm27qx9hf().b[90][0]++, state) &&
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[90][1]++, state.toLowerCase().includes(searchStr.toLowerCase()));
        }).slice(0, parseInt(limit))) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[89][1]++, []),
        areas:
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[91][0]++, locations[0]?.areas?.filter(area => {
          /* istanbul ignore next */
          cov_1gm27qx9hf().f[16]++;
          cov_1gm27qx9hf().s[163]++;
          return /* istanbul ignore next */(cov_1gm27qx9hf().b[92][0]++, area) &&
          /* istanbul ignore next */
          (cov_1gm27qx9hf().b[92][1]++, area.toLowerCase().includes(searchStr.toLowerCase()));
        }).slice(0, parseInt(limit))) ||
        /* istanbul ignore next */
        (cov_1gm27qx9hf().b[91][1]++, [])
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[85][1]++;
    }
    cov_1gm27qx9hf().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[94][0]++, type === 'all') ||
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[94][1]++, type === 'properties')) {
      /* istanbul ignore next */
      cov_1gm27qx9hf().b[93][0]++;
      // Property title suggestions
      const properties =
      /* istanbul ignore next */
      (cov_1gm27qx9hf().s[165]++, await Property_1.Property.find({
        status: 'active',
        title: {
          $regex: searchStr,
          $options: 'i'
        }
      }).select('title').limit(parseInt(limit)).lean());
      /* istanbul ignore next */
      cov_1gm27qx9hf().s[166]++;
      suggestions.properties = properties.map(p => {
        /* istanbul ignore next */
        cov_1gm27qx9hf().f[17]++;
        cov_1gm27qx9hf().s[167]++;
        return p.title;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gm27qx9hf().b[93][1]++;
    }
    cov_1gm27qx9hf().s[168]++;
    return res.json({
      success: true,
      data: {
        suggestions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[169]++;
    logger_1.logger.error('Search suggestions error:', error);
    /* istanbul ignore next */
    cov_1gm27qx9hf().s[170]++;
    throw new appError_1.AppError('Failed to get suggestions', 500);
  }
});
/**
 * Save a search query for later
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[171]++;
exports.saveSearch = (0, catchAsync_1.catchAsync)(async (req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[18]++;
  const {
    name,
    searchCriteria,
    alertFrequency =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[95][0]++, 'never'),
    isActive =
    /* istanbul ignore next */
    (cov_1gm27qx9hf().b[96][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[172]++, req.body);
  const userId =
  /* istanbul ignore next */
  (cov_1gm27qx9hf().s[173]++, req.user?._id);
  // TODO: Implement SavedSearch model and logic
  // For now, return a placeholder response
  /* istanbul ignore next */
  cov_1gm27qx9hf().s[174]++;
  return res.json({
    success: true,
    message: 'Search saved successfully',
    data: {
      id: new mongoose_1.Types.ObjectId(),
      name,
      searchCriteria,
      alertFrequency,
      isActive,
      userId,
      createdAt: new Date()
    }
  });
});
/**
 * Get user's saved searches
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[175]++;
exports.getSavedSearches = (0, catchAsync_1.catchAsync)(async (_req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[19]++;
  cov_1gm27qx9hf().s[176]++;
  // const userId = req.user?._id; // Will be needed when SavedSearch model is implemented
  // TODO: Implement SavedSearch model and logic
  // For now, return empty array
  return res.json({
    success: true,
    data: {
      savedSearches: [],
      total: 0
    }
  });
});
/**
 * Delete a saved search
 */
/* istanbul ignore next */
cov_1gm27qx9hf().s[177]++;
exports.deleteSavedSearch = (0, catchAsync_1.catchAsync)(async (_req, res) => {
  /* istanbul ignore next */
  cov_1gm27qx9hf().f[20]++;
  cov_1gm27qx9hf().s[178]++;
  // const { id } = req.params; // Will be needed when SavedSearch model is implemented
  // const userId = req.user?._id; // Will be needed when SavedSearch model is implemented
  // TODO: Implement SavedSearch model and logic
  // For now, return success response
  return res.json({
    success: true,
    message: 'Saved search deleted successfully'
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,